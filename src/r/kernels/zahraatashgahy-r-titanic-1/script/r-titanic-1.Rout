
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(rpart)
> # The train and test data is stored in the ../input directory
> train <- read.csv("../input/train.csv")
> test  <- read.csv("../input/test.csv")
> 
> # Create the column child, and indicate whether child or no child
> train$Child <- NA
> train$Child[train$Age < 10] <- 1
> train$Child[train$Age >= 10] <- 0
> test$Child <- NA
> test$Child[test$Age < 10] <- 1
> test$Child[test$Age >= 10] <- 0
> 
> #Create famili_size column
> train$family_size <-NA
> train$family_size <- train$SibSp + train$Parch + 1
> test$family_size <-NA
> test$family_size <- test$SibSp + test$Parch + 1
> 
> # Passenger on row 62 does not have a value for embarkment.
> # Since many passengers embarked at Southampton, we give them the value S.
> train$Embarked[c(62, 891)] <- "S"
> test$Embarked[c(62, 418)] <- "S"
> # Factorize embarkment codes.
> train$Embarked <- factor(train$Embarked)
> test$Embarked <- factor(test$Embarked)
> 
> # Create the tree
> my_tree <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + family_size,
+                       data = train, method = "class", control = rpart.control(minsplit =50, cp = 0))
> 
> # Make prediction
> my_prediction <- predict(my_tree, test, type = "class")
> 
> # Make results ready for submission
> my_solution <- data.frame(PassengerId = test$PassengerId, Survived = my_prediction)
> write.csv(my_solution, file = "my_solution.csv", row.names = FALSE)
> 
> proc.time()
   user  system elapsed 
  0.261   0.054   0.305 
