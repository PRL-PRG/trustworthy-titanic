
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## ----setup, include=FALSE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ## knitr::opts_chunk$set(echo = TRUE ,   tidy = TRUE, size="small")
> knitr::opts_chunk$set(echo = TRUE)
> 
> 
> ## ---- message=F, results='hide'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> #### Load libraries
> library(caret)
Loading required package: lattice
Loading required package: ggplot2
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

> library(rpart)
> library(rpart.plot)
> library(corrplot)
corrplot 0.84 loaded
> library(dplyr)

Attaching package: ‘dplyr’

The following object is masked from ‘package:randomForest’:

    combine

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> 
> testData <- read.csv('../input/test.csv',sep=',',stringsAsFactors = F,header=T)
> trainData <- read.csv('../input/train.csv',sep=',',stringsAsFactors = F,header=T)
> testData$Survived <- NA
> 
> ## Tagging Data 
> trainData$sample = 'training'
> testData$sample = 'testing'
> 
> ## Merging the traning and testing data
> trailData <- bind_rows(trainData, testData)
> tempData <- trailData
> 
> ## Changing Veriables to factor
> trailData$Pclass <- as.factor(trailData$Pclass)
> trailData$Sex <- as.factor(trailData$Sex)
> trailData$Embarked <- as.factor(trailData$Embarked)
> 
> ## Results hidden. Please refer appendix
> str(trailData)
'data.frame':	1309 obs. of  13 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : Factor w/ 4 levels "","C","Q","S": 4 2 4 4 4 3 4 4 4 2 ...
 $ sample     : chr  "training" "training" "training" "training" ...
> summary(trailData)
  PassengerId      Survived      Pclass      Name               Sex     
 Min.   :   1   Min.   :0.0000   1:323   Length:1309        female:466  
 1st Qu.: 328   1st Qu.:0.0000   2:277   Class :character   male  :843  
 Median : 655   Median :0.0000   3:709   Mode  :character               
 Mean   : 655   Mean   :0.3838                                          
 3rd Qu.: 982   3rd Qu.:1.0000                                          
 Max.   :1309   Max.   :1.0000                                          
                NA's   :418                                             
      Age            SibSp            Parch          Ticket         
 Min.   : 0.17   Min.   :0.0000   Min.   :0.000   Length:1309       
 1st Qu.:21.00   1st Qu.:0.0000   1st Qu.:0.000   Class :character  
 Median :28.00   Median :0.0000   Median :0.000   Mode  :character  
 Mean   :29.88   Mean   :0.4989   Mean   :0.385                     
 3rd Qu.:39.00   3rd Qu.:1.0000   3rd Qu.:0.000                     
 Max.   :80.00   Max.   :8.0000   Max.   :9.000                     
 NA's   :263                                                        
      Fare            Cabin           Embarked    sample         
 Min.   :  0.000   Length:1309         :  2    Length:1309       
 1st Qu.:  7.896   Class :character   C:270    Class :character  
 Median : 14.454   Mode  :character   Q:123    Mode  :character  
 Mean   : 33.295                      S:914                      
 3rd Qu.: 31.275                                                 
 Max.   :512.329                                                 
 NA's   :1                                                       
> 
> 
> ## ----echo=TRUE, collapse=TRUE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> sum(is.na(trailData$Age))
[1] 263
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trailData <- mutate(trailData, AgeCat = ifelse(SibSp > 1 , 0, ifelse(Parch > 2, 1, 2)))
> 
> 
> ## ----echo=TRUE, collapse=TRUE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ageModel = rpart(Age ~ Fare + Pclass + SibSp + Parch + AgeCat, data = trailData)
> trailData$predictAge = predict(ageModel,trailData)
> trailData$Age <- ifelse(is.na(trailData$Age), trailData$predictAge, trailData$Age)
> 
> ## Check if any NA values are there 
> numOfNa <- sum(is.na(trailData$Age))
> numOfNa
[1] 0
> 
> 
> ## ----echo=TRUE, collapse=TRUE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ## Check if Embarked is missing & if missing show respective index
> which(trailData$Embarked=="")
[1]  62 830
> 
> 
> ## ----echo=TRUE, collapse=TRUE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trailData[trailData$Embarked=="",]
    PassengerId Survived Pclass                                      Name
62           62        1      1                       Icard, Miss. Amelie
830         830        1      1 Stone, Mrs. George Nelson (Martha Evelyn)
       Sex Age SibSp Parch Ticket Fare Cabin Embarked   sample AgeCat
62  female  38     0     0 113572   80   B28          training      2
830 female  62     0     0 113572   80   B28          training      2
    predictAge
62    40.54743
830   40.54743
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trailData$Embarked <- as.factor(trailData$Embarked)
> emptyEmbarked <- which(trailData$Embarked=="")
> embarkedModel <- train( Embarked ~ Pclass + Fare, data = trailData, method="rpart", na.action = na.pass);
> trailData$Embarked[emptyEmbarked] <- predict(embarkedModel, trailData[emptyEmbarked, ])
> 
> 
> ## ----echo=TRUE, collapse=TRUE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> sum(is.na(trailData$Fare))
[1] 1
> trailData[is.na(trailData$Fare),]
     PassengerId Survived Pclass               Name  Sex  Age SibSp Parch
1044        1044       NA      3 Storey, Mr. Thomas male 60.5     0     0
     Ticket Fare Cabin Embarked  sample AgeCat predictAge
1044   3701   NA              S testing      2   27.43182
> 
> 
> ## ----echo=TRUE, collapse=TRUE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> fareModel <- rpart(Fare ~ Age + Pclass + Embarked + SibSp + Parch , data = trailData)
> emptyFare <- which(is.na(trailData$Fare))
> trailData$Fare[emptyFare] <- predict(fareModel, trailData[emptyFare, ])
> sum(is.na(trailData$Fare))
[1] 0
> 
> 
> ## ----echo=TRUE, collapse=TRUE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> count <- length(which(trailData$Cabin==""))
> count
[1] 1014
> 
> 
> ## ----echo=FALSE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trnData <- trailData[trailData$sample=="training",]
> plot <- ggplot(trnData, aes(Pclass, fill = factor(Survived))) 
> plot <- plot + geom_bar(stat='count', position='dodge') 
> plot <- plot + facet_grid( Sex ~ . ) + coord_flip()
> plot <- plot + labs(title="Men and Women Survived by Passenger Class", x = "Ticket class accorinding to socio-economic status", y ="Survival Count" , fill = "Survival")
> plot
> 
> 
> ## ----echo= FALSE-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> plot2 <- ggplot(trnData, aes(x = Embarked, fill = factor(Survived)))
> plot2 <- plot2 + geom_bar(stat='count', position='dodge')
> plot2 <- plot2 + ggtitle('Passengers per Boarding Location and Survival rate.')
> plot2 <- plot2 + ylab('Survival Count')
> plot2 <- plot2 + xlab('Boarding Location') + theme_minimal()
> plot2 <- plot2 +  scale_fill_discrete(name = "Survival")
> plot2
> 
> 
> ## ----echo = FALSE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> plot <- ggplot(trnData, aes(x = Age, y = Fare)) 
> plot <- plot + geom_point(aes(shape = factor(Survived), colour= factor(Survived))) 
> plot <- plot + facet_grid( Sex ~ . ) + coord_flip()
> plot <- plot + labs(title="Survival by Age, Sex and Fare", x = "Age Of Passengers", y ="Fare passengers paid" , fill = "Survival")
> plot
> 
> 
> ## ----echo=TRUE, collapse=TRUE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trailData <- mutate(trailData, fitness = as.factor(ifelse(trailData$Age <=16 , "Child", ifelse(trailData$Age >=50, "Old", "Adult"))))
> 
> ## View the Fitness Vs Sex distribution
> table(trailData$Sex,trailData$fitness)
        
         Adult Child Old
  female   357    71  38
  male     696    75  72
> 
> 
> ## ----echo=FALSE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trnData <- trailData[trailData$sample=="training",]
> plot <- ggplot(trnData, aes(Pclass, fill = factor(Survived))) 
> plot <- plot + geom_bar(stat='count', position='dodge')
> plot <- plot + facet_grid(Sex ~ fitness )
> plot <- plot + labs(title="Men and Women Survived by Passenger Class and Physical fitness", x = "Ticket class accorinding to socio-economic status", y ="Survival Count" , fill = "Survival")
> plot
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ## Introduce new variable familySize, (+1 is for the individual him or her self)
> trailData <- mutate(trailData, familySize = trailData$SibSp + trailData$Parch + 1)
> 
> 
> ## ----echo=FALSE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trnData <- trailData[trailData$sample=="training",]
> plot1 <- ggplot(trnData, aes(x = familySize, fill = factor(Survived)))
> plot1 <- plot1 + geom_bar(stat='count', position='dodge')
> plot1 <- plot1 + ggtitle('Survival according to family size.')
> plot1 <- plot1 + ylab('Survival Count')
> plot1 <- plot1 + xlab('Family Size') + theme_minimal()
> plot1 <- plot1 +  scale_fill_discrete(name = "Survival")
> plot1
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trailData <- mutate(trailData, familyType = as.factor(ifelse(familySize == 1, "Single", ifelse(familySize > 1 & familySize <= 4, "Small", "Big"))))
> 
> 
> ## ----echo=TRUE, collapse=TRUE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trailData$Title <- gsub('(.*, )|(\\..*)', '', trailData$Name)
> 
> ## View the raw result: Title Vs Sex distribution
> table(trailData$Sex, trailData$Title) 
        
         Capt Col Don Dona  Dr Jonkheer Lady Major Master Miss Mlle Mme  Mr Mrs
  female    0   0   0    1   1        0    1     0      0  260    2   1   0 197
  male      1   4   1    0   7        1    0     2     61    0    0   0 757   0
        
          Ms Rev Sir the Countess
  female   2   0   0            1
  male     0   8   1            0
> 
> 
> ## ----echo=TRUE, collapse=TRUE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trailData$Title <- as.factor(ifelse(trailData$Title == "Mlle", "Miss", ifelse(trailData$Title == "Ms", "Miss", ifelse(trailData$Title == "Mme","Mrs", ifelse(trailData$Title == "Miss", "Miss", ifelse(trailData$Title== "Mrs","Mrs",ifelse(trailData$Title=="Mr", "Mr", ifelse(trailData$Title=="Master","Master","Not Known"))))))))
> 
> ## View the Title Vs Sex distribution
> table(trailData$Sex, trailData$Title) 
        
         Master Miss  Mr Mrs Not Known
  female      0  264   0 198         4
  male       61    0 757   0        25
> 
> 
> ## ----echo = FALSE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trnData <- trailData[trailData$sample=="training",]
> plot <- ggplot(trnData, aes(factor(Survived), fill=Title ) ) + geom_bar(position="dodge") 
> plot <- plot + labs(title="Survival Vs Title", x = "Survival", y ="Count" , fill = "Title")
> plot
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ## Set the seed for reproducibililty
> set.seed(22519)
> 
> ## Splitting data sets to respective traning and test sets
> tstData <- trailData[trailData$sample=="testing",]
> tranData <- trailData[trailData$sample=="training",]
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Train the model using 3-fold CV
> fitControl <- trainControl(method="cv", number=3, verboseIter=F)
> 
> # Fit model with feature engineering features
> fit <- train(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + fitness + familyType + Title, data=tranData, method="rf", trControl=fitControl,importance=TRUE)
> 
> 
> ## ----echo=FALSE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> plot(fit)
> 
> 
> ## ----echo=FALSE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> finalModel <- fit$finalModel
> plot(finalModel)
> legend('topright', colnames(finalModel$err.rate), col=1:3, fill=1:3)
> 
> 
> ## ----echo=TRUE, collapse=TRUE----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> fit$finalModel

Call:
 randomForest(x = x, y = y, mtry = param$mtry, importance = TRUE) 
               Type of random forest: classification
                     Number of trees: 500
No. of variables tried at each split: 2

        OOB estimate of  error rate: 16.72%
Confusion matrix:
    0   1 class.error
0 495  54  0.09836066
1  95 247  0.27777778
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Using model to predict Survival for test data set
> predict <- predict(fit, newdata=tstData)
> #predict
> 
> solution <- data.frame(PassengerID = tstData$PassengerId, Survived = predict)
> write.csv(solution, file = 'predictionSurvivalTitanic.csv', row.names = F)
> 
> 
> ## ----echo=FALSE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> str(tempData)
'data.frame':	1309 obs. of  13 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
 $ sample     : chr  "training" "training" "training" "training" ...
> 
> 
> ## ----echo=FALSE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> summary(tempData)
  PassengerId      Survived          Pclass          Name          
 Min.   :   1   Min.   :0.0000   Min.   :1.000   Length:1309       
 1st Qu.: 328   1st Qu.:0.0000   1st Qu.:2.000   Class :character  
 Median : 655   Median :0.0000   Median :3.000   Mode  :character  
 Mean   : 655   Mean   :0.3838   Mean   :2.295                     
 3rd Qu.: 982   3rd Qu.:1.0000   3rd Qu.:3.000                     
 Max.   :1309   Max.   :1.0000   Max.   :3.000                     
                NA's   :418                                        
     Sex                 Age            SibSp            Parch      
 Length:1309        Min.   : 0.17   Min.   :0.0000   Min.   :0.000  
 Class :character   1st Qu.:21.00   1st Qu.:0.0000   1st Qu.:0.000  
 Mode  :character   Median :28.00   Median :0.0000   Median :0.000  
                    Mean   :29.88   Mean   :0.4989   Mean   :0.385  
                    3rd Qu.:39.00   3rd Qu.:1.0000   3rd Qu.:0.000  
                    Max.   :80.00   Max.   :8.0000   Max.   :9.000  
                    NA's   :263                                     
    Ticket               Fare            Cabin             Embarked        
 Length:1309        Min.   :  0.000   Length:1309        Length:1309       
 Class :character   1st Qu.:  7.896   Class :character   Class :character  
 Mode  :character   Median : 14.454   Mode  :character   Mode  :character  
                    Mean   : 33.295                                        
                    3rd Qu.: 31.275                                        
                    Max.   :512.329                                        
                    NA's   :1                                              
    sample         
 Length:1309       
 Class :character  
 Mode  :character  
                   
                   
                   
                   
> 
> 
> ## ----echo=FALSE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> fit
Random Forest 

891 samples
 10 predictor
  2 classes: '0', '1' 

No pre-processing
Resampling: Cross-Validated (3 fold) 
Summary of sample sizes: 594, 594, 594 
Resampling results across tuning parameters:

  mtry  Accuracy   Kappa    
   2    0.8294052  0.6292281
  10    0.8271605  0.6299011
  18    0.8237935  0.6232162

Accuracy was used to select the optimal model using the largest value.
The final value used for the model was mtry = 2.
> 
> 
> ## ----results="hide", fig.keep='none'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trnData <- trailData[trailData$sample=="training",]
> plot <- ggplot(trnData, aes(Pclass, fill = factor(Survived))) 
> plot <- plot + geom_bar(stat='count', position='dodge') 
> plot <- plot + facet_grid( Sex ~ . ) + coord_flip()
> plot <- plot + labs(title="Men and Women Survived by Passenger Class", x = "Ticket class accorinding to socio-economic status", y ="Survival Count" , fill = "Survival")
> plot
> 
> 
> ## ----results="hide", fig.keep='none'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> plot2 <- ggplot(trnData, aes(x = Embarked, fill = factor(Survived)))
> plot2 <- plot2 + geom_bar(stat='count', position='dodge')
> plot2 <- plot2 + ggtitle('Passengers per Boarding Location and Survival rate.')
> plot2 <- plot2 + ylab('Survival Count')
> plot2 <- plot2 + xlab('Boarding Location') + theme_minimal()
> plot2 <- plot2 +  scale_fill_discrete(name = "Survival")
> plot2
> 
> 
> ## ----results="hide", fig.keep='none'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> plot <- ggplot(trnData, aes(x = Age, y = Fare)) 
> plot <- plot + geom_point(aes(shape = factor(Survived), colour= factor(Survived))) 
> plot <- plot + facet_grid( Sex ~ . ) + coord_flip()
> plot <- plot + labs(title="Survival by Age, Sex and Fare", x = "Age Of Passengers", y ="Fare passengers paid" , fill = "Survival")
> plot
> 
> 
> ## ----results="hide", fig.keep='none'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trnData <- trailData[trailData$sample=="training",]
> plot <- ggplot(trnData, aes(Pclass, fill = factor(Survived))) 
> plot <- plot + geom_bar(stat='count', position='dodge')
> plot <- plot + facet_grid(Sex ~ fitness )
> plot <- plot + labs(title="Men and Women Survived by Passenger Class and Physical fitness", x = "Ticket class accorinding to socio-economic status", y ="Survival Count" , fill = "Survival")
> plot
> 
> 
> ## ----results="hide", fig.keep='none'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trnData <- trailData[trailData$sample=="training",]
> plot1 <- ggplot(trnData, aes(x = familySize, fill = factor(Survived)))
> plot1 <- plot1 + geom_bar(stat='count', position='dodge')
> plot1 <- plot1 + ggtitle('Survival according to family size.')
> plot1 <- plot1 + ylab('Survival Count')
> plot1 <- plot1 + xlab('Family Size') + theme_minimal()
> plot1 <- plot1 +  scale_fill_discrete(name = "Survival")
> plot1
> 
> 
> ## ----results="hide", fig.keep='none'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> trnData <- trailData[trailData$sample=="training",]
> plot <- ggplot(trnData, aes(factor(Survived), fill=Title ) ) + geom_bar(position="dodge") 
> plot <- plot + labs(title="Survival Vs Title", x = "Survival", y ="Count" , fill = "Title")
> plot
> 
> 
> proc.time()
   user  system elapsed 
 11.770   0.324  12.114 
