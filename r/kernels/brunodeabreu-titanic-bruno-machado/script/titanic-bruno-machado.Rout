
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## ---- include=FALSE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(ggplot2) # Data visualization
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(readr) # CSV file I/O, e.g. the read_csv function
> library(dplyr) 

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library('ggplot2')
> 
> train <- read.csv(file='../input/train.csv')
> test <- read.csv(file='../input/test.csv')
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> #dimensão dataset de train
> dim(train)
[1] 891  12
> 
> #dimensão dataset de teste
> dim(test)
[1] 418  11
> 
> 
> ## ----include=FALSE---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> 
> train$Name <- as.character(train$Name)
> test$Name <- as.character(test$Name)
> 
> train$Survived <- factor(train$Survived)
> train$Pclass <- factor(train$Pclass)
> train$Parch <- factor(train$Parch)
> train$SibSp <- factor(train$SibSp)
> train$Sex <- factor(train$Sex)
> 
> test$Parch <- factor(test$Parch)
> test$Pclass <- factor(test$Pclass)
> 
> train$Age[is.na(train$Age)] <- mean(train$Age, na.rm = T)
> test$Age[is.na(test$Age)] = mean(test$Age, na.rm = T)
> 
> 
> 
> ## ---- echo=FALSE-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot(train, aes(Sex )) +geom_bar(aes(fill=factor(Survived)))
> 
> ggplot(train, aes(Pclass)) + geom_bar(aes(fill=factor(Survived)), alpha=0.6)
> 
> 
> 
> ## ----include=FALSE---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> head(subset(train,select=c(2,3,5,6,8,8,10,12)),4)
  Survived Pclass    Sex Age Parch Parch.1    Fare Embarked
1        0      3   male  22     0       0  7.2500        S
2        1      1 female  38     0       0 71.2833        C
3        1      3 female  26     0       0  7.9250        S
4        1      1 female  35     0       0 53.1000        S
> 
> modelo1  = glm(Survived ~. , data = subset(train,select=c(2,3,5,6)), family = binomial)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> summary(modelo1)

Call:
glm(formula = Survived ~ ., family = binomial, data = subset(train, 
    select = c(2, 3, 5, 6)))

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.6490  -0.6636  -0.4198   0.6328   2.4283  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  3.54474    0.36537   9.702  < 2e-16 ***
Pclass2     -1.12216    0.25773  -4.354 1.34e-05 ***
Pclass3     -2.32917    0.24089  -9.669  < 2e-16 ***
Sexmale     -2.61131    0.18671 -13.986  < 2e-16 ***
Age         -0.03330    0.00737  -4.519 6.21e-06 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 1186.66  on 890  degrees of freedom
Residual deviance:  805.29  on 886  degrees of freedom
AIC: 815.29

Number of Fisher Scoring iterations: 5

> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> 
> predicted <- predict(modelo1, newdata = subset(test,select=c(2,4,5,6)), type = "response")
> test$p[predicted >= 0.5] = 1
> test$p[predicted < 0.5] = 0
> 
> 
> solution <- data.frame(PassengerId = test$PassengerId, Survived = test$p)
> head(solution,10)
   PassengerId Survived
1          892        0
2          893        0
3          894        0
4          895        0
5          896        1
6          897        0
7          898        1
8          899        0
9          900        1
10         901        0
> 
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> 
> MC <- table(train$Survived, predict(modelo1) > 0.5)
> MC
   
    FALSE TRUE
  0   514   35
  1   153  189
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> 
> ACC <- sum(diag(MC))/sum(MC)
> ACC
[1] 0.7890011
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> precision <- MC[2,2]/sum(MC[,2])
> precision
[1] 0.84375
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> error <- 1 - ACC
> error
[1] 0.2109989
> 
> 
> 
> proc.time()
   user  system elapsed 
  0.827   0.067   0.892 
