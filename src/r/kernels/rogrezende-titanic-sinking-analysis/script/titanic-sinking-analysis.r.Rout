
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #step 1 - Load de Packages 
> 
> library('ggplot2') # visualization
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library('ggthemes') # visualization
> library('scales') # visualization
Warning message:
package ‘scales’ was built under R version 3.6.2 
> library('dplyr') # data manipulation

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library('VIM') # missing data
Loading required package: colorspace
Loading required package: grid
VIM is ready to use.

Suggestions and bug-reports can be submitted at: https://github.com/statistikat/VIM/issues

Attaching package: ‘VIM’

The following object is masked from ‘package:datasets’:

    sleep

> library('mice') # imputation

Attaching package: ‘mice’

The following objects are masked from ‘package:base’:

    cbind, rbind

Warning message:
package ‘mice’ was built under R version 3.6.2 
> library('randomForest') # classification algorithm
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:dplyr’:

    combine

The following object is masked from ‘package:ggplot2’:

    margin

> 
> 
> #Step 2 : Load the files
> train <- read.csv('../input/train.csv', stringsAsFactors = F)
> test <- read.csv('../input/test.csv', stringsAsFactors = F)
> 
> 
> # Create "full" dataframe 
> full  <- bind_rows(train, test)
> str(full)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
> 
> # Detailed Variables 
> 
> #PassengerId   => Ordinal Passanger Id number 
> #Survived      => Survived (0) and Died (1) 
> #Pclass        => Passenger's class
> #Name          => Passenger's name 
> #Sex           => Passenger's gender 
> #Age           => Passenger's age 
> #Sibsp         => Number of siblings/spouses aboard
> #Parch         => Number of parents/children aboard
> #Ticket        => Passenger's ticket number 
> #Fare          => Fare paid 
> #Cabin         => Cabin
> #Embarked      => Port of embarkation (Q)ueenstown, (S)outhampton and (C)hebourg
> 
> 
> #Step 3: Missing Data (NA)
> #To identify missing data from full dataset we will use a smart function with "is.na" test .
> MData <- sapply(full, function(x) sum(is.na(x))); MData[MData>0]
Survived      Age     Fare 
     418      263        1 
> MData
PassengerId    Survived      Pclass        Name         Sex         Age 
          0         418           0           0           0         263 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           1           0           0 
> 
> #Now let's show a interesting plot about missing data with VIM package. We will check that :
> # => 30% of Survived information is NA 
> # => 20% of Age information is NA 
> # => 0,07% of Fare information is NA  
> #Our task will be completing missing data of Age and Fare. Survived information will be part of predictive analysis.
> 
> aggr_plot <- aggr(full, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(full), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))

 Variables sorted by number of missings: 
    Variable        Count
    Survived 0.3193277311
         Age 0.2009167303
        Fare 0.0007639419
 PassengerId 0.0000000000
      Pclass 0.0000000000
        Name 0.0000000000
         Sex 0.0000000000
       SibSp 0.0000000000
       Parch 0.0000000000
      Ticket 0.0000000000
       Cabin 0.0000000000
    Embarked 0.0000000000
Warning message:
In plot.aggr(res, ...) : not enough horizontal space to display frequencies
> 
> 
> #Let's input data to Age column with mice package .
> #Create TMPfull dataset and complete mice imputation .
> TMPfull <- mice(full,m=5,maxit=50,meth='pmm',seed=500)

 iter imp variable
  1   1  Survived  Age  Fare
  1   2  Survived  Age  Fare
  1   3  Survived  Age  Fare
  1   4  Survived  Age  Fare
  1   5  Survived  Age  Fare
  2   1  Survived  Age  Fare
  2   2  Survived  Age  Fare
  2   3  Survived  Age  Fare
  2   4  Survived  Age  Fare
  2   5  Survived  Age  Fare
  3   1  Survived  Age  Fare
  3   2  Survived  Age  Fare
  3   3  Survived  Age  Fare
  3   4  Survived  Age  Fare
  3   5  Survived  Age  Fare
  4   1  Survived  Age  Fare
  4   2  Survived  Age  Fare
  4   3  Survived  Age  Fare
  4   4  Survived  Age  Fare
  4   5  Survived  Age  Fare
  5   1  Survived  Age  Fare
  5   2  Survived  Age  Fare
  5   3  Survived  Age  Fare
  5   4  Survived  Age  Fare
  5   5  Survived  Age  Fare
  6   1  Survived  Age  Fare
  6   2  Survived  Age  Fare
  6   3  Survived  Age  Fare
  6   4  Survived  Age  Fare
  6   5  Survived  Age  Fare
  7   1  Survived  Age  Fare
  7   2  Survived  Age  Fare
  7   3  Survived  Age  Fare
  7   4  Survived  Age  Fare
  7   5  Survived  Age  Fare
  8   1  Survived  Age  Fare
  8   2  Survived  Age  Fare
  8   3  Survived  Age  Fare
  8   4  Survived  Age  Fare
  8   5  Survived  Age  Fare
  9   1  Survived  Age  Fare
  9   2  Survived  Age  Fare
  9   3  Survived  Age  Fare
  9   4  Survived  Age  Fare
  9   5  Survived  Age  Fare
  10   1  Survived  Age  Fare
  10   2  Survived  Age  Fare
  10   3  Survived  Age  Fare
  10   4  Survived  Age  Fare
  10   5  Survived  Age  Fare
  11   1  Survived  Age  Fare
  11   2  Survived  Age  Fare
  11   3  Survived  Age  Fare
  11   4  Survived  Age  Fare
  11   5  Survived  Age  Fare
  12   1  Survived  Age  Fare
  12   2  Survived  Age  Fare
  12   3  Survived  Age  Fare
  12   4  Survived  Age  Fare
  12   5  Survived  Age  Fare
  13   1  Survived  Age  Fare
  13   2  Survived  Age  Fare
  13   3  Survived  Age  Fare
  13   4  Survived  Age  Fare
  13   5  Survived  Age  Fare
  14   1  Survived  Age  Fare
  14   2  Survived  Age  Fare
  14   3  Survived  Age  Fare
  14   4  Survived  Age  Fare
  14   5  Survived  Age  Fare
  15   1  Survived  Age  Fare
  15   2  Survived  Age  Fare
  15   3  Survived  Age  Fare
  15   4  Survived  Age  Fare
  15   5  Survived  Age  Fare
  16   1  Survived  Age  Fare
  16   2  Survived  Age  Fare
  16   3  Survived  Age  Fare
  16   4  Survived  Age  Fare
  16   5  Survived  Age  Fare
  17   1  Survived  Age  Fare
  17   2  Survived  Age  Fare
  17   3  Survived  Age  Fare
  17   4  Survived  Age  Fare
  17   5  Survived  Age  Fare
  18   1  Survived  Age  Fare
  18   2  Survived  Age  Fare
  18   3  Survived  Age  Fare
  18   4  Survived  Age  Fare
  18   5  Survived  Age  Fare
  19   1  Survived  Age  Fare
  19   2  Survived  Age  Fare
  19   3  Survived  Age  Fare
  19   4  Survived  Age  Fare
  19   5  Survived  Age  Fare
  20   1  Survived  Age  Fare
  20   2  Survived  Age  Fare
  20   3  Survived  Age  Fare
  20   4  Survived  Age  Fare
  20   5  Survived  Age  Fare
  21   1  Survived  Age  Fare
  21   2  Survived  Age  Fare
  21   3  Survived  Age  Fare
  21   4  Survived  Age  Fare
  21   5  Survived  Age  Fare
  22   1  Survived  Age  Fare
  22   2  Survived  Age  Fare
  22   3  Survived  Age  Fare
  22   4  Survived  Age  Fare
  22   5  Survived  Age  Fare
  23   1  Survived  Age  Fare
  23   2  Survived  Age  Fare
  23   3  Survived  Age  Fare
  23   4  Survived  Age  Fare
  23   5  Survived  Age  Fare
  24   1  Survived  Age  Fare
  24   2  Survived  Age  Fare
  24   3  Survived  Age  Fare
  24   4  Survived  Age  Fare
  24   5  Survived  Age  Fare
  25   1  Survived  Age  Fare
  25   2  Survived  Age  Fare
  25   3  Survived  Age  Fare
  25   4  Survived  Age  Fare
  25   5  Survived  Age  Fare
  26   1  Survived  Age  Fare
  26   2  Survived  Age  Fare
  26   3  Survived  Age  Fare
  26   4  Survived  Age  Fare
  26   5  Survived  Age  Fare
  27   1  Survived  Age  Fare
  27   2  Survived  Age  Fare
  27   3  Survived  Age  Fare
  27   4  Survived  Age  Fare
  27   5  Survived  Age  Fare
  28   1  Survived  Age  Fare
  28   2  Survived  Age  Fare
  28   3  Survived  Age  Fare
  28   4  Survived  Age  Fare
  28   5  Survived  Age  Fare
  29   1  Survived  Age  Fare
  29   2  Survived  Age  Fare
  29   3  Survived  Age  Fare
  29   4  Survived  Age  Fare
  29   5  Survived  Age  Fare
  30   1  Survived  Age  Fare
  30   2  Survived  Age  Fare
  30   3  Survived  Age  Fare
  30   4  Survived  Age  Fare
  30   5  Survived  Age  Fare
  31   1  Survived  Age  Fare
  31   2  Survived  Age  Fare
  31   3  Survived  Age  Fare
  31   4  Survived  Age  Fare
  31   5  Survived  Age  Fare
  32   1  Survived  Age  Fare
  32   2  Survived  Age  Fare
  32   3  Survived  Age  Fare
  32   4  Survived  Age  Fare
  32   5  Survived  Age  Fare
  33   1  Survived  Age  Fare
  33   2  Survived  Age  Fare
  33   3  Survived  Age  Fare
  33   4  Survived  Age  Fare
  33   5  Survived  Age  Fare
  34   1  Survived  Age  Fare
  34   2  Survived  Age  Fare
  34   3  Survived  Age  Fare
  34   4  Survived  Age  Fare
  34   5  Survived  Age  Fare
  35   1  Survived  Age  Fare
  35   2  Survived  Age  Fare
  35   3  Survived  Age  Fare
  35   4  Survived  Age  Fare
  35   5  Survived  Age  Fare
  36   1  Survived  Age  Fare
  36   2  Survived  Age  Fare
  36   3  Survived  Age  Fare
  36   4  Survived  Age  Fare
  36   5  Survived  Age  Fare
  37   1  Survived  Age  Fare
  37   2  Survived  Age  Fare
  37   3  Survived  Age  Fare
  37   4  Survived  Age  Fare
  37   5  Survived  Age  Fare
  38   1  Survived  Age  Fare
  38   2  Survived  Age  Fare
  38   3  Survived  Age  Fare
  38   4  Survived  Age  Fare
  38   5  Survived  Age  Fare
  39   1  Survived  Age  Fare
  39   2  Survived  Age  Fare
  39   3  Survived  Age  Fare
  39   4  Survived  Age  Fare
  39   5  Survived  Age  Fare
  40   1  Survived  Age  Fare
  40   2  Survived  Age  Fare
  40   3  Survived  Age  Fare
  40   4  Survived  Age  Fare
  40   5  Survived  Age  Fare
  41   1  Survived  Age  Fare
  41   2  Survived  Age  Fare
  41   3  Survived  Age  Fare
  41   4  Survived  Age  Fare
  41   5  Survived  Age  Fare
  42   1  Survived  Age  Fare
  42   2  Survived  Age  Fare
  42   3  Survived  Age  Fare
  42   4  Survived  Age  Fare
  42   5  Survived  Age  Fare
  43   1  Survived  Age  Fare
  43   2  Survived  Age  Fare
  43   3  Survived  Age  Fare
  43   4  Survived  Age  Fare
  43   5  Survived  Age  Fare
  44   1  Survived  Age  Fare
  44   2  Survived  Age  Fare
  44   3  Survived  Age  Fare
  44   4  Survived  Age  Fare
  44   5  Survived  Age  Fare
  45   1  Survived  Age  Fare
  45   2  Survived  Age  Fare
  45   3  Survived  Age  Fare
  45   4  Survived  Age  Fare
  45   5  Survived  Age  Fare
  46   1  Survived  Age  Fare
  46   2  Survived  Age  Fare
  46   3  Survived  Age  Fare
  46   4  Survived  Age  Fare
  46   5  Survived  Age  Fare
  47   1  Survived  Age  Fare
  47   2  Survived  Age  Fare
  47   3  Survived  Age  Fare
  47   4  Survived  Age  Fare
  47   5  Survived  Age  Fare
  48   1  Survived  Age  Fare
  48   2  Survived  Age  Fare
  48   3  Survived  Age  Fare
  48   4  Survived  Age  Fare
  48   5  Survived  Age  Fare
  49   1  Survived  Age  Fare
  49   2  Survived  Age  Fare
  49   3  Survived  Age  Fare
  49   4  Survived  Age  Fare
  49   5  Survived  Age  Fare
  50   1  Survived  Age  Fare
  50   2  Survived  Age  Fare
  50   3  Survived  Age  Fare
  50   4  Survived  Age  Fare
  50   5  Survived  Age  Fare
Warning message:
Number of logged events: 5 
> TMPComplete <- complete(TMPfull)
> 
> #Below we can see an example of the first 30 rows of Age column.  
> #Attention to rows 06, 18, 20, 27, 29, 30. 
> full$Age[1:30]
 [1] 22 38 26 35 35 NA 54  2 27 14  4 58 20 39 14 55  2 NA 31 NA 35 34 15 28  8
[26] 38 NA 19 NA NA
> TMPComplete$Age[1:30]
 [1] 22 38 26 35 35 24 54  2 27 14  4 58 20 39 14 55  2 18 31  9 35 34 15 28  8
[26] 38 23 19 43 39
> 
> #Update Age column with new Age result .  
> full$Age <- TMPComplete$Age
> 
> #Check missing data again. Notice that the column Age is not listed anymore .  
> NData <- sapply(full, function(x) sum(is.na(x))); NData[NData>0]
Survived     Fare 
     418        1 
>                 
> # Missing Fare Information 
> FareM <- full[is.na(full$Fare),]
> FareM
     PassengerId Survived Pclass               Name  Sex  Age SibSp Parch
1044        1044       NA      3 Storey, Mr. Thomas male 60.5     0     0
     Ticket Fare Cabin Embarked
1044   3701   NA              S
> 
> #The passenger is #1044 . We will use sample median to generate a compatible Fare value .
> full$Fare[1044] <- median(full[full$Pclass == '3' & full$Embarked == 'S', ]$Fare, na.rm = TRUE)
> 
>                 
>                 
> 
> #Step 4: Titles and Surname
> #Thought the surname we can identify some families : 
> full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
> table(full$Sex, full$Title)
        
         Capt Col Don Dona  Dr Jonkheer Lady Major Master Miss Mlle Mme  Mr Mrs
  female    0   0   0    1   1        0    1     0      0  260    2   1   0 197
  male      1   4   1    0   7        1    0     2     61    0    0   0 757   0
        
          Ms Rev Sir the Countess
  female   2   0   0            1
  male     0   8   1            0
> 
> #Titles with less frequency : 
> Rare <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', 
+                 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
> 
> #Organizing titles :
> full$Title[full$Title == 'Mlle']        <- 'Miss' 
> full$Title[full$Title == 'Ms']          <- 'Miss'
> full$Title[full$Title == 'Mme']         <- 'Mrs' 
> full$Title[full$Title %in% Rare]  <- 'Rare'
> table(full$Sex, full$Title)
        
         Master Miss  Mr Mrs Rare
  female      0  264   0 198    4
  male       61    0 757   0   25
> 
> #Show titles by Gender : 
> table(full$Sex, full$Title)
        
         Master Miss  Mr Mrs Rare
  female      0  264   0 198    4
  male       61    0 757   0   25
> 
> #Grab surname from passenger's name . We will discovered 875 probable families .
> full$Surname <- sapply(full$Name,  
+                       function(x) strsplit(x, split = '[,.]')[[1]][1])
> nr_surname <- nlevels(factor(full$Surname));
> nr_surname
[1] 875
>                        
> # Step 5: Family Sizes 
> full$Fsize <- full$SibSp + full$Parch + 1
> full$Family <- paste(full$Surname, full$Fsize, sep='_')
>                        
> #Improving graph presentation on Survived variable
> full$Survived [full$Survived == '0'] <- 'Died'
> full$Survived [full$Survived == '1'] <- 'Survived'
>                        
> ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) +
+   geom_bar(stat='count', position='dodge') +
+   scale_x_continuous(breaks=c(1:11)) +
+   labs(x = 'Family Size') +
+   theme_few()
>                        
> full$FsizeD[full$Fsize == 1] <- 'singleton'
> full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- 'small'
> full$FsizeD[full$Fsize > 4] <- 'large'
> mosaicplot(table(full$FsizeD, full$Survived), main='Family Size by Survival', shade=TRUE)
>                        
> #Step 6 : Port of Embarked
> #We will check if any passenger has incorrect information about port abord.
>                        
> full[full$Embarked != 'C' &  full$Embarked != 'Q' & full$Embarked != 'S',]
    PassengerId Survived Pclass                                      Name
62           62 Survived      1                       Icard, Miss. Amelie
830         830 Survived      1 Stone, Mrs. George Nelson (Martha Evelyn)
       Sex Age SibSp Parch Ticket Fare Cabin Embarked Title Surname Fsize
62  female  38     0     0 113572   80   B28           Miss   Icard     1
830 female  62     0     0 113572   80   B28            Mrs   Stone     1
     Family    FsizeD
62  Icard_1 singleton
830 Stone_1 singleton
>                        
> #As we could check, passengers 62 and 830 don't have valid information about embarked .
> #Let's identify the apropriate port based in the column Fare . 
> #According Megan Risdal https://www.kaggle.com/mrisdal/titanic/exploring-survival-on-the-titanic report,
> #the median fare for a first class passenger departing from Charbourg (‘C’) coincides 
> #nicely with the $80 paid by our embarkment-deficient passengers
>  
> embark_fare <- full %>%
+   filter(PassengerId != 62 & PassengerId != 830)
> ggplot(embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
+   geom_boxplot() +
+   geom_hline(aes(yintercept=80), 
+     colour='red', linetype='dashed', lwd=2) +
+   scale_y_continuous(labels=dollar_format()) +
+   theme_few()
> full$Embarked[c(62, 830)] <- 'C'
>                        
>                        
>                        
>                        
>                        
>                        
>                        
>                        
> 
> 
> 
> 
> 
> 
> #Step 7 : Age and Gender   
> ggplot(full[1:891,], aes(Age, fill = factor(Survived))) + 
+   geom_histogram() + 
+   # I include Sex since we know (a priori) it's a significant predictor
+   facet_grid(.~Sex) + 
+   theme_few()
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
> 
> 
> #Step 8 : Class Survival
> ggplot(full[1:891,], aes(x = Pclass, fill = factor(Survived), label = Pclass)) +
+   geom_bar(stat='count', position='dodge') +
+   scale_x_continuous(breaks=c(1:11)) +
+   labs(x = 'Survival by Class') +
+   theme_few()
> 
> 
> 
> #Step 9 : train and test recovery
> md.pattern(full)
    PassengerId Pclass Name Sex Age SibSp Parch Ticket Fare Cabin Embarked
891           1      1    1   1   1     1     1      1    1     1        1
418           1      1    1   1   1     1     1      1    1     1        1
              0      0    0   0   0     0     0      0    0     0        0
    Title Surname Fsize Family FsizeD Survived    
891     1       1     1      1      1        1   0
418     1       1     1      1      1        0   1
        0       0     0      0      0      418 418
> 
> train <- full[1:891,]
> test <- full[892:1309,]
> 
> # Back Survived to 0 and 1 
> 
> train$Survived [train$Survived == 'Died'] <- 0
> train$Survived [train$Survived == 'Survived'] <- 1
> 
> # Create factors to prediction
> 
> factor_vars <- c('PassengerId','Pclass','Sex','Embarked','Age','SibSp','Parch','Fare',
+                  'Title','Surname','Family','FsizeD')
> 
> full[factor_vars] <- lapply(full[factor_vars], function(x) as.factor(x))
> 
> set.seed(754)
>     
>     
> 
> 
> 
> #Step 10 : Random Forest
> 
> rf_model <- randomForest(factor(Survived) ~ Pclass + Age + SibSp + Parch + 
+                                            Fare + Fsize , data = train,
+                                            importance=TRUE)
> 
> # Show model error
> 
> plot(rf_model, ylim=c(0,0.36))
> legend('topright', colnames(rf_model$err.rate), col=1:3, fill=1:3)
> 
> 
> 
> #Step 11: Predict (test)
> prediction <- predict(rf_model, test)
> 
> # Save the solution to a dataframe with two columns: PassengerId and Survived (prediction)
> 
> solution <- data.frame(PassengerID = test$PassengerId, Survived = prediction)
> 
> # Write the solution to file
> 
> write.csv(solution, file = 'rf_mod_Solution.csv', row.names = F)
> 
> 
> 
> 
> 
> 
> #Acknowledgements
> 
> #Thanks to Kaggle by the opportunity and learning [https://www.kaggle.com/]
> #Thanks to Megan Risdal [https://www.kaggle.com/mrisdal/titanic/exploring-survival-on-the-titanic] 
> #by the inspiration and code. 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
  7.789   0.447   8.329 
