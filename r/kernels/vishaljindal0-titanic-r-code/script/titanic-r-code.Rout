
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> 
> #Read Dataset
> TrainTitanic=read.csv("../input/train.csv", header=TRUE,na.strings=c(""," ","NA"))
> 
> #Structure of Data Set
> str(TrainTitanic)
'data.frame':	891 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : Factor w/ 891 levels "Abbing, Mr. Anthony",..: 109 191 358 277 16 559 520 629 417 581 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 147 levels "A10","A14","A16",..: NA 82 NA 56 NA NA 130 NA NA NA ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
> 
> #Converting to factor
> TrainTitanic$Survived=as.factor(TrainTitanic$Survived)
> TrainTitanic$Pclass =as.factor(TrainTitanic$Pclass)
> 
> #cheking summary 
> summary(TrainTitanic)
  PassengerId    Survived Pclass                                     Name    
 Min.   :  1.0   0:549    1:216   Abbing, Mr. Anthony                  :  1  
 1st Qu.:223.5   1:342    2:184   Abbott, Mr. Rossmore Edward          :  1  
 Median :446.0            3:491   Abbott, Mrs. Stanton (Rosa Hunt)     :  1  
 Mean   :446.0                    Abelson, Mr. Samuel                  :  1  
 3rd Qu.:668.5                    Abelson, Mrs. Samuel (Hannah Wizosky):  1  
 Max.   :891.0                    Adahl, Mr. Mauritz Nils Martin       :  1  
                                  (Other)                              :885  
     Sex           Age            SibSp           Parch             Ticket   
 female:314   Min.   : 0.42   Min.   :0.000   Min.   :0.0000   1601    :  7  
 male  :577   1st Qu.:20.12   1st Qu.:0.000   1st Qu.:0.0000   347082  :  7  
              Median :28.00   Median :0.000   Median :0.0000   CA. 2343:  7  
              Mean   :29.70   Mean   :0.523   Mean   :0.3816   3101295 :  6  
              3rd Qu.:38.00   3rd Qu.:1.000   3rd Qu.:0.0000   347088  :  6  
              Max.   :80.00   Max.   :8.000   Max.   :6.0000   CA 2144 :  6  
              NA's   :177                                      (Other) :852  
      Fare                Cabin     Embarked  
 Min.   :  0.00   B96 B98    :  4   C   :168  
 1st Qu.:  7.91   C23 C25 C27:  4   Q   : 77  
 Median : 14.45   G6         :  4   S   :644  
 Mean   : 32.20   C22 C26    :  3   NA's:  2  
 3rd Qu.: 31.00   D          :  3             
 Max.   :512.33   (Other)    :186             
                  NA's       :687             
> 
> #cheking NA's age has 177 mising values,cabin has 687 and embarked has 2
> colSums(is.na(TrainTitanic))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0           0           0           0           0         177 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           0         687           2 
> 
> 
> #install.packages("car")
> #install.packages("ggplot2")
> 
> library(car)
Loading required package: carData
Warning messages:
1: package ‘car’ was built under R version 3.6.2 
2: package ‘carData’ was built under R version 3.6.2 
> library(ggplot2)
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(data.table)
> 
> #Imputing mean for age for approximation as of now
> TrainTitanic$Age[is.na(TrainTitanic$Age)] = mean(TrainTitanic$Age, na.rm=TRUE)
> #Fare plot with survival,
> ggplot(TrainTitanic, aes(x=Age,fill=factor(Survived))) + 
+   geom_histogram(breaks=seq(0,80,by=4),colour='black') + 
+   xlab("Age") + ylab("Passengers")
> 
> #younger passengers around 12 and older one seems to be rescued compare to rest of the passengers
> 
> #Sex plot with survival,
> ggplot(TrainTitanic, aes(x = Survived, fill = Sex)) + geom_bar()
> 
> # Females more likely to survive, women and children first it seems
> 
> #Fare plot with survival,
> ggplot(TrainTitanic, aes(x=Fare,fill=factor(Survived))) + 
+   geom_histogram(breaks=seq(0,550,by=10),colour='black') + 
+   xlab("Fare") + ylab("Passengers")
> #Expensive ticket holder more likely to survive based on status
> 
> 
> #Class and fare should co-relate as per the last plot
> Fare_mean_Pclass=aggregate(TrainTitanic$Fare, list(TrainTitanic$Pclass), mean)
> colnames(Fare_mean_Pclass) <- c("pclass", "mean")
> ggplot(Fare_mean_Pclass, aes(x = pclass, y=mean)) +geom_bar(stat="identity")
> 
> #age,fare and survival
> plot(TrainTitanic$Age, TrainTitanic$Fare, pch = 9, col = c('red', 'green')[TrainTitanic$Survived])
> 
> #Red zone shows age 18-50 and lower class(fare)
> 
> 
> #Embarked
> ggplot(TrainTitanic, aes(x = Survived, fill = Embarked)) + geom_bar()
> #Most survivals are from
> 
> #Feature engineering, 
> #age mean impution is not up to the mark as we did it for all, it should be as per different
> #groups child,male,female. This we can done based on the name.
> 
> Train=read.csv("../input/train.csv", header=TRUE,na.strings=c(""," ","NA"))
> 
> Train$Name=as.character(Train$Name)
> #Converting to factor
> Train$Survived=as.factor(Train$Survived)
> Train$Pclass =as.factor(Train$Pclass)
> 
> str(Train)
'data.frame':	891 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 147 levels "A10","A14","A16",..: NA 82 NA 56 NA NA 130 NA NA NA ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
> #Name
> 
> for (i in 1:nrow(Train)) {
+   Train$Title[i] <- as.character(trimws(strsplit(strsplit(Train$Name[i],",")[[1]][2],"[.]")[[1]][1]))
+ }
> 
> table(Train$Title)

        Capt          Col          Don           Dr     Jonkheer         Lady 
           1            2            1            7            1            1 
       Major       Master         Miss         Mlle          Mme           Mr 
           2           40          182            2            1          517 
         Mrs           Ms          Rev          Sir the Countess 
         125            1            6            1            1 
> 
> Train$Title=as.factor(Train$Title)
> 
> Train$Title=recode(Train$Title,"c('Don','Jonkheer','Lady','Sir','the Countess','Don','Capt','Col','Major','Dr','Rev')='Less';
+        c('Miss','Mlle','Ms')='Miss';c('Mrs','Mme')='Mrs'")
> 
> #cheking the NA
> colSums(is.na(Train))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0           0           0           0           0         177 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           0         687           2 
      Title 
          0 
> 
> #Age mean by Sex,Class and Title
> aggregate(x=Train$Age,
+           by=list(Train$Sex,Train$Pclass,Train$Title),
+           FUN=mean,na.rm=TRUE)
   Group.1 Group.2 Group.3         x
1   female       1    Less 43.333333
2     male       1    Less 48.727273
3     male       2    Less 42.000000
4     male       1  Master  5.306667
5     male       2  Master  2.258889
6     male       3  Master  5.350833
7   female       1    Miss 29.744681
8   female       2    Miss 22.560606
9   female       3    Miss 16.123188
10    male       1      Mr 41.580460
11    male       2      Mr 32.768293
12    male       3      Mr 28.724891
13  female       1     Mrs 40.400000
14  female       2     Mrs 33.682927
15  female       3     Mrs 33.515152
> 
> #Function to impute Age
> Age_Na_Treatment_Train <- function(df) {
+   
+   for (i in 1:nrow(df)) {
+     
+     if (is.na(df$Age[i])) {
+       
+       if(df$Sex[i]=="female" && df$Pclass[i]==1){
+         
+         if(df$Title[i]=="Less"){
+           
+           df$Age[i]=43.33
+         }
+         
+         else if (df$Title[i]=="Miss") {
+           df$Age[i]=29.74
+         }
+         
+         else if (df$Title[i]=="Mrs") {
+           df$Age[i]=40.40
+         }
+         
+       }
+       
+      else if(df$Sex[i]=="female" && df$Pclass[i]==2){
+         
+          if (df$Title[i]=="Miss") {
+           df$Age[i]=22.56
+         }
+         
+         else if (df$Title[i]=="Mrs") {
+           df$Age[i]=33.68
+         }
+         
+         
+      }
+       
+       else if(df$Sex[i]=="female" && df$Pclass[i]==3){
+       
+         if (df$Title[i]=="Miss") {
+           df$Age[i]=16.12
+         }
+         
+         else if (df$Title[i]=="Mrs") {
+           df$Age[i]=33.51
+         }
+         
+         
+       }
+       
+       else if(df$Sex[i]=="male" && df$Pclass[i]==1){
+         
+         if(df$Title[i]=="Less"){
+           
+           df$Age[i]=48.7272
+         }
+         
+         else if (df$Title[i]=="Master") {
+           df$Age[i]=5.30
+         }
+         
+         else if (df$Title[i]=="Mr") {
+           df$Age[i]=41.58
+         }
+         
+       }
+       
+       else if(df$Sex[i]=="male" && df$Pclass[i]==2){
+         
+         if(df$Title[i]=="Less"){
+           
+           df$Age[i]=42.00
+         }
+         
+         else if (df$Title[i]=="Master") {
+           df$Age[i]=2.25
+         }
+         
+         else if (df$Title[i]=="Mr") {
+           df$Age[i]=32.76
+         }
+         
+       }
+       
+       else if(df$Sex[i]=="male" && df$Pclass[i]==3){
+         
+          if (df$Title[i]=="Master") {
+           df$Age[i]=5.35
+         }
+         
+         else if (df$Title[i]=="Mr") {
+           df$Age[i]=28.72
+         }
+         
+       }
+       
+     }
+     
+   }
+   df
+ }
> 
> #Impute the Age
> Train_Age_Imputed=Age_Na_Treatment_Train(Train)
> 
> #Cheking the NA now
> 
> colSums(is.na(Train_Age_Imputed))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0           0           0           0           0           0 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           0         687           2 
      Title 
          0 
> 
> str(Train_Age_Imputed)
'data.frame':	891 obs. of  13 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 147 levels "A10","A14","A16",..: NA 82 NA 56 NA NA 130 NA NA NA ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ Title      : Factor w/ 5 levels "Less","Master",..: 4 5 3 5 4 4 4 2 5 5 ...
> 
> #Removing Passenger ID and Name
> 
> Train_Name_PassId_removed=Train_Age_Imputed[,c(-1,-4)]
> 
> #Cheking the NA now
> colSums(is.na(Train_Name_PassId_removed))
Survived   Pclass      Sex      Age    SibSp    Parch   Ticket     Fare 
       0        0        0        0        0        0        0        0 
   Cabin Embarked    Title 
     687        2        0 
> 
> #Function for Mode value for embarked
> mode_embarked<- function(columnName) {
+   
+   max_embarked=table (columnName)
+   
+   names(max_embarked[which.max(max_embarked)])
+   
+ }
> 
> #checking the mode
> mode_embarked(Train_Name_PassId_removed$Embarked)
[1] "S"
> 
> #Imputing the mode
> 
> Train_Name_PassId_removed$Embarked[is.na(Train_Name_PassId_removed$Embarked)] <- mode_embarked(Train_Name_PassId_removed$Embarked)
> 
> 
> #Cheking the NA now
> colSums(is.na(Train_Name_PassId_removed))
Survived   Pclass      Sex      Age    SibSp    Parch   Ticket     Fare 
       0        0        0        0        0        0        0        0 
   Cabin Embarked    Title 
     687        0        0 
> 
> #Cabin NA values imputed with U=Unknown
> Train_Name_PassId_removed$Cabin = factor(Train_Name_PassId_removed$Cabin, levels=c(levels(Train_Name_PassId_removed$Cabin),'U'))
> 
> Train_Name_PassId_removed$Cabin[is.na(Train_Name_PassId_removed$Cabin)] = 'U'
> 
> #Cheking the NA now
> colSums(is.na(Train_Name_PassId_removed))
Survived   Pclass      Sex      Age    SibSp    Parch   Ticket     Fare 
       0        0        0        0        0        0        0        0 
   Cabin Embarked    Title 
       0        0        0 
> 
> str(Train_Name_PassId_removed)
'data.frame':	891 obs. of  11 variables:
 $ Survived: Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass  : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Sex     : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age     : num  22 38 26 35 35 ...
 $ SibSp   : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch   : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket  : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare    : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin   : Factor w/ 148 levels "A10","A14","A16",..: 148 82 148 56 148 148 130 148 148 148 ...
 $ Embarked: Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ Title   : Factor w/ 5 levels "Less","Master",..: 4 5 3 5 4 4 4 2 5 5 ...
> 
> #Cabin Encoded
> 
> for (i in 1:nrow(Train_Name_PassId_removed)) {
+   Train_Name_PassId_removed$Cabin_Encoded[i] <- as.character(trimws(substring(Train_Name_PassId_removed$Cabin[i],1,1 )))
+ }
> 
> Train_Name_PassId_removed$Cabin_Encoded=as.factor(Train_Name_PassId_removed$Cabin_Encoded)
> 
> #Cabin Removed
> Train_Name_PassId_removed=Train_Name_PassId_removed[,-9]
> 
> str(Train_Name_PassId_removed)
'data.frame':	891 obs. of  11 variables:
 $ Survived     : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass       : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Sex          : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age          : num  22 38 26 35 35 ...
 $ SibSp        : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch        : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket       : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare         : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Embarked     : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ Title        : Factor w/ 5 levels "Less","Master",..: 4 5 3 5 4 4 4 2 5 5 ...
 $ Cabin_Encoded: Factor w/ 9 levels "A","B","C","D",..: 9 3 9 3 9 9 5 9 9 9 ...
> 
> #Family Size calculation
> 
> for (i in 1:nrow(Train_Name_PassId_removed)) {
+   Train_Name_PassId_removed$Family_Size[i] <- Train_Name_PassId_removed$SibSp[i]+Train_Name_PassId_removed$Parch[i]+1
+ }
> 
> str(Train_Name_PassId_removed)
'data.frame':	891 obs. of  12 variables:
 $ Survived     : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass       : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Sex          : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age          : num  22 38 26 35 35 ...
 $ SibSp        : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch        : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket       : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare         : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Embarked     : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ Title        : Factor w/ 5 levels "Less","Master",..: 4 5 3 5 4 4 4 2 5 5 ...
 $ Cabin_Encoded: Factor w/ 9 levels "A","B","C","D",..: 9 3 9 3 9 9 5 9 9 9 ...
 $ Family_Size  : num  2 2 1 2 1 1 1 5 3 2 ...
> 
> #Family category type
> 
> for (i in 1:nrow(Train_Name_PassId_removed)) {
+   
+   if(Train_Name_PassId_removed$Family_Size[i]==1){
+     
+     Train_Name_PassId_removed$Family_Type[i]='Single'
+   }
+   
+   else if (Train_Name_PassId_removed$Family_Size[i]>=2 && Train_Name_PassId_removed$Family_Size[i]<=4) {
+     Train_Name_PassId_removed$Family_Type[i]='Small'
+   }
+   
+   else{Train_Name_PassId_removed$Family_Type[i]='Large'}
+ }
> 
> Train_Name_PassId_removed$Family_Type=as.factor(Train_Name_PassId_removed$Family_Type)
> 
> str(Train_Name_PassId_removed)
'data.frame':	891 obs. of  13 variables:
 $ Survived     : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass       : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Sex          : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age          : num  22 38 26 35 35 ...
 $ SibSp        : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch        : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket       : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare         : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Embarked     : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ Title        : Factor w/ 5 levels "Less","Master",..: 4 5 3 5 4 4 4 2 5 5 ...
 $ Cabin_Encoded: Factor w/ 9 levels "A","B","C","D",..: 9 3 9 3 9 9 5 9 9 9 ...
 $ Family_Size  : num  2 2 1 2 1 1 1 5 3 2 ...
 $ Family_Type  : Factor w/ 3 levels "Large","Single",..: 3 3 2 3 2 2 2 1 3 3 ...
> 
> 
> 
> #Ticket Feature
> 
> #Replacing special characters
> #Train_Name_PassId_removed$Ticket=gsub("[.]", "", Train_Name_PassId_removed$Ticket)
> #Train_Name_PassId_removed$Ticket=gsub("/", "", Train_Name_PassId_removed$Ticket)
> 
> #Creating categories
> 
> #for (i in 1:nrow(Train_Name_PassId_removed)) {
>  #  Value<- strsplit(Train_Name_PassId_removed$Ticket[i]," ")[[1]]
>   
>    
>  #  if(is.na(as.numeric(Value[2]))){
>   #   Train_Name_PassId_removed$Ticket_Cat[i]="xxx"
>   # }
>      
>   # else{
>      
>    #  Train_Name_PassId_removed$Ticket_Cat[i]=Value[1]
>   # }
>   
> #}
> 
> #Train_Name_PassId_removed$Ticket_Cat=as.factor(Train_Name_PassId_removed$Ticket_Cat)
> 
> str(Train_Name_PassId_removed)
'data.frame':	891 obs. of  13 variables:
 $ Survived     : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass       : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Sex          : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age          : num  22 38 26 35 35 ...
 $ SibSp        : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch        : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket       : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare         : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Embarked     : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ Title        : Factor w/ 5 levels "Less","Master",..: 4 5 3 5 4 4 4 2 5 5 ...
 $ Cabin_Encoded: Factor w/ 9 levels "A","B","C","D",..: 9 3 9 3 9 9 5 9 9 9 ...
 $ Family_Size  : num  2 2 1 2 1 1 1 5 3 2 ...
 $ Family_Type  : Factor w/ 3 levels "Large","Single",..: 3 3 2 3 2 2 2 1 3 3 ...
> 
> 
> 
> #Removing ticket now
> 
> Train_Name_PassId_removed=Train_Name_PassId_removed[,-7]
> 
> #Family Size removed
> Train_Name_PassId_removed=Train_Name_PassId_removed[,c(-11)]
> str(Train_Name_PassId_removed)
'data.frame':	891 obs. of  11 variables:
 $ Survived     : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass       : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Sex          : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age          : num  22 38 26 35 35 ...
 $ SibSp        : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch        : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Fare         : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Embarked     : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ Title        : Factor w/ 5 levels "Less","Master",..: 4 5 3 5 4 4 4 2 5 5 ...
 $ Cabin_Encoded: Factor w/ 9 levels "A","B","C","D",..: 9 3 9 3 9 9 5 9 9 9 ...
 $ Family_Type  : Factor w/ 3 levels "Large","Single",..: 3 3 2 3 2 2 2 1 3 3 ...
> #install.packages("earth")
> library(earth)
Loading required package: Formula
Loading required package: plotmo
Loading required package: plotrix
Loading required package: TeachingDemos
Warning messages:
1: package ‘plotmo’ was built under R version 3.6.2 
2: package ‘plotrix’ was built under R version 3.6.2 
> library(caret)
Loading required package: lattice
> 
> dummies <- caret::dummyVars(Survived ~ ., data = Train_Name_PassId_removed)
> 
> Train_Encoded=predict(dummies, newdata = Train_Name_PassId_removed)
Warning message:
In model.frame.default(Terms, newdata, na.action = na.action, xlev = object$lvls) :
  variable 'Survived' is not a factor
> 
> Train_Encoded=as.data.frame(Train_Encoded)
> 
> Train_Encoded=cbind(Train_Name_PassId_removed[,1],Train_Encoded)
> 
> setnames(Train_Encoded,"Train_Name_PassId_removed[, 1]","Survived")
> 
> ########################################################################################
> #Test DataSet
> 
> Test=read.csv("../input/test.csv", header=TRUE,na.strings=c(""," ","NA"))
> 
> str(Test)
'data.frame':	418 obs. of  11 variables:
 $ PassengerId: int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass     : int  3 3 2 3 3 3 3 2 3 3 ...
 $ Name       : Factor w/ 418 levels "Abbott, Master. Eugene Joseph",..: 210 409 273 414 182 370 85 58 5 104 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age        : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp      : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch      : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket     : Factor w/ 363 levels "110469","110489",..: 153 222 74 148 139 262 159 85 101 270 ...
 $ Fare       : num  7.83 7 9.69 8.66 12.29 ...
 $ Cabin      : Factor w/ 76 levels "A11","A18","A21",..: NA NA NA NA NA NA NA NA NA NA ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 2 3 2 3 3 3 2 3 1 3 ...
> 
> #Converting to factor
> Test$Pclass =as.factor(Test$Pclass)
> 
> # Title Creation
> 
> Test$Name=as.character(Test$Name)
> for (i in 1:nrow(Test)) {
+   Test$Title[i] <- as.character(trimws(strsplit(strsplit(Test$Name[i],",")[[1]][2],"[.]")[[1]][1]))
+ }
> 
> table(Test$Title)

   Col   Dona     Dr Master   Miss     Mr    Mrs     Ms    Rev 
     2      1      1     21     78    240     72      1      2 
> 
> #install.packages("car")
> library(car)
> Test$Title=recode(Test$Title,"c('Don','Jonkheer','Lady','Sir','the Countess','Don','Dona','Capt','Col','Major','Dr','Rev')='Less';
+                   c('Miss','Mlle','Ms')='Miss';c('Mrs','Mme')='Mrs'")
> 
> Test$Title=as.factor(Test$Title)
> 
> #cheking NA
> 
> colSums(is.na(Test))
PassengerId      Pclass        Name         Sex         Age       SibSp 
          0           0           0           0          86           0 
      Parch      Ticket        Fare       Cabin    Embarked       Title 
          0           0           1         327           0           0 
> 
> #Computing Mean via Sex,class and title for Test dataset
> aggregate(x=Test$Age,
+           by=list(Test$Sex,Test$Pclass,Test$Title),
+           FUN=mean,na.rm=TRUE)
   Group.1 Group.2 Group.3         x
1   female       1    Less 39.000000
2     male       1    Less 51.000000
3     male       2    Less 35.500000
4     male       1  Master  9.500000
5     male       2  Master  5.000000
6     male       3  Master  7.454615
7   female       1    Miss 31.428571
8   female       2    Miss 17.370000
9   female       3    Miss 19.872647
10    male       1      Mr 41.200000
11    male       2      Mr 31.718182
12    male       3      Mr 27.198795
13  female       1     Mrs 45.606061
14  female       2     Mrs 33.000000
15  female       3     Mrs 29.875000
> 
> #Imputation function for age
> Age_Na_Treatment_Test <- function(df) {
+   
+   for (i in 1:nrow(df)) {
+     
+     if (is.na(df$Age[i])) {
+       
+       if(df$Sex[i]=="female" && df$Pclass[i]==1){
+         
+         if (df$Title[i]=="Miss") {
+           df$Age[i]=31.42
+         }
+         
+         else if (df$Title[i]=="Mrs") {
+           df$Age[i]=45.60
+         }
+         
+         else if (df$Title[i]=="Less") {
+           df$Age[i]=39.00
+         }
+         
+       }
+       
+       else if(df$Sex[i]=="female" && df$Pclass[i]==2){
+         
+         if (df$Title[i]=="Miss") {
+           df$Age[i]=17.37
+         }
+         
+         else if (df$Title[i]=="Mrs") {
+           df$Age[i]=33.00
+         }
+         
+         
+       }
+       
+       else if(df$Sex[i]=="female" && df$Pclass[i]==3){
+         
+         if (df$Title[i]=="Miss") {
+           df$Age[i]=19.87
+         }
+         
+         else if (df$Title[i]=="Mrs") {
+           df$Age[i]=29.87
+         }
+         
+         
+       }
+       
+       else if(df$Sex[i]=="male" && df$Pclass[i]==1){
+         
+         if(df$Title[i]=="Less"){
+           
+           df$Age[i]=51.00
+         }
+         
+         else if (df$Title[i]=="Master") {
+           df$Age[i]=9.50
+         }
+         
+         else if (df$Title[i]=="Mr") {
+           df$Age[i]=41.20
+         }
+         
+       }
+       
+       else if(df$Sex[i]=="male" && df$Pclass[i]==2){
+         
+         if(df$Title[i]=="Less"){
+           
+           df$Age[i]=35.50
+         }
+         
+         else if (df$Title[i]=="Master") {
+           df$Age[i]=5.00
+         }
+         
+         else if (df$Title[i]=="Mr") {
+           df$Age[i]=31.71
+         }
+         
+       }
+       
+       else if(df$Sex[i]=="male" && df$Pclass[i]==3){
+         
+         if (df$Title[i]=="Master") {
+           df$Age[i]=7.45
+         }
+         
+         else if (df$Title[i]=="Mr") {
+           df$Age[i]=27.20
+         }
+         
+       }
+       
+     }
+     
+   }
+   df
+ }
> 
> #Impute the Age
> Test_Age_Imputed=Age_Na_Treatment_Test(Test)
> 
> #Cheking NA now
> colSums(is.na(Test_Age_Imputed))
PassengerId      Pclass        Name         Sex         Age       SibSp 
          0           0           0           0           0           0 
      Parch      Ticket        Fare       Cabin    Embarked       Title 
          0           0           1         327           0           0 
> 
> str(Test_Age_Imputed)
'data.frame':	418 obs. of  12 variables:
 $ PassengerId: int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 3 2 3 3 3 3 2 3 3 ...
 $ Name       : chr  "Kelly, Mr. James" "Wilkes, Mrs. James (Ellen Needs)" "Myles, Mr. Thomas Francis" "Wirz, Mr. Albert" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age        : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp      : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch      : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket     : Factor w/ 363 levels "110469","110489",..: 153 222 74 148 139 262 159 85 101 270 ...
 $ Fare       : num  7.83 7 9.69 8.66 12.29 ...
 $ Cabin      : Factor w/ 76 levels "A11","A18","A21",..: NA NA NA NA NA NA NA NA NA NA ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 2 3 2 3 3 3 2 3 1 3 ...
 $ Title      : Factor w/ 5 levels "Less","Master",..: 4 5 4 4 5 4 3 4 5 4 ...
> 
> #Removing Passenger Name
> 
> Test_Name_removed=Test_Age_Imputed[,-3]
> 
> str(Test_Name_removed)
'data.frame':	418 obs. of  11 variables:
 $ PassengerId: int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 3 2 3 3 3 3 2 3 3 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age        : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp      : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch      : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket     : Factor w/ 363 levels "110469","110489",..: 153 222 74 148 139 262 159 85 101 270 ...
 $ Fare       : num  7.83 7 9.69 8.66 12.29 ...
 $ Cabin      : Factor w/ 76 levels "A11","A18","A21",..: NA NA NA NA NA NA NA NA NA NA ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 2 3 2 3 3 3 2 3 1 3 ...
 $ Title      : Factor w/ 5 levels "Less","Master",..: 4 5 4 4 5 4 3 4 5 4 ...
> 
> 
> colSums(is.na(Test_Name_removed))
PassengerId      Pclass         Sex         Age       SibSp       Parch 
          0           0           0           0           0           0 
     Ticket        Fare       Cabin    Embarked       Title 
          0           1         327           0           0 
> 
> 
> #Cabin NA values imputed with U=Unknown
> Test_Name_removed$Cabin = factor(Test_Name_removed$Cabin, levels=c(levels(Test_Name_removed$Cabin),'U'))
> 
> Test_Name_removed$Cabin[is.na(Test_Name_removed$Cabin)] = 'U'
> 
> #Cheking the NA now
> colSums(is.na(Test_Name_removed))
PassengerId      Pclass         Sex         Age       SibSp       Parch 
          0           0           0           0           0           0 
     Ticket        Fare       Cabin    Embarked       Title 
          0           1           0           0           0 
> 
> str(Test_Name_removed)
'data.frame':	418 obs. of  11 variables:
 $ PassengerId: int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 3 2 3 3 3 3 2 3 3 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age        : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp      : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch      : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket     : Factor w/ 363 levels "110469","110489",..: 153 222 74 148 139 262 159 85 101 270 ...
 $ Fare       : num  7.83 7 9.69 8.66 12.29 ...
 $ Cabin      : Factor w/ 77 levels "A11","A18","A21",..: 77 77 77 77 77 77 77 77 77 77 ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 2 3 2 3 3 3 2 3 1 3 ...
 $ Title      : Factor w/ 5 levels "Less","Master",..: 4 5 4 4 5 4 3 4 5 4 ...
> 
> 
> #Cabin Encoded
> 
> for (i in 1:nrow(Test_Name_removed)) {
+   Test_Name_removed$Cabin_Encoded[i] <- as.character(trimws(substring(Test_Name_removed$Cabin[i],1,1 )))
+ }
> 
> Test_Name_removed$Cabin_Encoded=as.factor(Test_Name_removed$Cabin_Encoded)
> 
> #Cabin Removed
> Test_Name_PaTest_Age_Imputed=Test_Name_removed[,-9]
> 
> str(Test_Name_PaTest_Age_Imputed)
'data.frame':	418 obs. of  11 variables:
 $ PassengerId  : int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass       : Factor w/ 3 levels "1","2","3": 3 3 2 3 3 3 3 2 3 3 ...
 $ Sex          : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age          : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp        : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch        : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket       : Factor w/ 363 levels "110469","110489",..: 153 222 74 148 139 262 159 85 101 270 ...
 $ Fare         : num  7.83 7 9.69 8.66 12.29 ...
 $ Embarked     : Factor w/ 3 levels "C","Q","S": 2 3 2 3 3 3 2 3 1 3 ...
 $ Title        : Factor w/ 5 levels "Less","Master",..: 4 5 4 4 5 4 3 4 5 4 ...
 $ Cabin_Encoded: Factor w/ 8 levels "A","B","C","D",..: 8 8 8 8 8 8 8 8 8 8 ...
> 
> colSums(is.na(Test_Name_PaTest_Age_Imputed))
  PassengerId        Pclass           Sex           Age         SibSp 
            0             0             0             0             0 
        Parch        Ticket          Fare      Embarked         Title 
            0             0             1             0             0 
Cabin_Encoded 
            0 
> 
> #Impute Fair by Mean
> 
> Test_Name_PaTest_Age_Imputed$Fare[is.na(Test_Name_PaTest_Age_Imputed$Fare)] = mean(Test_Name_PaTest_Age_Imputed$Fare, na.rm=TRUE)
> 
> colSums(is.na(Test_Name_PaTest_Age_Imputed))
  PassengerId        Pclass           Sex           Age         SibSp 
            0             0             0             0             0 
        Parch        Ticket          Fare      Embarked         Title 
            0             0             0             0             0 
Cabin_Encoded 
            0 
> 
> #Famly size calculation
> 
>   for (i in 1:nrow(Test_Name_PaTest_Age_Imputed)) {
+     Test_Name_PaTest_Age_Imputed$Family_Size[i] <- Test_Name_PaTest_Age_Imputed$SibSp[i]+Test_Name_PaTest_Age_Imputed$Parch[i]+1
+   }
> 
> str(Test_Name_PaTest_Age_Imputed)
'data.frame':	418 obs. of  12 variables:
 $ PassengerId  : int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass       : Factor w/ 3 levels "1","2","3": 3 3 2 3 3 3 3 2 3 3 ...
 $ Sex          : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age          : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp        : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch        : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket       : Factor w/ 363 levels "110469","110489",..: 153 222 74 148 139 262 159 85 101 270 ...
 $ Fare         : num  7.83 7 9.69 8.66 12.29 ...
 $ Embarked     : Factor w/ 3 levels "C","Q","S": 2 3 2 3 3 3 2 3 1 3 ...
 $ Title        : Factor w/ 5 levels "Less","Master",..: 4 5 4 4 5 4 3 4 5 4 ...
 $ Cabin_Encoded: Factor w/ 8 levels "A","B","C","D",..: 8 8 8 8 8 8 8 8 8 8 ...
 $ Family_Size  : num  1 2 1 1 3 1 1 3 1 3 ...
> 
> 
> #Family category
> for (i in 1:nrow(Test_Name_PaTest_Age_Imputed)) {
+   
+   if(Test_Name_PaTest_Age_Imputed$Family_Size[i]==1){
+     
+     Test_Name_PaTest_Age_Imputed$Family_Type[i]='Single'
+   }
+   
+   else if (Test_Name_PaTest_Age_Imputed$Family_Size[i]>=2 && Test_Name_PaTest_Age_Imputed$Family_Size[i]<=4) {
+     Test_Name_PaTest_Age_Imputed$Family_Type[i]='Small'
+   }
+   
+   else{Test_Name_PaTest_Age_Imputed$Family_Type[i]='Large'}
+ }
> 
> Test_Name_PaTest_Age_Imputed$Family_Type=as.factor(Test_Name_PaTest_Age_Imputed$Family_Type)
> 
> 
> str(Test_Name_PaTest_Age_Imputed)
'data.frame':	418 obs. of  13 variables:
 $ PassengerId  : int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass       : Factor w/ 3 levels "1","2","3": 3 3 2 3 3 3 3 2 3 3 ...
 $ Sex          : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age          : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp        : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch        : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket       : Factor w/ 363 levels "110469","110489",..: 153 222 74 148 139 262 159 85 101 270 ...
 $ Fare         : num  7.83 7 9.69 8.66 12.29 ...
 $ Embarked     : Factor w/ 3 levels "C","Q","S": 2 3 2 3 3 3 2 3 1 3 ...
 $ Title        : Factor w/ 5 levels "Less","Master",..: 4 5 4 4 5 4 3 4 5 4 ...
 $ Cabin_Encoded: Factor w/ 8 levels "A","B","C","D",..: 8 8 8 8 8 8 8 8 8 8 ...
 $ Family_Size  : num  1 2 1 1 3 1 1 3 1 3 ...
 $ Family_Type  : Factor w/ 3 levels "Large","Single",..: 2 3 2 2 3 2 2 3 2 3 ...
> 
> colSums(is.na(Test_Name_PaTest_Age_Imputed))
  PassengerId        Pclass           Sex           Age         SibSp 
            0             0             0             0             0 
        Parch        Ticket          Fare      Embarked         Title 
            0             0             0             0             0 
Cabin_Encoded   Family_Size   Family_Type 
            0             0             0 
> 
> #Ticket Feature
> #Special Char removed
> #Test_Name_PassId_removed$Ticket=gsub("[.]", "", Test_Name_PassId_removed$Ticket)
> #Test_Name_PassId_removed$Ticket=gsub("/", "", Test_Name_PassId_removed$Ticket)
> 
> #Ticket Encode
> #for (i in 1:nrow(Test_Name_PassId_removed)) {
> #  Value<- strsplit(Test_Name_PassId_removed$Ticket[i]," ")[[1]]
>   
>   
>  # if(is.na(as.numeric(Value[2]))){
>  #   Test_Name_PassId_removed$Ticket_Cat[i]="xxx"
>  # }
>   
>  # else{
>     
>  #   Test_Name_PassId_removed$Ticket_Cat[i]=Value[1]
>   #}
>   
> #}
> 
> 
> #Test_Name_PassId_removed$Ticket_Cat=as.factor(Test_Name_PassId_removed$Ticket_Cat)
> 
> Test_Name_PaTest_Age_Imputed=Test_Name_PaTest_Age_Imputed[,-7]
> 
> str(Test_Name_PaTest_Age_Imputed)
'data.frame':	418 obs. of  12 variables:
 $ PassengerId  : int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass       : Factor w/ 3 levels "1","2","3": 3 3 2 3 3 3 3 2 3 3 ...
 $ Sex          : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age          : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp        : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch        : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Fare         : num  7.83 7 9.69 8.66 12.29 ...
 $ Embarked     : Factor w/ 3 levels "C","Q","S": 2 3 2 3 3 3 2 3 1 3 ...
 $ Title        : Factor w/ 5 levels "Less","Master",..: 4 5 4 4 5 4 3 4 5 4 ...
 $ Cabin_Encoded: Factor w/ 8 levels "A","B","C","D",..: 8 8 8 8 8 8 8 8 8 8 ...
 $ Family_Size  : num  1 2 1 1 3 1 1 3 1 3 ...
 $ Family_Type  : Factor w/ 3 levels "Large","Single",..: 2 3 2 2 3 2 2 3 2 3 ...
> 
> Test_Selected=Test_Name_PaTest_Age_Imputed[,c(-11)]
> 
> str(Test_Selected)
'data.frame':	418 obs. of  11 variables:
 $ PassengerId  : int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass       : Factor w/ 3 levels "1","2","3": 3 3 2 3 3 3 3 2 3 3 ...
 $ Sex          : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age          : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp        : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch        : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Fare         : num  7.83 7 9.69 8.66 12.29 ...
 $ Embarked     : Factor w/ 3 levels "C","Q","S": 2 3 2 3 3 3 2 3 1 3 ...
 $ Title        : Factor w/ 5 levels "Less","Master",..: 4 5 4 4 5 4 3 4 5 4 ...
 $ Cabin_Encoded: Factor w/ 8 levels "A","B","C","D",..: 8 8 8 8 8 8 8 8 8 8 ...
 $ Family_Type  : Factor w/ 3 levels "Large","Single",..: 2 3 2 2 3 2 2 3 2 3 ...
> 
> #One hot encoding
> 
> dummies_Test <- caret::dummyVars(PassengerId ~ ., data = Test_Selected)
> 
> Test_Encoded=predict(dummies_Test, newdata = Test_Selected)
> 
> Test_Encoded = as.data.frame(Test_Encoded)
> 
> Test_Encoded=cbind(Test_Selected[,1],Test_Encoded)
> 
> 
> setnames(Test_Encoded,"Test_Selected[, 1]","PassengerId")
> 
> str(Test_Encoded)
'data.frame':	418 obs. of  29 variables:
 $ PassengerId       : int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass.1          : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Pclass.2          : num  0 0 1 0 0 0 0 1 0 0 ...
 $ Pclass.3          : num  1 1 0 1 1 1 1 0 1 1 ...
 $ Sex.female        : num  0 1 0 0 1 0 1 0 1 0 ...
 $ Sex.male          : num  1 0 1 1 0 1 0 1 0 1 ...
 $ Age               : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp             : num  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch             : num  0 0 0 0 1 0 0 1 0 0 ...
 $ Fare              : num  7.83 7 9.69 8.66 12.29 ...
 $ Embarked.C        : num  0 0 0 0 0 0 0 0 1 0 ...
 $ Embarked.Q        : num  1 0 1 0 0 0 1 0 0 0 ...
 $ Embarked.S        : num  0 1 0 1 1 1 0 1 0 1 ...
 $ Title.Less        : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Title.Master      : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Title.Miss        : num  0 0 0 0 0 0 1 0 0 0 ...
 $ Title.Mr          : num  1 0 1 1 0 1 0 1 0 1 ...
 $ Title.Mrs         : num  0 1 0 0 1 0 0 0 1 0 ...
 $ Cabin_Encoded.A   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.B   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.C   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.D   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.E   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.F   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.G   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.U   : num  1 1 1 1 1 1 1 1 1 1 ...
 $ Family_Type.Large : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Family_Type.Single: num  1 0 1 1 0 1 1 0 1 0 ...
 $ Family_Type.Small : num  0 1 0 0 1 0 0 1 0 1 ...
> 
> 
> 
> str(Train_Encoded)
'data.frame':	891 obs. of  30 variables:
 $ Survived          : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass.1          : num  0 1 0 1 0 0 1 0 0 0 ...
 $ Pclass.2          : num  0 0 0 0 0 0 0 0 0 1 ...
 $ Pclass.3          : num  1 0 1 0 1 1 0 1 1 0 ...
 $ Sex.female        : num  0 1 1 1 0 0 0 0 1 1 ...
 $ Sex.male          : num  1 0 0 0 1 1 1 1 0 0 ...
 $ Age               : num  22 38 26 35 35 ...
 $ SibSp             : num  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch             : num  0 0 0 0 0 0 0 1 2 0 ...
 $ Fare              : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Embarked.C        : num  0 1 0 0 0 0 0 0 0 1 ...
 $ Embarked.Q        : num  0 0 0 0 0 1 0 0 0 0 ...
 $ Embarked.S        : num  1 0 1 1 1 0 1 1 1 0 ...
 $ Title.Less        : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Title.Master      : num  0 0 0 0 0 0 0 1 0 0 ...
 $ Title.Miss        : num  0 0 1 0 0 0 0 0 0 0 ...
 $ Title.Mr          : num  1 0 0 0 1 1 1 0 0 0 ...
 $ Title.Mrs         : num  0 1 0 1 0 0 0 0 1 1 ...
 $ Cabin_Encoded.A   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.B   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.C   : num  0 1 0 1 0 0 0 0 0 0 ...
 $ Cabin_Encoded.D   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.E   : num  0 0 0 0 0 0 1 0 0 0 ...
 $ Cabin_Encoded.F   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.G   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.T   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Cabin_Encoded.U   : num  1 0 1 0 1 1 0 1 1 1 ...
 $ Family_Type.Large : num  0 0 0 0 0 0 0 1 0 0 ...
 $ Family_Type.Single: num  0 0 1 0 1 1 1 0 0 0 ...
 $ Family_Type.Small : num  1 1 0 1 0 0 0 0 1 1 ...
> 
> 
> 
> 
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

> library(rpart.plot)
Loading required package: rpart
> 
> # Build random forest model
> #install.packages("caret")
> library(caret)
> #install.packages("e1071")
> library(e1071)
> 
> Train_Encoded_Selected=Train_Encoded[,which(names(Train_Encoded) %in% c("Survived","Sex.female","Title.Mr","Fare","Sex.male","Pclass.3","Age","Title.Miss","Title.Master","Title.Mrs","Cabin_Encoded.U","Embarked.S","Family_Type.Small","Family_Type.Large","Embarked.C","Pclass.2","Pclass.1","Cabin_Encoded.E","Embarked.Q","Family_Type.Small"))]
> ## Tuning Random Forest
> tRF <- tuneRF(x = Train_Encoded_Selected[,-1], 
+               y=Train_Encoded_Selected$Survived,
+               mtryStart = 4, 
+               ntreeTry=151, 
+               stepFactor = 1.5, 
+               improve = 0.0001, 
+               trace=TRUE, 
+               plot = TRUE,
+               doBest = TRUE,
+               nodesize = 10, 
+               importance=TRUE
+ )
mtry = 4  OOB error = 16.72% 
Searching left ...
mtry = 3 	OOB error = 16.84% 
-0.006711409 1e-04 
Searching right ...
mtry = 6 	OOB error = 16.84% 
-0.006711409 1e-04 
> 
> dim(Train_Encoded_Selected)
[1] 891  19
> 
> #RF <- randomForest(Survived ~ ., data = Train_Encoded, 
> #                   ntree=151, mtry = 7, nodesize = 10,importance=TRUE)
> 
> #importanceFactor=round(randomForest::importance(RF),2)
> 
> #importanceFactor[order(importanceFactor[,3], decreasing = TRUE),]
> 
> #Train_Encoded_Selected=Train_Encoded[,which(names(Train_Encoded) %in% c("Survived","Sex.female","Title.Mr","Fare","Sex.male","Pclass.3","Age","Title.Miss","Title.Master","Title.Mrs","Cabin_Encoded.U","Embarked.S","Family_Type.Small","Family_Type.Large","Embarked.C","Pclass.2","Pclass.1","Cabin_Encoded.E","Embarked.Q","Family_Type.Small"))]
> 
> randomForestModel <- randomForest(Survived ~ ., data = Train_Encoded_Selected, 
+                    ntree=151, mtry = 3, nodesize = 10,importance=TRUE)
> 
> #install.packages("data.table")
> library(data.table)
> #install.packages("gbm")
> library(gbm)
Loaded gbm 2.1.8
Warning message:
package ‘gbm’ was built under R version 3.6.2 
> #install.packages("ranger")
> library(ranger)

Attaching package: ‘ranger’

The following object is masked from ‘package:randomForest’:

    importance

> #install.packages("caTools")
> library(caTools)
> 
> Survived = predict(randomForestModel, newdata = Test_Encoded, type = "class")
> submitfile = as.data.table(Survived)
> submitfile = cbind(Test_Encoded$PassengerId, submitfile)
> submitfile
       V1 Survived
  1:  892        0
  2:  893        1
  3:  894        0
  4:  895        0
  5:  896        1
 ---              
414: 1305        0
415: 1306        1
416: 1307        0
417: 1308        0
418: 1309        1
> setnames(submitfile,"V1","PassengerId")
> 
> submitfile
     PassengerId Survived
  1:         892        0
  2:         893        1
  3:         894        0
  4:         895        0
  5:         896        1
 ---                     
414:        1305        0
415:        1306        1
416:        1307        0
417:        1308        0
418:        1309        1
> fwrite(submitfile,"submitFile.csv")
> 
> getwd()
[1] "/Users/alex/MachineLearning/TrustworthyML/KaggleCrawler/Aviral/korpus-master/notebooks/r/kernels/vishaljindal0-titanic-r-code/script"
> 
> ###################################################################
> 
> # Any results you write to the current directory are saved as output.
> 
> proc.time()
   user  system elapsed 
  6.866   0.395   7.450 
