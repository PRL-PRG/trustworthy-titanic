
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(caret)
Loading required package: lattice
Loading required package: ggplot2
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> #..... PREPROCESS............#
> 
> preprocess<-function(x)
+ {
+   tt<-x
+   names(tt)<-tolower(names(tt))
+   suppressWarnings(library(VIM))
+   set.seed(3)
+   tt_imp<-kNN(tt,variable = c("age","fare"),k=4)
+   
+   tt_imp[,c(2,3)]<-lapply(tt_imp[,c(2,3)],factor)
+   levels(tt_imp$survived)<-c("Dead","Alive")
+   levels(tt_imp$embarked)<-c("S","C","Q","S")
+   levels(tt_imp$pclass)<-c("1_class","2_class","3_class")
+   tt_imp$cabin_c<-tt_imp$cabin
+   levels(tt_imp$cabin_c)[1]<-"without_cabin"
+   levels(tt_imp$cabin_c)[-1]<-"with_cabin"
+   tt_imp$cabin_name<-as.character(tt_imp$cabin)
+   tt_imp$cabin_name[tt_imp$cabin==""]<-"no_cabin"
+   tt_imp$cabin_name[grep("A",tt_imp$cabin)]<-"A"
+   tt_imp$cabin_name[grep("B",tt_imp$cabin)]<-"B"
+   tt_imp$cabin_name[grep("C",tt_imp$cabin)]<-"C"
+   tt_imp$cabin_name[grep("D",tt_imp$cabin)]<-"D"
+   tt_imp$cabin_name[grep("E",tt_imp$cabin)]<-"E"
+   tt_imp$cabin_name[grep("F",tt_imp$cabin)]<-"F"
+   tt_imp$cabin_name[grep("G",tt_imp$cabin)]<-"G"
+   tt_imp$cabin_name[grep("T",tt_imp$cabin)]<-"T"
+   
+   
+   
+   tt_imp$family_size<-(tt_imp$sibsp+tt_imp$parch+1)
+   tt_imp$kid[tt_imp$age>18]<-0
+   tt_imp$kid[tt_imp$age<=18]<-1
+   
+   ticket_fre<-as.data.frame(table(tt_imp$ticket))
+   tt_imp$ticket_size<-tt_imp$ticket
+   levels(tt_imp$ticket_size)<-ticket_fre$Freq
+   tt_imp$ticket_size<-as.numeric(as.character(tt_imp$ticket_size))
+   
+   tt_imp$family_name<-sapply(strsplit(as.character(tt_imp$name),"[,.]"),'[',1)
+   tt_imp$family_salute<-sapply(strsplit(as.character(tt_imp$name),"[,.]"),'[',2)
+   tt_imp$family_salute<-gsub(" ","",tt_imp$family_salute)
+   tt_imp$mother<-0
+   tt_imp$mother[tt_imp$family_salute=="Mrs" & tt_imp$kid==0 &
+                   tt_imp$parch>0]<-1
+   
+   tt_imp$class_cab<-paste(tt_imp$pclass,tt_imp$cabin_c,sep = "_")
+   tt_imp$class_cabname<-paste(tt_imp$pclass,tt_imp$cabin_name,sep = "_")
+   
+   tt_imp$family_ticket <- ave(tt_imp$family_name, tt_imp$ticket,
+                               FUN=function(x) length(unique(x)))
+   tt_imp$group_ticket[tt_imp$family_ticket==1]<-"same_family"
+   tt_imp$group_ticket[tt_imp$family_ticket>1]<-"different_family"
+   tt_imp$group_ticket<-as.factor(tt_imp$group_ticket)
+   tt_imp$regroup<-paste("on this ticket",tt_imp$ticket_size,
+                         "people from",tt_imp$family_ticket,
+                         tt_imp$group_ticket)
+   
+   tt_imp
+   
+ }
> 
> 
> suppressWarnings(library(ggplot2))
> to_model<-read.csv("../input/train.csv")
> to_validate<-read.csv("../input/test.csv")
> to_validate$Survived<-0
> to_validate<-to_validate[,c(1,12,2:11)]
> 
> full_data<-preprocess(rbind(to_model,to_validate))
Loading required package: colorspace
Loading required package: grid
VIM is ready to use.

Suggestions and bug-reports can be submitted at: https://github.com/statistikat/VIM/issues

Attaching package: ‘VIM’

The following object is masked from ‘package:datasets’:

    sleep

> 
> #feature_t<-full_data[,-c(1,2,5,6,7,8,10,11,12,14,19,22)]
> feature_t<-full_data[,c(3,5,6,10,12,16,17,19,21,22,24,25,27)]
> dummy_feature_t<-dummyVars(~.,data = feature_t,levelsOnly = FALSE,
+                            sep = "_")
> dummy_feature<-as.data.frame(predict(dummy_feature_t,feature_t))
> 
> final_data<-cbind.data.frame(full_data[,c(1,2)],dummy_feature)
> 
> #.....selection important variables............
> 
> control <- trainControl(method="repeatedcv", number=10, repeats=5)
> set.seed(123)
> model_r<-train(survived~.-passengerid,data=final_data,method="gbm",
+                trControl=control,verbose=FALSE)
There were 50 or more warnings (use warnings() to see the first 50)
> 
> imp_Var<-as.data.frame(varImp(model_r)$importance)
Error in relative.influence(object, n.trees = numTrees) : 
  could not find function "relative.influence"
Calls: as.data.frame -> varImp -> varImp.train -> <Anonymous>
Execution halted
