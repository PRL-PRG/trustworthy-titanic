
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> # File path:
> list.files(path = "../input")
[1] "gender_submission.csv" "test.csv"              "train.csv"            
> 
> 
> # Load packages:
> library(tidyverse) 
â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.0 â”€â”€
[32mâœ“[39m [34mggplot2[39m 3.3.2     [32mâœ“[39m [34mpurrr  [39m 0.3.4
[32mâœ“[39m [34mtibble [39m 3.0.1     [32mâœ“[39m [34mdplyr  [39m 1.0.2
[32mâœ“[39m [34mtidyr  [39m 1.1.0     [32mâœ“[39m [34mstringr[39m 1.4.0
[32mâœ“[39m [34mreadr  [39m 1.3.1     [32mâœ“[39m [34mforcats[39m 0.5.0
â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
[31mx[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
[31mx[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()
Warning messages:
1: package â€˜ggplot2â€™ was built under R version 3.6.2 
2: package â€˜tibbleâ€™ was built under R version 3.6.2 
3: package â€˜tidyrâ€™ was built under R version 3.6.2 
4: package â€˜purrrâ€™ was built under R version 3.6.2 
5: package â€˜dplyrâ€™ was built under R version 3.6.2 
> library(readr)
> library(tidyverse)
> library(ggplot2)
> 
> # Read datasets:
> train_data <- read_csv("../input/train.csv")
Parsed with column specification:
cols(
  PassengerId = [32mcol_double()[39m,
  Survived = [32mcol_double()[39m,
  Pclass = [32mcol_double()[39m,
  Name = [31mcol_character()[39m,
  Sex = [31mcol_character()[39m,
  Age = [32mcol_double()[39m,
  SibSp = [32mcol_double()[39m,
  Parch = [32mcol_double()[39m,
  Ticket = [31mcol_character()[39m,
  Fare = [32mcol_double()[39m,
  Cabin = [31mcol_character()[39m,
  Embarked = [31mcol_character()[39m
)
> test_data <- read_csv("../input/test.csv")
Parsed with column specification:
cols(
  PassengerId = [32mcol_double()[39m,
  Pclass = [32mcol_double()[39m,
  Name = [31mcol_character()[39m,
  Sex = [31mcol_character()[39m,
  Age = [32mcol_double()[39m,
  SibSp = [32mcol_double()[39m,
  Parch = [32mcol_double()[39m,
  Ticket = [31mcol_character()[39m,
  Fare = [32mcol_double()[39m,
  Cabin = [31mcol_character()[39m,
  Embarked = [31mcol_character()[39m
)
> 
> # See structure of the datasets:
> glimpse(train_data)
Rows: 891
Columns: 12
$ PassengerId [3m[90m<dbl>[39m[23m 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17â€¦
$ Survived    [3m[90m<dbl>[39m[23m 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, â€¦
$ Pclass      [3m[90m<dbl>[39m[23m 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, â€¦
$ Name        [3m[90m<chr>[39m[23m "Braund, Mr. Owen Harris", "Cumings, Mrs. John Bradley (Fâ€¦
$ Sex         [3m[90m<chr>[39m[23m "male", "female", "female", "female", "male", "male", "maâ€¦
$ Age         [3m[90m<dbl>[39m[23m 22, 38, 26, 35, 35, NA, 54, 2, 27, 14, 4, 58, 20, 39, 14,â€¦
$ SibSp       [3m[90m<dbl>[39m[23m 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, â€¦
$ Parch       [3m[90m<dbl>[39m[23m 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, â€¦
$ Ticket      [3m[90m<chr>[39m[23m "A/5 21171", "PC 17599", "STON/O2. 3101282", "113803", "3â€¦
$ Fare        [3m[90m<dbl>[39m[23m 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625â€¦
$ Cabin       [3m[90m<chr>[39m[23m NA, "C85", NA, "C123", NA, NA, "E46", NA, NA, NA, "G6", "â€¦
$ Embarked    [3m[90m<chr>[39m[23m "S", "C", "S", "S", "S", "Q", "S", "S", "S", "C", "S", "Sâ€¦
> glimpse(test_data)
Rows: 418
Columns: 11
$ PassengerId [3m[90m<dbl>[39m[23m 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 90â€¦
$ Pclass      [3m[90m<dbl>[39m[23m 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 1, 1, 2, 1, 2, 2, 3, 3, â€¦
$ Name        [3m[90m<chr>[39m[23m "Kelly, Mr. James", "Wilkes, Mrs. James (Ellen Needs)", "â€¦
$ Sex         [3m[90m<chr>[39m[23m "male", "female", "male", "male", "female", "male", "femaâ€¦
$ Age         [3m[90m<dbl>[39m[23m 34.5, 47.0, 62.0, 27.0, 22.0, 14.0, 30.0, 26.0, 18.0, 21.â€¦
$ SibSp       [3m[90m<dbl>[39m[23m 0, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 1, 0, 0, 1, â€¦
$ Parch       [3m[90m<dbl>[39m[23m 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, â€¦
$ Ticket      [3m[90m<chr>[39m[23m "330911", "363272", "240276", "315154", "3101298", "7538"â€¦
$ Fare        [3m[90m<dbl>[39m[23m 7.8292, 7.0000, 9.6875, 8.6625, 12.2875, 9.2250, 7.6292, â€¦
$ Cabin       [3m[90m<chr>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "B45", NAâ€¦
$ Embarked    [3m[90m<chr>[39m[23m "Q", "S", "Q", "S", "S", "S", "Q", "S", "C", "S", "S", "Sâ€¦
> # See 3 head observation of the datasets:
> head(train_data, n=3)
[90m# A tibble: 3 x 12[39m
  PassengerId Survived Pclass Name  Sex     Age SibSp Parch Ticket  Fare Cabin
        [3m[90m<dbl>[39m[23m    [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m
[90m1[39m           1        0      3 Brauâ€¦ male     22     1     0 A/5 2â€¦  7.25 [31mNA[39m   
[90m2[39m           2        1      1 Cumiâ€¦ femaâ€¦    38     1     0 PC 17â€¦ 71.3  C85  
[90m3[39m           3        1      3 Heikâ€¦ femaâ€¦    26     0     0 STON/â€¦  7.92 [31mNA[39m   
[90m# â€¦ with 1 more variable: Embarked [3m[90m<chr>[90m[23m[39m
> head(test_data, n=3)
[90m# A tibble: 3 x 11[39m
  PassengerId Pclass Name    Sex     Age SibSp Parch Ticket  Fare Cabin Embarked
        [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m   [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m   
[90m1[39m         892      3 Kelly,â€¦ male   34.5     0     0 330911  7.83 [31mNA[39m    Q       
[90m2[39m         893      3 Wilkesâ€¦ femaâ€¦  47       1     0 363272  7    [31mNA[39m    S       
[90m3[39m         894      2 Myles,â€¦ male   62       0     0 240276  9.69 [31mNA[39m    Q       
> 
> # Find missing data points in train_data:
> miss_survived <- any(is.na(train_data$Survived))
> miss_pclass <- any(is.na(train_data$Pclass))
> miss_sex <- any(is.na(train_data$Sex))
> miss_age <- any(is.na(train_data$Age))
> # 177 missing value in Age column
> miss_age_sum <- sum(is.na(train_data$Age))            
> miss_fare <- any(is.na(train_data$Fare))
> miss_cabin <- any(is.na(train_data$Cabin))
> # 678 missing value in Cabin column
> miss_cabin_sum <- sum(is.na(train_data$Cabin))        
> miss_embarked <- any(is.na(train_data$Embarked))
> # 2 missing value in Embarked column
> miss_embarked_sum <- sum(is.na(train_data$Embarked))  
> 
> # Remove passengers with missing Embarked or Age:
> ctrain_data <- subset(train_data, is.na(Embarked)==FALSE & is.na(Age)==FALSE)
> 
> # Extract first letter of Cabin column:
> ctrain_data$Cabin <- substring(ctrain_data$Cabin, 1,1)
> 
> # Change type of ctrain_data variables to categorical:
> ctrain_data$Survived <- as.factor(ctrain_data$Survived)
> ctrain_data$Pclass <- as.factor(ctrain_data$Pclass)
> ctrain_data$Sex <- as.factor(ctrain_data$Sex)
> ctrain_data$Embarked <- as.factor(ctrain_data$Embarked)
> 
> # Plot survived vs sex:
> ggplot(ctrain_data, aes(x=Sex, fill=Survived))+    
+   geom_bar(alpha=0.2)
> # Looks like male passengers are more likely to die
> 
> # Look at same graph with proportion. 
> ggplot(ctrain_data, aes(x=Sex, fill=Survived))+    
+   geom_bar(alpha=0.2, position = "fill")
> # Sex seems to be significant variable.
> 
>  # See age impact:
> ggplot(ctrain_data, aes(x=Age, fill=Survived))+    
+   geom_density(alpha=0.2)
> # Age does not seem to have a direct impact on survival.
> 
> # See age and sex variable together:  
> ggplot(ctrain_data, aes(x=Sex, y=Age, color=Survived))+
+   geom_jitter(alpha=0.5)
> # younger male tend to survive.
> # Women are more likely to survive. 
> 
> # See fare ticket impact: 
> ggplot(ctrain_data, aes(x=Fare, fill=Survived))+
+   geom_density(alpha=0.2)
> # passenger with expensive ticket fares are more likely to survive. 
> 
> # Look at class impact: 
> ggplot(ctrain_data, aes(x=Pclass, fill=Survived))+
+   geom_bar(alpha=0.2)
> 
> # Sex and class are correlated. 
> ggplot(ctrain_data, aes(x=factor(1), fill=Sex))+
+   geom_bar(alpha=0.5, width =1, position ="fill")+
+   facet_grid(.~Pclass) +
+   coord_polar(theta = "y")
> # About 70% of class 3 passenger are male.
> 
> # See ticket fare and class together: 
> ggplot(ctrain_data, aes(x=Pclass, y=Fare, color=Survived))+
+   geom_jitter(alpha=0.5)
> # Ticket fare and class are correlated.
> 
> # See Embarkation site effect:
> ggplot(ctrain_data, aes(x=Embarked, fill=Survived))+
+   geom_bar(alpha=0.2)
> # here is the same graph with ratio: 
> ggplot(ctrain_data, aes(x=Embarked, fill=Survived))+
+   geom_bar(alpha=0.2, position="fill")
> # Seems Embarked C has higher survival rate. 
> 
> # Look at both class and embarked site:  
> ggplot(ctrain_data, aes(x=Pclass, color=Survived))+
+   geom_bar(alpha=0.5)+
+   facet_grid(~Embarked)
> # Embarked C has higher ratio of class 1 and class 1 passengers are those who survive. 
> 
> # Look at both fare and embarked site: 
> ggplot(ctrain_data, aes(y=Fare, color=Survived))+
+   geom_boxplot(alpha=0.5)+
+   facet_grid(~Embarked) +
+   theme(axis.text.x = element_blank())
> 
> # Look at Embarked and Sex combination: 
> ggplot(ctrain_data, aes(x=Sex, fill=Survived))+
+   geom_bar(alpha=0.5)+
+   facet_grid(~Embarked)
> # Embarked S has higher ratio of male passenger who are more likely to die. 
> 
> # Look at Cabine effect:
> ggplot(ctrain_data, aes(x=factor(Cabin), fill=Survived))+
+   geom_bar(alpha=0.2)
> # Notice that almost all passengers in cabine T died
> ggplot(ctrain_data, aes(x=factor(Cabin), fill=Survived))+
+   geom_bar(alpha=0.2, position="fill")
> 
> # Fit logistic regression model without interactions:
> fit1 <- glm(Survived~Sex+Age+Pclass+Fare+Cabin+Embarked, data=ctrain_data, family = binomial) 
> summary(fit1)

Call:
glm(formula = Survived ~ Sex + Age + Pclass + Fare + Cabin + 
    Embarked, family = binomial, data = ctrain_data)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.7962  -0.7125   0.2156   0.5458   2.0422  

Coefficients:
              Estimate Std. Error z value Pr(>|z|)    
(Intercept)  5.748e+00  1.208e+00   4.759 1.95e-06 ***
Sexmale     -3.412e+00  5.988e-01  -5.698 1.21e-08 ***
Age         -4.464e-02  1.494e-02  -2.989   0.0028 ** 
Pclass2     -1.427e-01  1.184e+00  -0.121   0.9041    
Pclass3     -7.174e-01  1.283e+00  -0.559   0.5759    
Fare         1.631e-03  2.976e-03   0.548   0.5837    
CabinB      -7.197e-01  8.356e-01  -0.861   0.3890    
CabinC      -1.566e+00  8.152e-01  -1.921   0.0547 .  
CabinD      -4.953e-01  8.584e-01  -0.577   0.5639    
CabinE       1.455e-01  8.697e-01   0.167   0.8672    
CabinF      -9.394e-01  1.497e+00  -0.628   0.5303    
CabinG      -3.944e+00  1.903e+00  -2.073   0.0382 *  
CabinT      -1.550e+01  1.455e+03  -0.011   0.9915    
EmbarkedQ   -9.042e-01  2.205e+00  -0.410   0.6817    
EmbarkedS   -4.510e-01  4.907e-01  -0.919   0.3580    
---
Signif. codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 231.55  on 182  degrees of freedom
Residual deviance: 148.21  on 168  degrees of freedom
  (529 observations deleted due to missingness)
AIC: 178.21

Number of Fisher Scoring iterations: 14

> 
> 
> # Drop insignificant variables:
> fit2 <- glm(Survived~Sex+Age+Cabin, data=ctrain_data, family = binomial) 
> summary(fit2)

Call:
glm(formula = Survived ~ Sex + Age + Cabin, family = binomial, 
    data = ctrain_data)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.8318  -0.7495   0.2224   0.5228   1.9309  

Coefficients:
              Estimate Std. Error z value Pr(>|z|)    
(Intercept)    5.67070    1.14143   4.968 6.76e-07 ***
Sexmale       -3.43240    0.59012  -5.816 6.01e-09 ***
Age           -0.04509    0.01453  -3.103 0.001917 ** 
CabinB        -0.63074    0.80648  -0.782 0.434161    
CabinC        -1.58925    0.79339  -2.003 0.045165 *  
CabinD        -0.59705    0.83858  -0.712 0.476479    
CabinE        -0.17644    0.81909  -0.215 0.829444    
CabinF        -1.60883    1.08405  -1.484 0.137786    
CabinG        -5.00630    1.45180  -3.448 0.000564 ***
CabinT       -15.77526 1455.39768  -0.011 0.991352    
---
Signif. codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 231.55  on 182  degrees of freedom
Residual deviance: 150.15  on 173  degrees of freedom
  (529 observations deleted due to missingness)
AIC: 170.15

Number of Fisher Scoring iterations: 14

> 
> # Fit logestic regression model with 2 level interactions:
> fit3 <- glm(Survived~Sex+Age+Pclass+Fare+Cabin+Embarked+
+               Sex*Age+Sex*Pclass+Sex*Fare+Sex*Embarked+
+                Age*Fare+Age*Embarked+
+               Fare*Embarked, 
+             data=ctrain_data, family = binomial) 
> summary(fit3)

Call:
glm(formula = Survived ~ Sex + Age + Pclass + Fare + Cabin + 
    Embarked + Sex * Age + Sex * Pclass + Sex * Fare + Sex * 
    Embarked + Age * Fare + Age * Embarked + Fare * Embarked, 
    family = binomial, data = ctrain_data)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.2261  -0.6129   0.2261   0.5082   2.2846  

Coefficients: (2 not defined because of singularities)
                    Estimate Std. Error z value Pr(>|z|)  
(Intercept)        5.207e+00  2.588e+00   2.012   0.0442 *
Sexmale           -1.261e+00  2.311e+00  -0.546   0.5853  
Age               -4.106e-02  4.865e-02  -0.844   0.3986  
Pclass2           -1.144e+00  1.764e+00  -0.649   0.5166  
Pclass3            1.219e+01  2.400e+03   0.005   0.9959  
Fare              -6.256e-03  1.254e-02  -0.499   0.6180  
CabinB            -9.521e-01  9.162e-01  -1.039   0.2987  
CabinC            -1.701e+00  9.139e-01  -1.861   0.0627 .
CabinD            -8.950e-01  9.554e-01  -0.937   0.3489  
CabinE            -9.471e-02  9.858e-01  -0.096   0.9235  
CabinF            -1.640e+00  1.560e+00  -1.052   0.2930  
CabinG            -1.712e+01  2.400e+03  -0.007   0.9943  
CabinT            -1.673e+01  2.400e+03  -0.007   0.9944  
EmbarkedQ          1.348e+01  2.400e+03   0.006   0.9955  
EmbarkedS          4.987e-01  1.914e+00   0.261   0.7944  
Sexmale:Age       -4.768e-02  4.091e-02  -1.166   0.2438  
Sexmale:Pclass2    1.209e+00  1.956e+00   0.618   0.5365  
Sexmale:Pclass3   -1.363e+01  2.400e+03  -0.006   0.9955  
Sexmale:Fare      -7.667e-03  1.173e-02  -0.653   0.5135  
Sexmale:EmbarkedQ -2.913e+01  3.393e+03  -0.009   0.9932  
Sexmale:EmbarkedS -1.001e-01  1.372e+00  -0.073   0.9418  
Age:Fare           5.041e-04  2.729e-04   1.847   0.0647 .
Age:EmbarkedQ             NA         NA      NA       NA  
Age:EmbarkedS     -3.522e-03  3.452e-02  -0.102   0.9187  
Fare:EmbarkedQ            NA         NA      NA       NA  
Fare:EmbarkedS    -9.648e-03  8.027e-03  -1.202   0.2294  
---
Signif. codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 231.55  on 182  degrees of freedom
Residual deviance: 140.08  on 159  degrees of freedom
  (529 observations deleted due to missingness)
AIC: 188.08

Number of Fisher Scoring iterations: 15

> 
> # Drop insignificant variables:
> fit4 <- glm(Survived~Sex+Age+Age*Fare, data=ctrain_data, family = binomial) 
> summary(fit4)

Call:
glm(formula = Survived ~ Sex + Age + Age * Fare, family = binomial, 
    data = ctrain_data)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.2507  -0.6475  -0.5776   0.7959   2.0966  

Coefficients:
              Estimate Std. Error z value Pr(>|z|)    
(Intercept)  1.1048337  0.3043379   3.630 0.000283 ***
Sexmale     -2.3318564  0.1902651 -12.256  < 2e-16 ***
Age         -0.0167506  0.0093836  -1.785 0.074244 .  
Fare         0.0075713  0.0062596   1.210 0.226453    
Age:Fare     0.0001627  0.0001874   0.869 0.385102    
---
Signif. codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 960.9  on 711  degrees of freedom
Residual deviance: 714.4  on 707  degrees of freedom
AIC: 724.4

Number of Fisher Scoring iterations: 5

> 
> # Chose the best fit: (fit4)
> fit4 <- glm(Survived~Sex+Age+Age*Fare, data=ctrain_data, family = binomial)
> pchisq(deviance(fit4), df.residual(fit4), lower=TRUE)
[1] 0.5846692
> # Model is adequate.
> 
> # Using Chi test to check if we can drop any variable of fit4:
> drop1(fit4,test="Chi")
Single term deletions

Model:
Survived ~ Sex + Age + Age * Fare
         Df Deviance    AIC     LRT Pr(>Chi)    
<none>        714.40 724.40                     
Sex       1   886.29 894.29 171.891   <2e-16 ***
Age:Fare  1   715.20 723.20   0.796   0.3722    
---
Signif. codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1
> # No need to drop variables
> 
> # Fitted response value with fit4: 
> fitted_response <- fitted(fit4)
> 
> # Manipulation of test_data:
> ctest_data <- test_data[ , -c(1,3,6,7,8)]
> ctest_data$Cabin <- substring(ctest_data$Cabin, 1,1)
> ctest_data$Pclass <- as.factor(ctest_data$Pclass)
> ctest_data$Sex <- as.factor(ctest_data$Sex)
> ctest_data$Embarked <- as.factor(ctest_data$Embarked)
> 
> # Find missing values in ctest_data:
> miss_pclass_t <- any(is.na(ctest_data$Pclass))
> miss_sex_t <- any(is.na(ctest_data$Sex))
> miss_age_t <- any(is.na(ctest_data$Age))
> # 86 missing values in Age column.
> miss_age_t_sum <- sum(is.na(ctest_data$Age))
> miss_fare_t <- any(is.na(ctest_data$Fare))
> # 1 missing value in Fare column.
> miss_fare_t_sum <- sum(is.na(ctest_data$Fare))
> miss_cabin_t <- any(is.na(ctest_data$Cabin))
> # 327 missing values in Cabin column.
> miss_cabin_t_sum <- sum(is.na(ctest_data$Cabin))
> miss_embarked_t <- any(is.na(ctest_data$Embarked))
> 
> 
> # Estimating missing values in age column: 
> ggplot(ctrain_data, aes(x=Age, color=Sex))+
+   geom_histogram(alpha=0.5)+
+   facet_grid(~Pclass)
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
> # median is better estimator for age compared to mean since age distribution is skewed.
> # Sex and age are not correlated.
> # Age and class are correlated.
> 
> # Find medians of age in each class type:
> median_age <- train_data %>%
+   filter(!is.na(Age)) %>%
+   group_by(Pclass) %>%
+   summarize(median(Age))
`summarise()` ungrouping output (override with `.groups` argument)
> 
> # Estimate age with class type:
> ctest_data<- ctest_data %>%
+   mutate(Age=ifelse((is.na(Age) & Pclass==1) ,unlist(median_age[1,2]),Age)) %>%
+   mutate(Age=ifelse((is.na(Age) & Pclass==2) ,unlist(median_age[2,2]),Age)) %>%
+   mutate(Age=ifelse((is.na(Age) & Pclass==3) ,unlist(median_age[3,2]),Age))
> 
> # Estimating missing value in fare column:
> ggplot(ctrain_data, aes(y=Fare, color=Sex))+
+   geom_boxplot(alpha=0.5)+
+   facet_grid(~Pclass) +
+   theme(axis.text.x = element_blank())
> # median is better estimator for ticket fare compared to mean due to skewness.
> # ticket fare and class are correlated.
> 
> # Find medians of ticket fare in each class type:
> median_fare <- train_data %>%
+   filter(!is.na(Fare)) %>%
+   group_by(Pclass) %>%
+   summarize(median(Fare))
`summarise()` ungrouping output (override with `.groups` argument)
> 
> # Estimate ticket fare with class type:
> ctest_data <- ctest_data %>%
+    mutate(Fare=ifelse((is.na(Fare) & Pclass==1) ,unlist(median_fare[1,2]),Fare)) %>%
+    mutate(Fare=ifelse((is.na(Fare) & Pclass==2) ,unlist(median_fare[2,2]),Fare)) %>%
+    mutate(Fare=ifelse((is.na(Fare) & Pclass==3) ,unlist(median_fare[3,2]),Fare)) 
> 
> # Predict ctest_data with fit4: (chance of surviving for each passenger)
> fit4 <- glm(Survived~Sex+Age+Age*Fare, data=ctrain_data, family = binomial)
> fitted_test <- predict.glm(fit4, ctest_data, type="response")
> # Change probability to binary variable: (survived or died)
> trs <- function(x, k=0.5){ if (x>=k) {return(1)} else {return(0)} }
> predict_test <- lapply(fitted_test, trs)
> 
> # My prediction is predict_test :)
> head(predict_test, n=20)
$`1`
[1] 0

$`2`
[1] 1

$`3`
[1] 0

$`4`
[1] 0

$`5`
[1] 1

$`6`
[1] 0

$`7`
[1] 1

$`8`
[1] 0

$`9`
[1] 1

$`10`
[1] 0

$`11`
[1] 0

$`12`
[1] 0

$`13`
[1] 1

$`14`
[1] 0

$`15`
[1] 1

$`16`
[1] 1

$`17`
[1] 0

$`18`
[1] 0

$`19`
[1] 1

$`20`
[1] 1

> 
> proc.time()
   user  system elapsed 
  3.846   0.144   3.999 
