
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> # This R environment comes with all of CRAN preinstalled, as well as many other helpful packages
> # The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats
> # For example, here's several helpful packages to load in 
> 
> library(ggplot2) # Data visualization
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(readr) # CSV file I/O, e.g. the read_csv function
> # Input data files are available in the "../input/" directory.
> # For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory
> 
> system("ls ../input")
gender_submission.csv
test.csv
train.csv
> 
> # Any results you write to the current directory are saved as output.
> 
> library(dplyr) #Data Manipulation

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library(rpart) 
> library(rpart.plot)
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:dplyr’:

    combine

The following object is masked from ‘package:ggplot2’:

    margin

> library(ggplot2)
> library(ggthemes)
> train <- read.csv("../input/train.csv", stringsAsFactors= F)
> test <- read.csv("../input/test.csv", stringsAsFactors= F)
> 
> full_data <-bind_rows(train,test)
> str(full_data)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
> 
> full_data$AgeRange[full_data$Age <= 9] <- 'lessthan9'
> full_data$AgeRange[full_data$Age <= 25 & full_data$Age> 9] <- 'bw9and25' 
> full_data$AgeRange[full_data$Age <=50 & full_data$Age > 25] <- 'bw25and50' 
> full_data$AgeRange[full_data$Age > 50] <- 'greaterthan50'
> 
> 
> full_data$Title <- sapply(full_data$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
> full_data$Title <- sub(' ', '', full_data$Title)
> #table(full_data$Title)
> #table(full_data$Title, full_data$Sex)
> 
> full_data$Title[full_data$Title == 'Mlle']        <- 'Miss' 
> full_data$Title[full_data$Title == 'Ms']          <- 'Miss'
> full_data$Title[full_data$Title == 'Mme']         <- 'Mrs'
> 
> high_rank_male <- c('Capt','Col','Don','Jonkheer','Rev','Sir')
> high_rank_female <- c('Dona','Lady','the Countess')
> 
> 
> full_data$Title[full_data$Title %in% high_rank_male] <- 'High_rank_male'
> full_data$Title[full_data$Title %in% high_rank_female] <- 'High_rank_female'
> 
> table(full_data$Title)

              Dr High_rank_female   High_rank_male            Major 
               8                3               16                2 
          Master             Miss               Mr              Mrs 
              61              264              757              198 
> 
> #table(full_data$Fare)
> full_data$FareRange[full_data$Fare < 10] <- 'lessthan10'
> full_data$FareRange[full_data$Fare <20 & full_data$Fare >= 10] <- 'bw10and20'
> full_data$FareRange[full_data$Fare <30 & full_data$Fare >= 20] <- 'bw20and30'
> full_data$FareRange[full_data$Fare >= 30] <- 'morethan30'
> table(full_data$FareRange)

 bw10and20  bw20and30 lessthan10 morethan30 
       261        206        491        350 
> 
> 
> full_data$familysize = full_data$SibSp + full_data$Parch + 1
> table(full_data$familysize)

  1   2   3   4   5   6   7   8  11 
790 235 159  43  22  25  16   8  11 
> 
> full_data$Sex = as.factor(full_data$Sex)
> full_data$FareRange = as.factor(full_data$FareRange)
> full_data$AgeRange = as.factor(full_data$AgeRange)
> mod_train <- full_data[1:891,]
> mod_test <- full_data[892:1309,]
> 
> str(mod_train)
'data.frame':	891 obs. of  16 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
 $ AgeRange   : Factor w/ 4 levels "bw25and50","bw9and25",..: 2 1 1 1 1 NA 3 4 1 2 ...
 $ Title      : chr  "Mr" "Mrs" "Miss" "Mrs" ...
 $ FareRange  : Factor w/ 4 levels "bw10and20","bw20and30",..: 3 4 3 4 3 3 4 2 1 4 ...
 $ familysize : num  2 2 1 2 1 1 1 5 3 2 ...
> 
> Tree1 <- rpart(Survived ~ Pclass + Sex + AgeRange + FareRange + Embarked + Title + familysize + SibSp + Parch,
+                data=mod_train, 
+                method="class",
+               control=rpart.control(minsplit=2, cp=0))
> 
> prp(Tree1)
> 
> Tree1Prediction <- predict(Tree1, mod_test, type = "class")
> submit <- data.frame(PassengerId = mod_test$PassengerId, Survived = Tree1Prediction)
> write.csv(submit, file = "Tree1Prediction.csv", row.names = FALSE)
> 
> table(mod_test$AgeRange, Tree1Prediction)
               Tree1Prediction
                  0   1
  bw25and50     104  55
  bw9and25       89  33
  greaterthan50  10  21
  lessthan9       3  17
> 
> aggregate(Survived ~ FareRange + Pclass + Sex, data=mod_train, FUN=function(x) {sum(x)/length(x)})
    FareRange Pclass    Sex  Survived
1   bw20and30      1 female 0.8333333
2  morethan30      1 female 0.9772727
3   bw10and20      2 female 0.9142857
4   bw20and30      2 female 0.9000000
5  morethan30      2 female 1.0000000
6   bw10and20      3 female 0.5813953
7   bw20and30      3 female 0.3333333
8  lessthan10      3 female 0.5937500
9  morethan30      3 female 0.1250000
10  bw20and30      1   male 0.4000000
11 lessthan10      1   male 0.0000000
12 morethan30      1   male 0.3837209
13  bw10and20      2   male 0.1587302
14  bw20and30      2   male 0.1600000
15 lessthan10      2   male 0.0000000
16 morethan30      2   male 0.2142857
17  bw10and20      3   male 0.2368421
18  bw20and30      3   male 0.1250000
19 lessthan10      3   male 0.1115385
20 morethan30      3   male 0.2400000
> 
> 
> mod_test2 <-mod_test
> table(Tree1Prediction)
Tree1Prediction
  0   1 
265 153 
> mod_test2$Survived <- Tree1Prediction
> str(mod_test2)
'data.frame':	418 obs. of  16 variables:
 $ PassengerId: int  892 893 894 895 896 897 898 899 900 901 ...
 $ Survived   : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 2 1 ...
 $ Pclass     : int  3 3 2 3 3 3 3 2 3 3 ...
 $ Name       : chr  "Kelly, Mr. James" "Wilkes, Mrs. James (Ellen Needs)" "Myles, Mr. Thomas Francis" "Wirz, Mr. Albert" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age        : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp      : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch      : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket     : chr  "330911" "363272" "240276" "315154" ...
 $ Fare       : num  7.83 7 9.69 8.66 12.29 ...
 $ Cabin      : chr  "" "" "" "" ...
 $ Embarked   : chr  "Q" "S" "Q" "S" ...
 $ AgeRange   : Factor w/ 4 levels "bw25and50","bw9and25",..: 1 1 3 1 2 2 1 1 2 2 ...
 $ Title      : chr  "Mr" "Mrs" "Mr" "Mr" ...
 $ FareRange  : Factor w/ 4 levels "bw10and20","bw20and30",..: 3 3 3 3 1 3 3 2 3 2 ...
 $ familysize : num  1 2 1 1 3 1 1 3 1 3 ...
> #aggregate(Survived ~ FareRange + Pclass + Sex, data=mod_test2, FUN=function(x) {sum(x)/length(x)})
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
  1.037   0.106   1.148 
