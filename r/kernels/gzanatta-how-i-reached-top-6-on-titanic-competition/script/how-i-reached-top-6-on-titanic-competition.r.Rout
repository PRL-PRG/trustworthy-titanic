
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> library(readr)
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.
> library(caret)
Loading required package: lattice
Loading required package: ggplot2

Attaching package: ‘ggplot2’

The following object is masked from ‘package:randomForest’:

    margin

Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> 
> titanic_train <- read.csv("../input/train.csv", header = TRUE, dec = '.', sep = ',')
> titanic_test <- read.csv("../input/test.csv", header = TRUE, dec = '.', sep = ',')
> 
> titanic_test$Survived <- NA
> 
> titanic_total <- rbind(titanic_train, titanic_test)
> 
> str(titanic_total)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : Factor w/ 1307 levels "Abbing, Mr. Anthony",..: 109 191 358 277 16 559 520 629 417 581 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 929 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 187 levels "","A10","A14",..: 1 83 1 57 1 1 131 1 1 1 ...
 $ Embarked   : Factor w/ 4 levels "","C","Q","S": 4 2 4 4 4 3 4 4 4 2 ...
> 
> titanic_total <- titanic_total[,-c(1,9,11)]
> 
> impute <- preProcess(titanic_total, method = "bagImpute")
> titanic_total <- predict(impute, titanic_total)
> titanic_total$Survived[892:1309] <- NA
> 
> table(titanic_total$Embarked)

      C   Q   S 
  2 270 123 914 
> titanic_total$Embarked<- as.character(titanic_total$Embarked)
> titanic_total$Embarked[titanic_total$Embarked == ""] <- "S"
> table(titanic_total$Embarked)

  C   Q   S 
270 123 916 
> 
> # Adding Family variable
> titanic_total$Family <- 1 + titanic_total$SibSp + titanic_total$Parch
> 
> # Adding Stage variable
> titanic_total$Stage[titanic_total$Age < 18] <- "Child"
> titanic_total$Stage[titanic_total$Age >= 18] <- "Adult"
> 
> # Adding Title variable
> # But first we have to transform the Name into character, and separe it. And then, remove the variable Name.
> 
> titanic_total$Name <- as.character(titanic_total$Name)
> 
> titanic_total$Title <- sapply(titanic_total$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
> titanic_total$Title <- sub(' ', '', titanic_total$Title)
> 
> titanic_total$Title[titanic_total$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
> titanic_total$Title[titanic_total$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
> titanic_total$Title[titanic_total$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'
> 
> titanic_total <- titanic_total[,-3]
> 
> titanic_total$Survived <- as.factor(titanic_total$Survived)
> titanic_total$Pclass <- factor(titanic_total$Pclass, ordered = TRUE, levels = c('1','2','3'))
> titanic_total$Embarked <- as.factor(titanic_total$Embarked)
> titanic_total$Stage <- as.factor(titanic_total$Stage)
> titanic_total$Title <- as.factor(titanic_total$Title)
> 
> # Standardizing quantitative Variables in a  [0,1] range
> standard <- function(x)(x-min(x))/(max(x)-min(x))
> 
> titanic_total$Age <- standard(titanic_total$Age)
> titanic_total$SibSp <- standard(titanic_total$SibSp)
> titanic_total$Parch <- standard(titanic_total$Parch)
> titanic_total$Family <- standard(titanic_total$Family)
> titanic_total$Fare <- standard(titanic_total$Fare)
> 
> # Now creating the dummy variables for the factors
> dummy.vars <- dummyVars(~., data = titanic_total[,-1])
> dummy_titanic <- predict(dummy.vars, titanic_total[,-1])
> titanic_total <- data.frame(titanic_total[,1], dummy_titanic)
> colnames(titanic_total)[1] <- "Survived"
> 
> 
> # The data frame will look like this
> str(titanic_total)
'data.frame':	1309 obs. of  26 variables:
 $ Survived    : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass.L    : num  0.707 -0.707 0.707 -0.707 0.707 ...
 $ Pclass.Q    : num  0.408 0.408 0.408 0.408 0.408 ...
 $ Sex.female  : num  0 1 1 1 0 0 0 0 1 1 ...
 $ Sex.male    : num  1 0 0 0 1 1 1 1 0 0 ...
 $ Age         : num  0.273 0.474 0.324 0.436 0.436 ...
 $ SibSp       : num  0.125 0.125 0 0.125 0 0 0 0.375 0 0.125 ...
 $ Parch       : num  0 0 0 0 0 ...
 $ Fare        : num  0.0142 0.1391 0.0155 0.1036 0.0157 ...
 $ Embarked.C  : num  0 1 0 0 0 0 0 0 0 1 ...
 $ Embarked.Q  : num  0 0 0 0 0 1 0 0 0 0 ...
 $ Embarked.S  : num  1 0 1 1 1 0 1 1 1 0 ...
 $ Family      : num  0.1 0.1 0 0.1 0 0 0 0.4 0.2 0.1 ...
 $ Stage.Adult : num  1 1 1 1 1 1 1 0 1 0 ...
 $ Stage.Child : num  0 0 0 0 0 0 0 1 0 1 ...
 $ Title.Col   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Title.Dr    : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Title.Lady  : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Title.Master: num  0 0 0 0 0 0 0 1 0 0 ...
 $ Title.Miss  : num  0 0 1 0 0 0 0 0 0 0 ...
 $ Title.Mlle  : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Title.Mr    : num  1 0 0 0 1 1 1 0 0 0 ...
 $ Title.Mrs   : num  0 1 0 1 0 0 0 0 1 1 ...
 $ Title.Ms    : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Title.Rev   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ Title.Sir   : num  0 0 0 0 0 0 0 0 0 0 ...
> 
> titanic_train <- titanic_total[1:891,]
> titanic_test <- titanic_total[892:1309,]
> 
> # Creating the model
> set.seed(415)
> fit_rf <- randomForest(Survived ~., data = titanic_train, importance = TRUE, ntree=2000)
> 
> #Fitting it to test
> titanic_pred <- predict(fit_rf, newdata = titanic_test)
> 
> summary(titanic_pred)
  0   1 
274 144 
> 
> submit <- data.frame(PassengerId=892:1309,Survived=0)
> 
> submit$Survived <- titanic_pred
> 
> write.csv(submit, 'gender_submission.csv', row.names = FALSE)
> 
> proc.time()
   user  system elapsed 
  8.975   0.352   9.599 
