
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # load libraries of interest\
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.
> library(rpart.plot)
Loading required package: rpart
> 
> # The train and test data is stored in the ../input directory
> train <- read.csv("../input/train.csv");
> test  <- read.csv("../input/test.csv");
> 
> # prep and merge the two datasets, for convenience
> test$Survived <- NA
> combo <- rbind(train, test)
> 
> combo$Name <- as.character(combo$Name)
> 
> combo$Title <- sapply(combo$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
> combo$Title <- sub(' ', '', combo$Title)
> 
> combo$Title[combo$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
> 
> combo$Title[combo$Title %in% c('Capt', 'Don', 'Major', 'Sir', 'Jonkheer')] <- 'Sir'
> combo$Title[combo$Title %in% c('Dona', 'Lady', 'the Countess')] <- 'Lady'
> 
> combo$Title <- factor(combo$Title)
> 
> #table(combo$Title)
> 
> combo$FamilySize <- combo$SibSp + combo$Parch + 1
> 
> train <- combo[1:891,]
> test <- combo[892:1309,]
> 
> colnames(train)
 [1] "PassengerId" "Survived"    "Pclass"      "Name"        "Sex"        
 [6] "Age"         "SibSp"       "Parch"       "Ticket"      "Fare"       
[11] "Cabin"       "Embarked"    "Title"       "FamilySize" 
> 
> fit <- rpart(Survived ~ Pclass + Sex + Age + Fare + Embarked + Cabin + Title + FamilySize, data=train, method="class")
> 
> prediction <- predict(fit, test, type="class")
> submission <- data.frame(PassengerId = test$PassengerId, Survived = prediction)
> write.csv(submission, file="titanic_solution.csv", row.names = FALSE)
> 
> proc.time()
   user  system elapsed 
  0.204   0.036   0.239 
