
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # This R environment comes with all of CRAN preinstalled, as well as many other helpful packages
> # The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats
> # For example, here's several helpful packages to load in 
> 
> library(ggplot2) # Data visualization
Warning message:
package â€˜ggplot2â€™ was built under R version 3.6.2 
> library(readr) # CSV file I/O, e.g. the read_csv function
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

Warning message:
package â€˜dplyrâ€™ was built under R version 3.6.2 
> library(party)
Loading required package: grid
Loading required package: mvtnorm
Loading required package: modeltools
Loading required package: stats4
Loading required package: strucchange
Loading required package: zoo

Attaching package: â€˜zooâ€™

The following objects are masked from â€˜package:baseâ€™:

    as.Date, as.Date.numeric

Loading required package: sandwich
Warning messages:
1: package â€˜partyâ€™ was built under R version 3.6.2 
2: package â€˜zooâ€™ was built under R version 3.6.2 
> 
> # Input data files are available in the "../input/" directory.
> # For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory
> 
> list.files("../input")
[1] "gender_submission.csv" "test.csv"              "train.csv"            
> 
> # Any results you write to the current directory are saved as output.
> 
> ## import data
> 
> train <- read_csv("../input/train.csv") %>% 
+     select(-Ticket, -PassengerId, -Name) %>%
+     mutate(Sex = as.factor(Sex),
+            Cabin = as.factor(Cabin),
+            Embarked = as.factor(Embarked))
Parsed with column specification:
cols(
  PassengerId = [32mcol_double()[39m,
  Survived = [32mcol_double()[39m,
  Pclass = [32mcol_double()[39m,
  Name = [31mcol_character()[39m,
  Sex = [31mcol_character()[39m,
  Age = [32mcol_double()[39m,
  SibSp = [32mcol_double()[39m,
  Parch = [32mcol_double()[39m,
  Ticket = [31mcol_character()[39m,
  Fare = [32mcol_double()[39m,
  Cabin = [31mcol_character()[39m,
  Embarked = [31mcol_character()[39m
)
> test <- read_csv("../input/test.csv")
Parsed with column specification:
cols(
  PassengerId = [32mcol_double()[39m,
  Pclass = [32mcol_double()[39m,
  Name = [31mcol_character()[39m,
  Sex = [31mcol_character()[39m,
  Age = [32mcol_double()[39m,
  SibSp = [32mcol_double()[39m,
  Parch = [32mcol_double()[39m,
  Ticket = [31mcol_character()[39m,
  Fare = [32mcol_double()[39m,
  Cabin = [31mcol_character()[39m,
  Embarked = [31mcol_character()[39m
)
> 
> train
[90m# A tibble: 891 x 9[39m
   Survived Pclass Sex      Age SibSp Parch  Fare Cabin Embarked
      [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<fct>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<fct>[39m[23m [3m[90m<fct>[39m[23m   
[90m 1[39m        0      3 male      22     1     0  7.25 [31mNA[39m    S       
[90m 2[39m        1      1 female    38     1     0 71.3  C85   C       
[90m 3[39m        1      3 female    26     0     0  7.92 [31mNA[39m    S       
[90m 4[39m        1      1 female    35     1     0 53.1  C123  S       
[90m 5[39m        0      3 male      35     0     0  8.05 [31mNA[39m    S       
[90m 6[39m        0      3 male      [31mNA[39m     0     0  8.46 [31mNA[39m    Q       
[90m 7[39m        0      1 male      54     0     0 51.9  E46   S       
[90m 8[39m        0      3 male       2     3     1 21.1  [31mNA[39m    S       
[90m 9[39m        1      3 female    27     0     2 11.1  [31mNA[39m    S       
[90m10[39m        1      2 female    14     1     0 30.1  [31mNA[39m    C       
[90m# â€¦ with 881 more rows[39m
> 
> tree <- ctree(Survived ~ ., data = train)
> 
> tree

	 Conditional inference tree with 7 terminal nodes

Response:  Survived 
Inputs:  Pclass, Sex, Age, SibSp, Parch, Fare, Cabin, Embarked 
Number of observations:  891 

1) Sex == {female}; criterion = 1, statistic = 262.755
  2) Pclass <= 2; criterion = 1, statistic = 78.945
    3)*  weights = 170 
  2) Pclass > 2
    4) Fare <= 23.25; criterion = 0.999, statistic = 14.348
      5)*  weights = 117 
    4) Fare > 23.25
      6)*  weights = 27 
1) Sex == {male}
  7) Pclass <= 1; criterion = 1, statistic = 101.257
    8)*  weights = 122 
  7) Pclass > 1
    9) Age <= 9; criterion = 1, statistic = 18.893
      10) SibSp <= 2; criterion = 1, statistic = 22.749
        11)*  weights = 16 
      10) SibSp > 2
        12)*  weights = 14 
    9) Age > 9
      13)*  weights = 425 
> 
> #predict(logreg, test)
> 
> proc.time()
   user  system elapsed 
  1.481   0.132   1.643 
