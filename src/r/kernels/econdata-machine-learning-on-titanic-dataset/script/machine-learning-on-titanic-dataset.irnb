{"cells":[{"metadata":{"_uuid":"a418b592dd7fdb58718a5d747e92e5d0d157a0e2","_execution_state":"idle","trusted":true},"cell_type":"code","source":"## Importing packages\n\n# This R environment comes with all of CRAN and many other helpful packages preinstalled.\n# You can see which packages are installed by checking out the kaggle/rstats docker image: \n# https://github.com/kaggle/docker-rstats\n\nlibrary(tidyverse) # metapackage with lots of helpful functions\n\n## Running code\n\n# In a notebook, you can run a single code cell by clicking in the cell and then hitting \n# the blue arrow to the left, or by clicking in the cell and pressing Shift+Enter. In a script, \n# you can run code by highlighting the code you want to run and then clicking the blue arrow\n# at the bottom of this window.\n\n## Reading in files\n\n# You can access files from datasets you've added to this kernel in the \"../input/\" directory.\n# You can see the files added to this kernel by running the code below. \n\nlist.files(path = \"../input\")\n\n## Saving data\n\n# If you save any files or images, these will be put in the \"output\" directory. You \n# can see the output directory by committing and running your kernel (using the \n# Commit & Run button) and then checking out the compiled version of your kernel.","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"4ceb8495d6c012aa0a4f37503c0c192675a123f0"},"cell_type":"code","source":"library(ggplot2)\nlibrary(randomForest)\n\nset.seed(1)\ntrain <- read.csv(\"../input/train.csv\", stringsAsFactors=FALSE)\ntest  <- read.csv(\"../input/test.csv\",  stringsAsFactors=FALSE)\n\nextractFeatures <- function(data) {\n  features <- c(\"Pclass\",\n                \"Age\",\n                \"Sex\",\n                \"Parch\",\n                \"SibSp\",\n                \"Fare\",\n                \"Embarked\")\n  fea <- data[,features]\n  fea$Age[is.na(fea$Age)] <- -1\n  fea$Fare[is.na(fea$Fare)] <- median(fea$Fare, na.rm=TRUE)\n  fea$Embarked[fea$Embarked==\"\"] = \"S\"\n  fea$Sex      <- as.factor(fea$Sex)\n  fea$Embarked <- as.factor(fea$Embarked)\n  return(fea)\n}\n\nrf <- randomForest(extractFeatures(train), as.factor(train$Survived), ntree=100, importance=TRUE)\n\nsubmission <- data.frame(PassengerId = test$PassengerId)\nsubmission$Survived <- predict(rf, extractFeatures(test))\nwrite.csv(submission, file = \"1_random_forest_r_submission.csv\", row.names=FALSE)\n\nimp <- importance(rf, type=1)\nfeatureImportance <- data.frame(Feature=row.names(imp), Importance=imp[,1])\n\np <- ggplot(featureImportance, aes(x=reorder(Feature, Importance), y=Importance)) +\n     geom_bar(stat=\"identity\", fill=\"#53cfff\") +\n     coord_flip() + \n     theme_light(base_size=20) +\n     xlab(\"\") +\n     ylab(\"Importance\") + \n     ggtitle(\"Random Forest Feature Importance\\n\") +\n     theme(plot.title=element_text(size=18))\n\nggsave(\"2_feature_importance.png\", p)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"392db7713d12715b0c4d707c0b7f13d669e4e837"},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}