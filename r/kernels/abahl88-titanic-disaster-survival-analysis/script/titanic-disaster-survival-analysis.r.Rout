
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> # This R environment comes with all of CRAN preinstalled, as well as many other helpful packages
> # The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats
> # For example, here's several helpful packages to load in 
> # Input data files are available in the "../input/" directory.
> # For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory
> # Any results you write to the current directory are saved as output.
> 
> 
> library(ggplot2) # Data visualization
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(readr) # CSV file I/O, e.g. the read_csv function
> library(randomForest) # classification algorithm
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

> library(dplyr) # Data wrangling

Attaching package: ‘dplyr’

The following object is masked from ‘package:randomForest’:

    combine

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> 
> 
> train <- read.csv('../input/train.csv', stringsAsFactors = F)
> test  <- read.csv('../input/test.csv', stringsAsFactors = F)
> 
> full  <- bind_rows(train, test) # bind training & test data
> 
> full[which(is.na(full$Survived)),2] <- 0 #addressing NA values due to combining of train and test datasets
> 
> full$Survived <- as.factor(full$Survived)
> 
> 
> # check data
> str(full)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
> 
> head(full)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked
1        A/5 21171  7.2500              S
2         PC 17599 71.2833   C85        C
3 STON/O2. 3101282  7.9250              S
4           113803 53.1000  C123        S
5           373450  8.0500              S
6           330877  8.4583              Q
> 
> ggplot(train , aes(x = Survived)) + geom_bar()
> 
> table(train$Survived)

  0   1 
549 342 
> 
> sapply(full, function(full) sum(is.na(full)))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0           0           0           0           0         263 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           1           0           0 
> 
> which(is.na(full$Fare))
[1] 1044
> 
> full[1044, ]
     PassengerId Survived Pclass               Name  Sex  Age SibSp Parch
1044        1044        0      3 Storey, Mr. Thomas male 60.5     0     0
     Ticket Fare Cabin Embarked
1044   3701   NA              S
> 
> thirdclass <- full[full$Pclass == 3 & full$Embarked == 'S' ,  ]
> 
> ggplot(thirdclass , aes(Fare)) + geom_density()
Warning message:
Removed 1 rows containing non-finite values (stat_density). 
> 
> median(thirdclass$Fare , na.rm = TRUE)
[1] 8.05
> 
> full$Fare[1044] <- median(thirdclass$Fare , na.rm = TRUE)
> 
> Male_Ages <- full[ which(is.na(full$Age)) & full$Sex == 'male' , ]
Warning message:
In which(is.na(full$Age)) & full$Sex == "male" :
  longer object length is not a multiple of shorter object length
> 
> median(Male_Ages$Age , na.rm =  TRUE)
[1] 28
> 
> ggplot(Male_Ages , aes(Age)) + geom_density()
Warning message:
Removed 185 rows containing non-finite values (stat_density). 
> 
> full$Age[is.na(full$Age) == TRUE & full$Sex == 'male'] <- median(Male_Ages$Age , na.rm =  TRUE)
> 
> Female_Ages <- full[ which(is.na(full$Age)) & full$Sex == 'female' , ]
Warning message:
In which(is.na(full$Age)) & full$Sex == "female" :
  longer object length is not a multiple of shorter object length
> 
> median(Female_Ages$Age , na.rm =  TRUE)
[1] 27
> 
> ggplot(Female_Ages , aes(Age)) + geom_density()
Warning message:
Removed 78 rows containing non-finite values (stat_density). 
> 
> full$Age[is.na(full$Age) == TRUE & full$Sex == 'female'] <- median(Female_Ages$Age , na.rm =  TRUE)
> 
> ggplot(train , aes(x = Pclass , fill = factor(Survived))) + geom_bar(width = 0.5)
> 
> ggplot(train, aes(Age,fill = factor(Survived))) +
+     geom_histogram(binwidth = 5) + facet_grid(.~Sex)
Warning message:
Removed 177 rows containing non-finite values (stat_bin). 
> 
> train <- full[1:891,]
> test <- full[892:1309,]
> 
> train$Sex <- as.factor(train$Sex)
> train$Embarked <- as.factor(train$Embarked)
> 
> 
> test$Sex <- as.factor(test$Sex)
> test$Embarked <- as.factor(test$Embarked)
> 
> sapply(full, function(full) sum(is.na(full)))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0           0           0           0           0           0 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           0           0           0 
> 
> rf_model <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + 
+                                             Fare , data = train )
> 
> round(importance(rf_model), 2)
       MeanDecreaseGini
Pclass            35.01
Sex              103.11
Age               58.13
SibSp             16.60
Parch             12.48
Fare              69.86
> 
> prediction <- predict(rf_model, test)
> 
> solution <- data.frame(PassengerID = test$PassengerId, Survived = prediction)
> 
> proc.time()
   user  system elapsed 
  1.673   0.109   1.852 
