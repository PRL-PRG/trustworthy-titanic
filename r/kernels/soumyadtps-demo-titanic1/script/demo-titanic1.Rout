
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> # This R script will run on our backend. You can write arbitrary code here!
> 
> # Many standard libraries are already installed, such as randomForest
> 
> 
> # The train and test data is stored in the ../input directory
> 
> # We can inspect the train data. The results of this are printed in the log tab below
> 
> 
> # Here we will plot the passenger survival by class
> library(rpart)
> train_data <- read.csv("../input/train.csv")
> test_data <- read.csv("../input/test.csv")
> 
> train_edited_dataframe <- subset(train_data, !(is.na(train_data$Age)> 0)) #filters blank age rows
> test_edited_dataframe <- subset(test_data, !(is.na(test_data$Age)> 0)) #filters blank age rows
> 
> head(train_edited_dataframe)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
7           7        0      1
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
7                             McCarthy, Mr. Timothy J   male  54     0     0
            Ticket    Fare Cabin Embarked
1        A/5 21171  7.2500              S
2         PC 17599 71.2833   C85        C
3 STON/O2. 3101282  7.9250              S
4           113803 53.1000  C123        S
5           373450  8.0500              S
7            17463 51.8625   E46        S
> tree_model <- rpart(Survived ~ Age + Pclass + Sex, data = train_edited_dataframe, method = "class")
> summary(tree_model)
Call:
rpart(formula = Survived ~ Age + Pclass + Sex, data = train_edited_dataframe, 
    method = "class")
  n= 714 

          CP nsplit rel error    xerror       xstd
1 0.45862069      0 1.0000000 1.0000000 0.04525169
2 0.02758621      1 0.5413793 0.5413793 0.03816193
3 0.01206897      3 0.4862069 0.5620690 0.03867430
4 0.01034483      5 0.4620690 0.5482759 0.03833522
5 0.01000000      6 0.4517241 0.5482759 0.03833522

Variable importance
   Sex Pclass    Age 
    64     19     17 

Node number 1: 714 observations,    complexity param=0.4586207
  predicted class=0  expected loss=0.4061625  P(node) =1
    class counts:   424   290
   probabilities: 0.594 0.406 
  left son=2 (453 obs) right son=3 (261 obs)
  Primary splits:
      Sex    splits as  RL,       improve=99.998170, (0 missing)
      Pclass < 2.5  to the right, improve=39.252560, (0 missing)
      Age    < 6.5  to the right, improve= 8.814172, (0 missing)
  Surrogate splits:
      Age < 15.5 to the right, agree=0.639, adj=0.011, (0 split)

Node number 2: 453 observations,    complexity param=0.02758621
  predicted class=0  expected loss=0.205298  P(node) =0.6344538
    class counts:   360    93
   probabilities: 0.795 0.205 
  left son=4 (429 obs) right son=5 (24 obs)
  Primary splits:
      Age    < 6.5  to the right, improve=10.788930, (0 missing)
      Pclass < 1.5  to the right, improve= 9.457965, (0 missing)

Node number 3: 261 observations,    complexity param=0.02758621
  predicted class=1  expected loss=0.2452107  P(node) =0.3655462
    class counts:    64   197
   probabilities: 0.245 0.755 
  left son=6 (102 obs) right son=7 (159 obs)
  Primary splits:
      Pclass < 2.5  to the right, improve=28.945620, (0 missing)
      Age    < 12   to the left,  improve= 1.891684, (0 missing)
  Surrogate splits:
      Age < 18.5 to the left,  agree=0.678, adj=0.176, (0 split)

Node number 4: 429 observations
  predicted class=0  expected loss=0.1794872  P(node) =0.6008403
    class counts:   352    77
   probabilities: 0.821 0.179 

Node number 5: 24 observations
  predicted class=1  expected loss=0.3333333  P(node) =0.03361345
    class counts:     8    16
   probabilities: 0.333 0.667 

Node number 6: 102 observations,    complexity param=0.01206897
  predicted class=0  expected loss=0.4607843  P(node) =0.1428571
    class counts:    55    47
   probabilities: 0.539 0.461 
  left son=12 (12 obs) right son=13 (90 obs)
  Primary splits:
      Age < 38.5 to the right, improve=3.875163, (0 missing)

Node number 7: 159 observations
  predicted class=1  expected loss=0.05660377  P(node) =0.2226891
    class counts:     9   150
   probabilities: 0.057 0.943 

Node number 12: 12 observations
  predicted class=0  expected loss=0.08333333  P(node) =0.01680672
    class counts:    11     1
   probabilities: 0.917 0.083 

Node number 13: 90 observations,    complexity param=0.01206897
  predicted class=1  expected loss=0.4888889  P(node) =0.1260504
    class counts:    44    46
   probabilities: 0.489 0.511 
  left son=26 (75 obs) right son=27 (15 obs)
  Primary splits:
      Age < 5.5  to the right, improve=1.777778, (0 missing)

Node number 26: 75 observations,    complexity param=0.01034483
  predicted class=0  expected loss=0.4666667  P(node) =0.105042
    class counts:    40    35
   probabilities: 0.533 0.467 
  left son=52 (8 obs) right son=53 (67 obs)
  Primary splits:
      Age < 12   to the left,  improve=3.900498, (0 missing)

Node number 27: 15 observations
  predicted class=1  expected loss=0.2666667  P(node) =0.0210084
    class counts:     4    11
   probabilities: 0.267 0.733 

Node number 52: 8 observations
  predicted class=0  expected loss=0  P(node) =0.01120448
    class counts:     8     0
   probabilities: 1.000 0.000 

Node number 53: 67 observations
  predicted class=1  expected loss=0.4776119  P(node) =0.09383754
    class counts:    32    35
   probabilities: 0.478 0.522 

> #rpart.plot(tree_model)
> 
> predicted_value <- predict(tree_model, test_data, type = "class")
> print(predicted_value)
  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20 
  0   0   0   0   1   0   1   0   1   0   0   0   1   0   1   1   0   0   1   0 
 21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40 
  0   0   1   0   1   0   1   0   0   0   0   0   1   1   0   0   1   1   0   0 
 41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60 
  0   0   0   1   1   0   0   0   1   1   0   0   1   1   0   0   0   0   0   1 
 61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80 
  0   0   0   1   0   1   1   0   0   1   1   0   1   0   1   0   0   1   0   1 
 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 
  1   0   0   0   0   0   1   1   1   1   1   0   1   0   0   0   1   0   1   0 
101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 
  1   0   0   0   1   0   0   0   0   0   0   1   1   1   1   0   0   1   0   1 
121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 
  1   0   1   0   0   1   0   1   0   0   0   0   1   0   0   0   0   0   1   0 
141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 
  0   1   0   0   0   0   0   0   0   0   1   0   0   1   0   0   1   1   0   1 
161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 
  1   0   1   0   0   1   0   0   1   1   0   0   0   0   0   1   1   0   1   1 
181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 
  0   0   1   0   1   0   1   0   1   0   0   0   0   0   0   0   1   1   0   1 
201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 
  1   1   0   1   0   0   1   0   1   0   0   0   0   1   1   0   1   0   1   0 
221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 
  1   0   1   0   1   1   0   1   0   0   0   1   0   0   0   0   0   0   1   1 
241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 
  1   1   0   0   0   0   1   0   1   1   1   0   0   0   0   0   0   0   1   0 
261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 
  0   0   1   1   0   0   0   0   1   0   0   0   1   1   0   1   0   0   0   0 
281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 
  1   1   1   0   1   0   0   0   0   0   0   1   0   0   0   0   1   0   0   0 
301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 
  0   0   0   0   1   1   0   1   0   0   0   0   0   1   1   1   0   0   0   0 
321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 
  0   0   0   0   1   0   1   0   0   0   1   0   0   1   0   0   0   0   0   0 
341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 
  0   0   0   1   0   1   0   1   0   1   1   0   0   0   1   0   1   0   0   1 
361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 
  0   1   1   0   1   1   0   1   1   0   0   1   0   0   1   1   1   0   0   1 
381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 
  0   0   1   1   0   1   0   0   0   1   0   1   0   0   0   1   0   1   0   0 
401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 
  1   0   1   0   0   0   0   0   1   1   1   1   1   0   1   0   0   0 
Levels: 0 1
> summary(predicted_value)
  0   1 
263 155 
> 
> proc.time()
   user  system elapsed 
  0.263   0.073   0.392 
