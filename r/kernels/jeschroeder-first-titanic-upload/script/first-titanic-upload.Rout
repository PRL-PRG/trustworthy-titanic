
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # This R script will run on our backend. You can write arbitrary code here!
> 
> # Many standard libraries are already installed, such as randomForest
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.
> # Load packages
> library(ggplot2) # visualization

Attaching package: ‘ggplot2’

The following object is masked from ‘package:randomForest’:

    margin

Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(ggthemes) # visualization
> library(scales) # visualization
Warning message:
package ‘scales’ was built under R version 3.6.2 
> library(dplyr) # data manipinstall.packages("ggplot2")ulation

Attaching package: ‘dplyr’

The following object is masked from ‘package:randomForest’:

    combine

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> 
> library(Rcpp)
> library(utils)
> library(datasets)
> library(methods)
> library(rpart)
> 
> # The train and test data is stored in the ../input directory
> train <- read.csv("../input/train.csv")
> test  <- read.csv("../input/test.csv")
> 
> full  <- bind_rows(train, test) # bind training & test data
> 
> 
> 
> # QUick check of age and survival to see if there may be reason to look at age groups seperatly
> ggplot(full[1:891,], aes(Age, fill = factor(Survived))) + 
+ geom_histogram(alpha = 0.7, position="identity") + 
+ facet_grid(.~Sex) + 
+ theme_few()
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Warning message:
Removed 177 rows containing non-finite values (stat_bin). 
> 
> 
> 
> # Grab title from passenger names
> full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
> 
> # reassign mlle, ms, and mme accordingly
> full$Title[full$Title == 'Mlle']        <- 'Miss' 
> full$Title[full$Title == 'Ms']          <- 'Miss'
> full$Title[full$Title == 'Mme']         <- 'Mrs' 
> 
> # Show title counts by sex again
> Stat<-prop.table(table(full$Survived, full$Title),2)
> head(Stat,n=1)
   
         Capt       Col       Don Dona        Dr  Jonkheer      Lady     Major
  0 1.0000000 0.5000000 1.0000000      0.5714286 1.0000000 0.0000000 0.5000000
   
       Master      Miss        Mr       Mrs       Rev       Sir the Countess
  0 0.4250000 0.2972973 0.8433269 0.2063492 1.0000000 0.0000000    0.0000000
> 
> # Create a family size variable including the passenger themselves
> full$Fsize <- full$SibSp + full$Parch + 1
> 
> # The first character is the deck. For example:
> strsplit(full$Cabin[2], NULL)[[1]]
Error in strsplit(full$Cabin[2], NULL) : non-character argument
Execution halted
