{"cells":[{"metadata":{"_uuid":"a432bd4cbd21a9f88108cdd267a2a13159c46bbc"},"cell_type":"markdown","source":"Lendo os dados e analisando as variáveis :"},{"metadata":{"_uuid":"cf36fea835dfa4771a2429b2b8ba12d6cde0baa5","_execution_state":"idle","trusted":true},"cell_type":"code","source":"dados = read.csv(\"../input/train.csv\",header = T)\nhead(dados);dim(dados)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"scrolled":true,"_uuid":"438fd766f7e22705c0426d63a8f1fc348d7d71c4"},"cell_type":"code","source":"str(dados)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"f877b1b1ef73861122b0004516110cb49da59ad5"},"cell_type":"markdown","source":"Retirando variaveis irrelevantes para as analises subsequentes: Name, Ticket e Cabin, sendo respectivamente colunas 4,9 e 11."},{"metadata":{"trusted":true,"_uuid":"3c68f5d4c9c83b7266e2e470446db3d2ef317734"},"cell_type":"code","source":"\ndados = dados[,-c(4,9,11)]\n\n# ha valores NA EM Age e Embarked\nsummary(dados)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"2c39abecbd8839015823e0f56781bf816bff222a"},"cell_type":"markdown","source":"Verificando como se distribue a variavel Embarked com relacao a algumas outras variaveis para definir a melhor forma de imputação nos valores ausentes."},{"metadata":{"trusted":true,"_uuid":"04a71182d611b04b23af9be4989362a59848d9a2"},"cell_type":"code","source":"by(dados$Embarked,dados$Pclass,table)\nby(dados$Embarked,dados$Sex,table)\nby(dados$Embarked,dados$SibSp,table)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"f845d92531cfb58c636bcbb4430630a2e7addc75"},"cell_type":"markdown","source":"Nas análises acima todas as 2 observações ausentes correspondem a categórias de outras variáveis que possuem Embarked S como a opção mais frequente, portanto, esta sera imputada."},{"metadata":{"trusted":true,"_uuid":"16fe3d1be86f0cf0a13c5cf25cddfaa694afa31f"},"cell_type":"code","source":"which(dados$Embarked==\"\")\ndados$Embarked[c(62,830)]=\"S\"","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"61b3bdecef2c2f47523f307b383b9971046eecef"},"cell_type":"markdown","source":"Verificando como se distribue a variavel Age com relacao a algumas outras variaveis."},{"metadata":{"trusted":true,"_uuid":"b2eff01f1d912851d7dbe8acfb86d6763ae4b21b"},"cell_type":"code","source":"by(dados$Age,dados$Pclass,summary)\nby(dados$Age,dados$Sex,summary)\nby(dados$Age,dados$SibSp,summary)\nby(dados$Age,dados$Parch,summary)\nby(dados$Age,dados$Embarked,summary)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"3367753dd0a0fa022d8e2a1f64781711714a915b"},"cell_type":"markdown","source":"Individuos com Parch 2 sera imputada a mediana da idade desta categoria, no caso, 16.5. Para os demais valores ausentes sera imputada a mediana levando em consideracao a variavel Pclass."},{"metadata":{"trusted":true,"_uuid":"9098fcd7356eeb9b56fd4b1b1939827ff0e57ab0"},"cell_type":"code","source":"\ndados$Age[c(which(is.na(dados$Age)&dados$Parch==2))]=16.5\n\ndados$Age[c(which(is.na(dados$Age)&dados$Pclass==1))]=37\ndados$Age[c(which(is.na(dados$Age)&dados$Pclass==2))]=29\ndados$Age[c(which(is.na(dados$Age)&dados$Pclass==3))]=24","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"0171c549fefa03fd9df4b1b033f881a9fff5d573"},"cell_type":"code","source":"sum(apply(dados,2,is.na)) # nao ha mais valores ausentes, podendo portanto passar aos modelos","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"81f49afc76700daf8e5761fc47e9eb1a53a7d6f2"},"cell_type":"markdown","source":"Será dividido em treino e teste para verificação da adequalidade dos modelos com dados não utilizados para modelagem."},{"metadata":{"trusted":true,"_uuid":"ac3cb08903edefe5c5044e1fece56dea9fa05b95"},"cell_type":"code","source":"library(dplyr)\nset.seed(70815)\ntreino = sample_n(dados,800,replace = F)\nteste = dados[-as.integer(row.names(treino)),]\n","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"4f770996aff9caab59c39f92d9d16f576fad920e"},"cell_type":"markdown","source":"## REGRESSÃO LOGÍSTICA"},{"metadata":{"trusted":true,"_uuid":"c29590900ac4df362b553232c4081cdebd65ce41"},"cell_type":"code","source":"modelo_rg = glm(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,\n                family = \"binomial\",data = treino)\nsummary(modelo_rg)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"74ffba059948953a1960a0ebb9b65f2ea0460f2f"},"cell_type":"code","source":"# Fare nao significativo\nmodelo_rg = update(modelo_rg,.~.-Fare)\nsummary(modelo_rg)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"7af8acd26dcf5fb9b8831dd21fc84e0f8e207d1a"},"cell_type":"code","source":"# Parch nao significativo\nmodelo_rg = update(modelo_rg,.~.-Parch)\nsummary(modelo_rg)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c0d16357eeba7424318a9b7030ff3b00aa574033"},"cell_type":"markdown","source":"Tendo o modelo somente variáveis significativas passa-se a análise do ajuste. Abaixo verifica-se a significância da deviance do modelo, sendo esta, uma estatística que permite verificar a adequabilidade do modelo. Caso a deviance não seja significativa ao nível de 5% podemos afirmar que o modelo é adequado."},{"metadata":{"trusted":true,"_uuid":"d914f366913cb0e65fb0a72607069324a074d68d"},"cell_type":"code","source":"pchisq(modelo_rg$deviance,df=modelo_rg$df.residual,lower.tail = F)\n# deviance nao significativa, portanto, modelo adequado","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"2586be90bbe20ae0d0602c410ec6cf0bad985c44"},"cell_type":"markdown","source":"Abaixo fazemos a análise de residuos do modelo via envelope simulado. É esperado que caso as suposições do modelo estejam sendo respeitadas poucos pontos caiam fora dos limites, como foi o nosso caso. "},{"metadata":{"trusted":true,"_uuid":"1488d0b72b7912001f2250ecfb18bef70428b9ee"},"cell_type":"code","source":"library(hnp)\nset.seed(5047774)\nhnp(modelo_rg,halfnormal = F,paint.out = T,pch=16,sim=500,print.on = T)\n# somente 3.88% dos pontos ficaram fora do envelope","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"fe74cf6234f4482fc187240f387aab6545eedb0c"},"cell_type":"markdown","source":"Abaixo plotamos a tradicional curva ROC."},{"metadata":{"trusted":true,"_uuid":"2d52efd575c6bb215bdcc1d32b0b031a3497e7bd"},"cell_type":"code","source":"library(ROCR)\n\n# Encontra os valores preditos para as probabilidades\n\npredictionTreino=predict(modelo_rg,treino,type=\"response\")\n\npred = prediction(predictionTreino, treino$Survived)\n\n# Calcula verdadeiros positivos e falsos positivos\nperf = performance(pred,\"tpr\", \"fpr\")\nplot(perf,colorize = TRUE,main=\"Curva ROC - Conj. de Treino\")\nabline(0, 1, lty = 2)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a5493bcdd6321722a503f725347e1c3bcbd674d5"},"cell_type":"code","source":"# Plota sensibilidade e especificidade\nperf1 = performance(pred, \"sens\", \"spec\")\nplot(perf1,main=\"Sensibilidade e Especificidade - Conj. de Treino\")\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"9145bc81f4ffd913450bd67f837e92bff6e815f6"},"cell_type":"code","source":"## Calcula area abaixo da curva\nauc=(performance(pred,\"auc\")@y.values)[[1]]\nauc # 0.8562058","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"f3c42ed612e9d260779ab6dadc88eac72987e454"},"cell_type":"code","source":"# utilizando o conjunto de teste \n\n# Encontra os valores preditos para as probabilidades\npredictionTeste=predict(modelo_rg,teste,type=\"response\")\n\npred_GLM = prediction(predictionTeste, teste$Survived)\n\n# Calcula verdadeiros positivos e falsos positivos\nperf = performance(pred_GLM,\"tpr\", \"fpr\")\nplot(perf,colorize = TRUE,main=\"Curva ROC - Conj. de Teste\")\nabline(0, 1, lty = 2)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c21a756f05d5884cb7f58fb2efc21e676b4456fa"},"cell_type":"code","source":"# Plota sensibilidade e especificidade\nperf1 = performance(pred_GLM, \"sens\", \"spec\")\nplot(perf1,main=\"Sensibilidade e Especificidade - Conj. de Teste\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"1464a9e8d90ff4249df17637ce6e4aa22b3c9e59"},"cell_type":"code","source":"## Calcula area abaixo da curva\nauc=(performance(pred_GLM,\"auc\")@y.values)[[1]]\nauc # 0.8598485","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"efa60261547f4c259daca8367268312ab3acf521"},"cell_type":"code","source":"pred_teste=ifelse(predictionTeste>0.50,1,0) # definindo ponto de corte igual a 0.5\n# acuracia\n1-ks::compare(pred_teste, teste$Survived)$error # 0.7912088","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"59f11d4db95e1f4760890bb683410670e4c09c10"},"cell_type":"markdown","source":"Verificando os pontos de corte que maximizam à acurácia tanto com os dados de treino como com os de teste."},{"metadata":{"trusted":true,"_uuid":"a649b328c92d9b2d8a189367d70ff3636c8620f1"},"cell_type":"code","source":"# definindo um ponto de corte ideal\ncorte=seq(0.35,0.85,0.01)\nacuracia = c()\nfor(i in 1:length(corte)){\n  pred_teste=ifelse(predictionTeste>corte[i],1,0)\n  acuracia[i]=1-ks::compare(pred_teste, teste$Survived)$error\n}\nplot(corte,acuracia,type=\"l\")\nmax(acuracia) # 0.8461538\ncorte[which(acuracia==max(acuracia))]\n# 0.56 0.57 0.58","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"bbf4d3ee0f5082116df4a4a4e6fd2c0f41e60427"},"cell_type":"code","source":"# verificando o corte otimo com os dados de treino\ncorte=seq(0.35,0.85,0.01)\nacuracia = c()\nfor(i in 1:length(corte)){\n  pred_treino=ifelse(predictionTreino>corte[i],1,0)\n  acuracia[i]=1-ks::compare(pred_treino, treino$Survived)$error\n}\nplot(corte,acuracia,type=\"l\")\nmax(acuracia) # 0.8175\ncorte[which(acuracia==max(acuracia))]\n# 0.58 0.62\n# o ponto de corte 0.58 aparece como o melhor com os \n# dados de treino e tbm com os dados de teste ","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"3597144d332c644ef8aacb44df729d2aa498361d"},"cell_type":"markdown","source":"## NAIVE BAYES"},{"metadata":{"trusted":true,"_uuid":"22acd78cd60706eed84907d794cfd4744691b371"},"cell_type":"code","source":"dados_nb = treino\ndados_nb$Survived = as.factor(dados_nb$Survived)\n\nmodelo_nb = naivebayes::naive_bayes(Survived~Pclass+Sex+Age+SibSp+\n                                      Parch+Fare+Embarked, data = dados_nb)\ny_estimado_nb = predict(modelo_nb, newdata = teste[,-c(1,2)], type = \"class\")\n\n# acuracia \n1-ks::compare(teste$Survived,y_estimado_nb)$error\n# 0.8021978","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"01172c7efbf8ee888b66d4a1b2f9267ee0d6eda0"},"cell_type":"markdown","source":"## KNN"},{"metadata":{"_uuid":"e5233055a4540a005e1a163b375404488da221b3"},"cell_type":"markdown","source":"Adequando os dados para a utilização da técnica."},{"metadata":{"trusted":true,"_uuid":"bcf158079c6988f9a1c55ef4c5e84d13c95a31ff"},"cell_type":"code","source":"x_treino = treino[,-c(1,2)] # coluna PassengerId tbm deve ser desconsiderada\nhead(x_treino)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"b1cdcefc9b73c999d366583be9aec10014dfbe51"},"cell_type":"code","source":"# passando as variaveis para numericas \nsummary(x_treino$Age)\nx_treino$Age = cut(x_treino$Age,breaks = c(0,22,26,37,80),labels = c(1,2,3,4))\nsummary(x_treino$Age)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a59cf90be018b10dcc71a5e4b61db192a86ea36d"},"cell_type":"code","source":"summary(x_treino$Fare)\nx_treino$Fare = cut(x_treino$Fare,breaks = c(-1,7.896,14.456,31.069,513),\n                    labels = c(1,2,3,4))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"f9ff17ea67a63902546a23eabc2641032ccd946d"},"cell_type":"code","source":"x_treino$Sex = ifelse(x_treino$Sex==\"male\",1,2)\nx_treino$Embarked = ifelse(x_treino$Embarked==\"C\",1,\n                           ifelse(x_treino$Embarked==\"Q\",2,3))\ny_treino = treino$Survived\n\nx_teste = teste[,-c(1,2)]\n\nx_teste$Age = cut(x_teste$Age,breaks = c(0,22,26,37,80),labels = c(1,2,3,4))\n\nx_teste$Fare = cut(x_teste$Fare,breaks = c(-1,7.896,14.456,31.069,513),\n                    labels = c(1,2,3,4))\n\nx_teste$Sex = ifelse(x_teste$Sex==\"male\",1,2)\nx_teste$Embarked = ifelse(x_teste$Embarked==\"C\",1,\n                           ifelse(x_teste$Embarked==\"Q\",2,3))\ny_teste = teste$Survived\n\nx_treino = data.frame(apply(x_treino,2,as.numeric))\nx_teste = data.frame(apply(x_teste,2,as.numeric))\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"5ecf3f61903e6b7fe385b6dd0f5c305184f6f7a4"},"cell_type":"code","source":"k = 5\nset.seed(2900741)\ny_estimado = class::knn(x_treino, x_teste, y_treino,\n                        k = k ,prob = F)\n# acuracia\n1-ks::compare(y_teste,y_estimado)$error # 0.9010989","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a2d0185bbccd4e339d0d1e98d3df7cbf7aae74a9"},"cell_type":"markdown","source":"Verificando o k que maximiza a acurácia."},{"metadata":{"trusted":true,"_uuid":"c56dfe23c119c740a02424c49bb2e9a47fd1f9d9"},"cell_type":"code","source":"acuracia=c()\nfor(i in 1:35){\n  y_estimado = class::knn(x_treino, x_teste, y_treino,\n                          k = i ,prob = F)\n  acuracia[i]=1-ks::compare(y_teste,y_estimado)$error\n}\nk=1:length(acuracia)\nplot(k,acuracia,type = \"l\",main=\"\")\n\nmax(acuracia);k[which(acuracia==max(acuracia))]\n# 0.9010989 ; 5","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"8f43c32b77d8af50621dba757d2ceae87638458c"},"cell_type":"markdown","source":"## REDES NEURAIS ARTIFICIAIS"},{"metadata":{"trusted":true,"_uuid":"32741dca55e98498c746582dd22e33ed4001b215"},"cell_type":"code","source":"# mlp {RSNNS}\nset.seed(12345)\nmodelo_mlp = RSNNS::mlp(x_treino, y_treino, size = c(4,4),maxit = 30000, \n                 inputsTest = x_teste, targetsTest = y_teste)\n# size defini a arquitetuta da rede, numero de camadas intermediarias,\n# por exemplo: size=c(4,4) gera uma rede com 4 camadas intermediarias cada uma com\n# 4 neuronios\n\n# Não normalizamos os dados, no entanto, redes neurais é sempre melhor trabalhar com dados normalizados\n\ny_estimado_rn = round(modelo_mlp$fittedTestValues,0)\n\n## acuracia\n1-ks::compare(y_teste,y_estimado_rn)$error\n# 0.8681319","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"aee23d1989f3c0cfae4ede6c0ebd0057ba75483f"},"cell_type":"code","source":"# plot do erro quadratico medio\nplot(modelo_mlp$IterativeFitError,type=\"n\",main=\"Curva de Aprendizagem\",xlab=\"Iteraçao\",\n     ylab=\"Erro medio quadrado\")\nlines(modelo_mlp$IterativeFitError,col=\"1\",lwd=3,cex=2)\n# deseja-se que a curva de aprendizagem do erro medio va para 0 a medida que aumenta o \n# numero de iterações, como nao foi o caso","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"d8b961ecaebc4cf2700e13e3c4024804d8e6c155"},"cell_type":"code","source":"########################## realizando predicoes com os dados de test ####################################\n\n################################### regressao logistica ################################################\n\ntest = read.csv(\"../input/test.csv\",header = T)\nhead(test)\nsummary(test)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"bc31429053fcaf6711e5070f4234c70f3cf55efa"},"cell_type":"code","source":"# retirando variaveis irrelevantes para analises subsequentes:\n# Name, Ticket e Cabin\ndados = test[,-c(3,8,10)]\n\n# ha valores NA em Age e Fare \n# como Fare nao foi significativa no modelo de regresao \n# so imputaremos a variavel Age da mesma forma que fizemos anteriormente\n# individuos com Parch 2 sera imputada a mediana da idade desta\n# categoria, no caso, 16.5\ndados$Age[c(which(is.na(dados$Age)&dados$Parch==2))]=16.5\n# para os demais valores ausentes sera imputada a mediana \n# levando em consideracao a variavel Pclass\n\ndados$Age[c(which(is.na(dados$Age)&dados$Pclass==1))]=37\ndados$Age[c(which(is.na(dados$Age)&dados$Pclass==2))]=29\ndados$Age[c(which(is.na(dados$Age)&dados$Pclass==3))]=24\n\nsummary(dados)\n# nao ha mais valores ausentes, exceto em Fare","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"f70a0eb79763de38061c3d0524c32ca39657fa21"},"cell_type":"code","source":"summary(modelo_rg)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"1b7808f9a89891b70d656db26c310cd8611396ec"},"cell_type":"code","source":"# Encontra os valores preditos para as probabilidades\npredictionTeste=predict(modelo_rg,dados,type=\"response\")\n\npred_teste=ifelse(predictionTeste>0.58,1,0) # definindo ponto de corte igual a 0.58\nsubmission_rg = data.frame(PassengerId=dados$PassengerId,Survived=pred_teste)\nhead(submission_rg)\n\n# write.csv(submission_rg,file = \"submission_rg.csv\",row.names = F)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"dee35de1b1eecbf4858c4d64a0ee6611c2b8410a"},"cell_type":"code","source":"################################### naive bayes ##########################################################\n\ny_estimado_nb = predict(modelo_nb, newdata = dados, type = \"class\")\nsubmission_nb = data.frame(PassengerId=dados$PassengerId,Survived=y_estimado_nb)\nhead(submission_nb)\n# write.csv(submission_nb,file = \"submission_nb.csv\",row.names = F)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"2f38077719ccbdb92763db7b2c0f5a2821892bb1"},"cell_type":"code","source":"\n##################################### knn ###############################################################\n\n\nx_teste = dados[,-c(1)]\n\nx_teste$Age = cut(x_teste$Age,breaks = c(0,22,26,37,80),labels = c(1,2,3,4))\nsummary(x_teste$Age)\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"0264d62f1d290f15ef79e606d0a6689d9f1ffa56"},"cell_type":"code","source":"# ha um valor NA em Fare, atribuiremos a este o mediana da variavel\nx_teste$Fare[which(is.na(x_teste$Fare))]=median(x_teste$Fare,na.rm = T)\nx_teste$Fare = cut(x_teste$Fare,breaks = c(-1,7.896,14.456,31.069,513),\n                   labels = c(1,2,3,4))\nsummary(x_teste$Fare)\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"127e01dc2aa6ce721e1684aaa2577caf60479abe"},"cell_type":"code","source":"x_teste$Sex = ifelse(x_teste$Sex==\"male\",1,2)\nx_teste$Embarked = ifelse(x_teste$Embarked==\"C\",1,\n                          ifelse(x_teste$Embarked==\"Q\",2,3))\n\n\nx_teste = data.frame(apply(x_teste,2,as.numeric))\n\nk = 5\nset.seed(2900741)\ny_estimado_knn = class::knn(x_treino, x_teste, y_treino,\n                        k = k ,prob = F)\nsubmission_knn = data.frame(PassengerId=dados$PassengerId,Survived=y_estimado_knn)\nhead(submission_knn)\n# write.csv(submission_knn,file = \"submission_knn.csv\",row.names = F)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"2b4459d91dc218f56bf16a0799b24356fd3b03e7"},"cell_type":"code","source":"####################################### rede neural ###################################################\nset.seed(12345)\npredictions = predict(modelo_mlp,x_teste)\ny_estimado_rn = round(predictions,0)\nsubmission_rn = data.frame(PassengerId=dados$PassengerId,Survived=as.vector(y_estimado_rn))\nhead(submission_rn)\n# write.csv(submission_rn,file = \"submission_rn.csv\",row.names = F)","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}