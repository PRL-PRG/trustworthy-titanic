
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> library(dplyr)            # For data frame manipulation and the %>%  pipe

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library(ggplot2)          # For visualizations
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(gridExtra)        # For plotting multiple plots

Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine

> library(mice)             # multivariate imputation by chained equations

Attaching package: ‘mice’

The following objects are masked from ‘package:base’:

    cbind, rbind

Warning message:
package ‘mice’ was built under R version 3.6.2 
> library(randomForest)     # random forest model
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:gridExtra’:

    combine

The following object is masked from ‘package:ggplot2’:

    margin

The following object is masked from ‘package:dplyr’:

    combine

> 
> train<-read.table("../input/train.csv",sep=",",header=TRUE) 
> test<-read.table("../input/test.csv",sep=",",header=TRUE)
> full  <- bind_rows(train, test) # bind training & test data
> 
> str(train, give.attr = FALSE)
'data.frame':	891 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : Factor w/ 891 levels "Abbing, Mr. Anthony",..: 109 191 358 277 16 559 520 629 417 581 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 148 levels "","A10","A14",..: 1 83 1 57 1 1 131 1 1 1 ...
 $ Embarked   : Factor w/ 4 levels "","C","Q","S": 4 2 4 4 4 3 4 4 4 2 ...
> 
> #stat descriptive
> 
> #survived
> group_colors <- c("0" = "tomato", "1" = "limegreen", "male" = "skyblue", "female" = "pink")
> train$Survived <- factor(train$Survived)
> ggplot (train, aes(x = Survived)) + 
+   geom_bar(fill = c("0" = "tomato", "1" = "limegreen")) +
+   labs(title = "Survival on the Titanic", x = "Survival", y = "Number of Passengers")
> 
> #age and gender
> ggplot(train, aes(x = Sex)) + 
+   geom_bar(aes(fill = Survived), position = "fill") +
+   scale_fill_manual(values = group_colors) +
+   labs(title = "Survival by Sex", x = "Sex", y = "Proportion of Passengers")
> 
> ggplot(train, aes(x = Age)) + 
+   geom_histogram(aes(fill = Sex), binwidth = 2) +
+   scale_fill_manual(values = group_colors) +
+   labs(title = "Distribution of Passenger Age by Sex", x = "Age", y = "Number of Passengers")
Warning message:
Removed 177 rows containing non-finite values (stat_bin). 
> 
> ggplot (train, aes(x = Age)) + 
+   geom_histogram(aes(fill = Survived), binwidth = 2) +
+   scale_fill_manual(values = group_colors) +
+   labs(title = "Distribution of Passenger Age by Survival", x = "Age", y = "Number of Passengers")
Warning message:
Removed 177 rows containing non-finite values (stat_bin). 
> 
> 
> ggplot (train, aes(x = Pclass)) + 
+   geom_bar(aes(fill = Survived)) +
+   scale_fill_manual(values = group_colors) +
+   labs(title = "Distribution of Passenger Class by Survival", x = "Passenger Class", y = "Number of Passengers")
> 
> ggplot (train, aes(x = Fare)) + 
+   geom_histogram(aes(fill = Survived), binwidth = 10) +
+   scale_fill_manual(values = group_colors) +
+   labs(title = "Distribution of Journey Fare by Survival", x = "Fare Paid", y = "Number of Passengers")
> 
> ggplot (train, aes(x = Embarked)) + 
+   geom_bar(aes(fill = Survived)) +
+   scale_fill_manual(values = group_colors) +
+   labs(title = "Distribution of Journey Origin by Survival", x = "Origin (port of embarkment)", y = "Number of Passengers")
> 
> 
> 
> #analyse des donnnées 
> 
> test$Survived <- NA                 # Adding the missing varriable to the test set
> combined <- bind_rows(train, test)  # For performing feature engineering on the entire data set
> 
> str(combined, give.attr = FALSE)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : Factor w/ 1307 levels "Abbing, Mr. Anthony",..: 109 191 358 277 16 559 520 629 417 581 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 929 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 187 levels "","A10","A14",..: 1 83 1 57 1 1 131 1 1 1 ...
 $ Embarked   : Factor w/ 4 levels "","C","Q","S": 4 2 4 4 4 3 4 4 4 2 ...
> 
> #Quels sont les données manquantes ? 
> sapply(combined, function(x) sum(is.na(x)))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0         418           0           0           0         263 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           1           0           0 
> 
> combined$Survived <- factor(combined$Survived)
> combined$Pclass <- factor(combined$Pclass)
> combined$Sex <- factor(combined$Sex)
> combined$Embarked <- factor(combined$Embarked)
> str(combined, give.attr = FALSE)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : Factor w/ 1307 levels "Abbing, Mr. Anthony",..: 109 191 358 277 16 559 520 629 417 581 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 929 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 187 levels "","A10","A14",..: 1 83 1 57 1 1 131 1 1 1 ...
 $ Embarked   : Factor w/ 4 levels "","C","Q","S": 4 2 4 4 4 3 4 4 4 2 ...
> 
> #imputation des données manquantes 
> set.seed(1234)    # set seed for reproduceible results
> imputes <- mice(combined[c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Embarked")], method = "rf") # imputed using random forest methods

 iter imp variable
  1   1  Age  Fare
  1   2  Age  Fare
  1   3  Age  Fare
  1   4  Age  Fare
  1   5  Age  Fare
  2   1  Age  Fare
  2   2  Age  Fare
  2   3  Age  Fare
  2   4  Age  Fare
  2   5  Age  Fare
  3   1  Age  Fare
  3   2  Age  Fare
  3   3  Age  Fare
  3   4  Age  Fare
  3   5  Age  Fare
  4   1  Age  Fare
  4   2  Age  Fare
  4   3  Age  Fare
  4   4  Age  Fare
  4   5  Age  Fare
  5   1  Age  Fare
  5   2  Age  Fare
  5   3  Age  Fare
  5   4  Age  Fare
  5   5  Age  Fare
> imputes_output <- complete(imputes)
> 
> #vérification qualité imputation
> impute_age <- ggplot(imputes_output, aes(x = Age)) + 
+   geom_histogram(binwidth = 2, fill = "thistle") +
+   labs(x = "Imputed Age")
> age <- ggplot(train, aes(x = Age)) + geom_histogram(binwidth = 2)
> grid.arrange(age, impute_age, ncol = 2)
Warning message:
Removed 177 rows containing non-finite values (stat_bin). 
> 
> impute_embarked <- ggplot(imputes_output, aes(x = Embarked)) + 
+   geom_bar(fill = "thistle") +
+   labs(x = "Imputed Origin")
> embarked <- ggplot(train, aes(x = Embarked)) + geom_bar() + labs(x = "Origin")
> grid.arrange(embarked, impute_embarked, ncol = 2)
> 
> 
> combined$Age <- imputes_output$Age
> combined$Fare <- imputes_output$Fare
> combined$Embarked <- imputes_output$Embarked
> 
> sapply(combined, function(x) sum(is.na(x)))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0         418           0           0           0           0 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           0           0           0 
> 
> 
> #création nouvelle variable avec genre donné par le nom des passagers
> combined$Title <- factor(gsub('(.*, )|(\\..*)', '', combined$Name))
> table(combined$Title)

        Capt          Col          Don         Dona           Dr     Jonkheer 
           1            4            1            1            8            1 
        Lady        Major       Master         Miss         Mlle          Mme 
           1            2           61          260            2            1 
          Mr          Mrs           Ms          Rev          Sir the Countess 
         757          197            2            8            1            1 
> 
> #Nouvelle variable en combinant  Sibsp et Parch pour avoir une variable famille
> combined$FamSize <- combined$SibSp + combined$Parch + 1 
> ggplot(combined, aes(x = FamSize)) + 
+   geom_bar() +
+   labs(x = "Family Size", y = "Number of Passengers", title = "Family Size of Passengers")
> 
> #Nouvelle vraiable enfant
> combined$child <- NA
> combined$child[combined$Age <= 16] <- TRUE
> combined$child[combined$Age > 16] <- FALSE
> str(combined, give.attr = FALSE)
'data.frame':	1309 obs. of  15 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : Factor w/ 1307 levels "Abbing, Mr. Anthony",..: 109 191 358 277 16 559 520 629 417 581 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 32 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 929 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 187 levels "","A10","A14",..: 1 83 1 57 1 1 131 1 1 1 ...
 $ Embarked   : Factor w/ 4 levels "","C","Q","S": 4 2 4 4 4 3 4 4 4 2 ...
 $ Title      : Factor w/ 18 levels "Capt","Col","Don",..: 13 14 10 14 13 13 13 9 14 14 ...
 $ FamSize    : num  2 2 1 2 1 1 1 5 3 2 ...
 $ child      : logi  FALSE FALSE FALSE FALSE FALSE FALSE ...
> 
> 
> #Taille de la famille
> combined$FamilySize<-combined$Parch+combined$SibSp+1
> 
> #Mère ? 
> combined$Mother<-0
> combined$Mother[combined$Sex=='female' & combined$Parch>0 & combined$Age>18 & combined$Title!='Miss']<-1
> 
> #Enfant ? 
> combined$Child<-0
> combined$Child[combined$Parch>0 & combined$Age<=12]<-1
> 
> #Maintenant que l'apprentissage et le travail préliminaire est fait, on resépare nos bases : 
> train <- combined[1:891,]
> test <- combined[892:1309,]
> 
> 
> #Random Forest 
> 
> rf_titanic <- randomForest(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamSize + child, data = train, ntree = 1000)
> rf_titanic

Call:
 randomForest(formula = Survived ~ Pclass + Sex + Age + SibSp +      Parch + Fare + Embarked + Title + FamSize + child, data = train,      ntree = 1000) 
               Type of random forest: classification
                     Number of trees: 1000
No. of variables tried at each split: 3

        OOB estimate of  error rate: 17.73%
Confusion matrix:
    0   1 class.error
0 489  60   0.1092896
1  98 244   0.2865497
> 
> plot(rf_titanic)
> 
> #importance des valeurs dans notre modèle
> vimp <- importance(rf_titanic)
> vimp_df <- data.frame(Var = row.names(vimp), vimp)
> vimp_df %>% arrange(desc(MeanDecreaseGini))
              Var MeanDecreaseGini
Title       Title        80.330227
Fare         Fare        63.664165
Sex           Sex        52.557928
Age           Age        49.612701
Pclass     Pclass        32.377550
FamSize   FamSize        21.121121
SibSp       SibSp        12.731570
Embarked Embarked        10.614665
Parch       Parch         7.571694
child       child         4.507472
> 
> 
> predicted <- predict(rf_titanic, newdata = test)
> solution <- data.frame(PassengerID = test$PassengerId, Survived = predicted)
> write.csv(solution, "../input/gender_submission.csv", row.names = FALSE)
> 
> 
> 
> proc.time()
   user  system elapsed 
  4.860   0.338   5.312 
