
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library(mice)

Attaching package: ‘mice’

The following objects are masked from ‘package:base’:

    cbind, rbind

Warning message:
package ‘mice’ was built under R version 3.6.2 
> library(nnet)
> train <- read.csv("../input/train.csv", stringsAsFactors = FALSE,
+   na.strings = "")
> test <- read.csv("../input/test.csv", stringsAsFactors = FALSE,
+   na.strings = "")
> full <- bind_rows(train, test)
> full$Title <- gsub("^.*, |\\. .*$", "", full$Name)
> Mr <- c("Col", "Don", "Jonkheer", "Sir")
> Mrs <- c("Dona", "Lady", "Mme", "the Countess")
> Miss <- c("Mlle", "Ms")
> full$Title[full$Title %in% Mr] <- "Mr"
> full$Title[full$Title %in% Mrs] <- "Mrs"
> full$Title[full$Title %in% Miss] <- "Miss"
> full$Fsize <- full$SibSp + full$Parch + 1
> full$FsizeD[full$Fsize == 1] <- "Singleton"
> full$FsizeD[full$Fsize >1 & full$Fsize < 5] <- "Small"
> full$FsizeD[full$Fsize > 4] <- "Large"
> factor_var <- c("Survived", "Pclass", "Sex", "Embarked",
+   "Title", "FsizeD")
> full[factor_var] <- lapply(full[factor_var], factor)
> mice_mod <- mice(full[, c(3, 5 : 8, 10, 12)], method = "rf")

 iter imp variable
  1   1  Age  Fare  Embarked
  1   2  Age  Fare  Embarked
  1   3  Age  Fare  Embarked
  1   4  Age  Fare  Embarked
  1   5  Age  Fare  Embarked
  2   1  Age  Fare  Embarked
  2   2  Age  Fare  Embarked
  2   3  Age  Fare  Embarked
  2   4  Age  Fare  Embarked
  2   5  Age  Fare  Embarked
  3   1  Age  Fare  Embarked
  3   2  Age  Fare  Embarked
  3   3  Age  Fare  Embarked
  3   4  Age  Fare  Embarked
  3   5  Age  Fare  Embarked
  4   1  Age  Fare  Embarked
  4   2  Age  Fare  Embarked
  4   3  Age  Fare  Embarked
  4   4  Age  Fare  Embarked
  4   5  Age  Fare  Embarked
  5   1  Age  Fare  Embarked
  5   2  Age  Fare  Embarked
  5   3  Age  Fare  Embarked
  5   4  Age  Fare  Embarked
  5   5  Age  Fare  Embarked
> mice_output <- complete(mice_mod)
> full[, c(6, 10, 12)] <- mice_output[, c(3, 6, 7)]
> full$Child <- factor(ifelse(full$Age <= 12, 1, 0))
> train <- full[1 : nrow(train), ]
> test <- full[(nrow(train) + 1) : nrow(full), ]
> nn_mod <- nnet(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare +
+   Embarked + Title + FsizeD + Child, data = train, size = 10, decay = 0.01)
# weights:  211
initial  value 763.760553 
iter  10 value 509.561037
iter  20 value 442.732784
iter  30 value 389.862896
iter  40 value 355.319926
iter  50 value 334.021953
iter  60 value 328.451321
iter  70 value 328.061690
iter  80 value 327.520971
iter  90 value 326.577522
iter 100 value 317.445393
final  value 317.445393 
stopped after 100 iterations
> test$Survived <- predict(nn_mod, test, type = "class")
> write.csv(test[, c(1, 2)], file = "Titanic_nnet.csv",
+   row.names = FALSE)
> 
> proc.time()
   user  system elapsed 
  3.864   0.371   4.233 
