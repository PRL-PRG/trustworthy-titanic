
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> # Set working directory and import datafiles
> library(tidyverse)
â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.0 â”€â”€
[32mâœ“[39m [34mggplot2[39m 3.3.2     [32mâœ“[39m [34mpurrr  [39m 0.3.4
[32mâœ“[39m [34mtibble [39m 3.0.1     [32mâœ“[39m [34mdplyr  [39m 1.0.2
[32mâœ“[39m [34mtidyr  [39m 1.1.0     [32mâœ“[39m [34mstringr[39m 1.4.0
[32mâœ“[39m [34mreadr  [39m 1.3.1     [32mâœ“[39m [34mforcats[39m 0.5.0
â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
[31mx[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
[31mx[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()
Warning messages:
1: package â€˜ggplot2â€™ was built under R version 3.6.2 
2: package â€˜tibbleâ€™ was built under R version 3.6.2 
3: package â€˜tidyrâ€™ was built under R version 3.6.2 
4: package â€˜purrrâ€™ was built under R version 3.6.2 
5: package â€˜dplyrâ€™ was built under R version 3.6.2 
> library(rpart)
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: â€˜randomForestâ€™

The following object is masked from â€˜package:dplyrâ€™:

    combine

The following object is masked from â€˜package:ggplot2â€™:

    margin

> library(modelr)
Warning message:
package â€˜modelrâ€™ was built under R version 3.6.2 
> library(party)
Loading required package: grid
Loading required package: mvtnorm
Loading required package: modeltools
Loading required package: stats4
Loading required package: strucchange
Loading required package: zoo

Attaching package: â€˜zooâ€™

The following objects are masked from â€˜package:baseâ€™:

    as.Date, as.Date.numeric

Loading required package: sandwich

Attaching package: â€˜strucchangeâ€™

The following object is masked from â€˜package:stringrâ€™:

    boundary

Warning messages:
1: package â€˜partyâ€™ was built under R version 3.6.2 
2: package â€˜zooâ€™ was built under R version 3.6.2 
> library(xlsx)
> #setwd("...")
> 
> train <- read_csv("../input/train.csv")
Parsed with column specification:
cols(
  PassengerId = [32mcol_double()[39m,
  Survived = [32mcol_double()[39m,
  Pclass = [32mcol_double()[39m,
  Name = [31mcol_character()[39m,
  Sex = [31mcol_character()[39m,
  Age = [32mcol_double()[39m,
  SibSp = [32mcol_double()[39m,
  Parch = [32mcol_double()[39m,
  Ticket = [31mcol_character()[39m,
  Fare = [32mcol_double()[39m,
  Cabin = [31mcol_character()[39m,
  Embarked = [31mcol_character()[39m
)
> test <- read_csv("../input/test.csv")
Parsed with column specification:
cols(
  PassengerId = [32mcol_double()[39m,
  Pclass = [32mcol_double()[39m,
  Name = [31mcol_character()[39m,
  Sex = [31mcol_character()[39m,
  Age = [32mcol_double()[39m,
  SibSp = [32mcol_double()[39m,
  Parch = [32mcol_double()[39m,
  Ticket = [31mcol_character()[39m,
  Fare = [32mcol_double()[39m,
  Cabin = [31mcol_character()[39m,
  Embarked = [31mcol_character()[39m
)
> 
> summary(train)
  PassengerId       Survived          Pclass          Name          
 Min.   :  1.0   Min.   :0.0000   Min.   :1.000   Length:891        
 1st Qu.:223.5   1st Qu.:0.0000   1st Qu.:2.000   Class :character  
 Median :446.0   Median :0.0000   Median :3.000   Mode  :character  
 Mean   :446.0   Mean   :0.3838   Mean   :2.309                     
 3rd Qu.:668.5   3rd Qu.:1.0000   3rd Qu.:3.000                     
 Max.   :891.0   Max.   :1.0000   Max.   :3.000                     
                                                                    
     Sex                 Age            SibSp           Parch       
 Length:891         Min.   : 0.42   Min.   :0.000   Min.   :0.0000  
 Class :character   1st Qu.:20.12   1st Qu.:0.000   1st Qu.:0.0000  
 Mode  :character   Median :28.00   Median :0.000   Median :0.0000  
                    Mean   :29.70   Mean   :0.523   Mean   :0.3816  
                    3rd Qu.:38.00   3rd Qu.:1.000   3rd Qu.:0.0000  
                    Max.   :80.00   Max.   :8.000   Max.   :6.0000  
                    NA's   :177                                     
    Ticket               Fare           Cabin             Embarked        
 Length:891         Min.   :  0.00   Length:891         Length:891        
 Class :character   1st Qu.:  7.91   Class :character   Class :character  
 Mode  :character   Median : 14.45   Mode  :character   Mode  :character  
                    Mean   : 32.20                                        
                    3rd Qu.: 31.00                                        
                    Max.   :512.33                                        
                                                                          
> str(train)
tibble [891 Ã— 12] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
 $ PassengerId: num [1:891] 1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : num [1:891] 0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : num [1:891] 3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr [1:891] "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr [1:891] "male" "female" "female" "female" ...
 $ Age        : num [1:891] 22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : num [1:891] 1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : num [1:891] 0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr [1:891] "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num [1:891] 7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr [1:891] NA "C85" NA "C123" ...
 $ Embarked   : chr [1:891] "S" "C" "S" "S" ...
 - attr(*, "spec")=
  .. cols(
  ..   PassengerId = [32mcol_double()[39m,
  ..   Survived = [32mcol_double()[39m,
  ..   Pclass = [32mcol_double()[39m,
  ..   Name = [31mcol_character()[39m,
  ..   Sex = [31mcol_character()[39m,
  ..   Age = [32mcol_double()[39m,
  ..   SibSp = [32mcol_double()[39m,
  ..   Parch = [32mcol_double()[39m,
  ..   Ticket = [31mcol_character()[39m,
  ..   Fare = [32mcol_double()[39m,
  ..   Cabin = [31mcol_character()[39m,
  ..   Embarked = [31mcol_character()[39m
  .. )
> head(train)
[90m# A tibble: 6 x 12[39m
  PassengerId Survived Pclass Name  Sex     Age SibSp Parch Ticket  Fare Cabin
        [3m[90m<dbl>[39m[23m    [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m
[90m1[39m           1        0      3 Brauâ€¦ male     22     1     0 A/5 2â€¦  7.25 [31mNA[39m   
[90m2[39m           2        1      1 Cumiâ€¦ femaâ€¦    38     1     0 PC 17â€¦ 71.3  C85  
[90m3[39m           3        1      3 Heikâ€¦ femaâ€¦    26     0     0 STON/â€¦  7.92 [31mNA[39m   
[90m4[39m           4        1      1 Futrâ€¦ femaâ€¦    35     1     0 113803 53.1  C123 
[90m5[39m           5        0      3 Alleâ€¦ male     35     0     0 373450  8.05 [31mNA[39m   
[90m6[39m           6        0      3 Moraâ€¦ male     [31mNA[39m     0     0 330877  8.46 [31mNA[39m   
[90m# â€¦ with 1 more variable: Embarked [3m[90m<chr>[90m[23m[39m
> tail(train)
[90m# A tibble: 6 x 12[39m
  PassengerId Survived Pclass Name  Sex     Age SibSp Parch Ticket  Fare Cabin
        [3m[90m<dbl>[39m[23m    [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m
[90m1[39m         886        0      3 [90m"[39mRicâ€¦ femaâ€¦    39     0     5 382652 29.1  [31mNA[39m   
[90m2[39m         887        0      2 [90m"[39mMonâ€¦ male     27     0     0 211536 13    [31mNA[39m   
[90m3[39m         888        1      1 [90m"[39mGraâ€¦ femaâ€¦    19     0     0 112053 30    B42  
[90m4[39m         889        0      3 [90m"[39mJohâ€¦ femaâ€¦    [31mNA[39m     1     2 W./C.â€¦ 23.4  [31mNA[39m   
[90m5[39m         890        1      1 [90m"[39mBehâ€¦ male     26     0     0 111369 30    C148 
[90m6[39m         891        0      3 [90m"[39mDooâ€¦ male     32     0     0 370376  7.75 [31mNA[39m   
[90m# â€¦ with 1 more variable: Embarked [3m[90m<chr>[90m[23m[39m
> #vemos que el 61% de los pasajeron en el conjunto de entrenamiento murieron.
> prop.table(table(train$Survived))

        0         1 
0.6161616 0.3838384 
> 
> 
> #se sabe que se tratÃ³ de salvar primero a las mujeres y niÃ±os, veamos las proporciones.
> prop.table(table(train$Sex))

  female     male 
0.352413 0.647587 
> #la mayorÃ­a son hombres
> 
> prop_sexo <- prop.table(table(train$Sex, train$Survived),1)
> prop_sexo
        
                 0         1
  female 0.2579618 0.7420382
  male   0.8110919 0.1889081
> #efectivamente la mayorÃ­a de las mujeres sobrevivireron y la mayorÃ­a de los hombres no.
> 
> summary(train$Age)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
   0.42   20.12   28.00   29.70   38.00   80.00     177 
> #debido a que la edad no es variable categÃ³rica como la edad, la tabla de proporcion es casi inÃºtil. 
> #asignemos un anueva variable "child"
> train <- train %>% mutate(Child = ifelse(train$Age<18, 1,0))
> test <- test %>% mutate(Child = ifelse(test$Age<18, 1,0))
> #cuÃ¡ntos sobrevivientes hay en cada subgrupo?
> aggregate(data=train, Survived~Child+Sex, FUN=sum) #no nos sirve mucho pues sÃ³lo es la cuenta de sobrevivientes
  Child    Sex Survived
1     0 female      159
2     1 female       38
3     0   male       70
4     1   male       23
> 
> #lo mismo pero proporcionalmente:
> prop_sexo_edad <- aggregate(data=train, Survived~Child+Sex, FUN=function(x){
+                                             sum(x)/length(x)}
+                             )
>                             #aquÃ­ parece que es mÃ¡s probale sobrevivir siendo mujer que hombre pero sin importar si se es 
>                             # niÃ±o o no. Continuemos explorando para ver si la clase es un factor importante.
> prop_sexo_edad
  Child    Sex  Survived
1     0 female 0.7718447
2     1 female 0.6909091
3     0   male 0.1772152
4     1   male 0.3965517
> 
> 
> 
> 
> 
> #implementamos un Ã¡rbol de decisiÃ³n agregando las demÃ¡s variables.
> #las columnas de PassengerId, Name, Ticket y Cabin son identificadores Ãºnicos,
> #por lo que no nos ayudan. 
> #La variable Age ya fue resumida en Child.
> fit <- rpart(Survived~Pclass+Sex+SibSp+Parch+Fare+Embarked+Child, data=train)
> plot(fit, uniform=TRUE, main="primer intento")
> text(fit,all=TRUE,use.n=TRUE,cex=.6)
> #no tenemos idea de quÃ© tan bien lo estÃ¡ haciendo este modelo pues no hay con quÃ© comparar.
> 
> #dividiremos nuestra train data en 70% y 30% y asÃ­ poder medir performance:
> split_data <- resample_partition(data=train, c(split_test=0.3, split_train=0.7))#lista de 2 entradas
> fit2 <- rpart(Survived~Pclass+Sex+SibSp+Parch+Fare+Embarked+Child, data=split_data$split_train)
> #calcular el mean average error para este modelo:
> mae(model=fit2, data=split_data$split_test)
[1] 0.278996
> 
> 
> #por un momento, supongamos que no sabemos que la funciÃ³n rpart optimiza la profundidad del Ã¡rbol
> #vamos a hacer varios Ã¡rboles con diferentes profundidades para averiguar cuÃ¡l es la ideal:
> get_mae <- function(maxdepth, target, predictors, train_data, test_data){
+   predictors <- paste(predictors, collapse="+")
+   formula <- as.formula(paste(target, "~", predictors, sep=""))
+   
+   model <- rpart(formula, data=train_data, control=rpart.control(maxdepth=maxdepth))
+   mae <- mae(model,test_data)
+   return(mae)
+   
+ }
> 
> target <- "Survived"
> predictors <- c("Pclass","Sex","SibSp","Parch","Fare","Embarked","Child")
> #ans <- c(1:10)
> for(i in 1:10){
+   mae <- get_mae(maxdepth=i, target=target, predictors=predictors, train_data=split_data$split_train,
+                  test_data=split_data$split_test)
+   print(glue::glue("Maxdepth: ",i,"\t MAE: ",mae))
+   #ans[i]=mae
+ }
Maxdepth: 1	 MAE: 0.340760020716527
Maxdepth: 2	 MAE: 0.30035631629363
Maxdepth: 3	 MAE: 0.285851639695375
Maxdepth: 4	 MAE: 0.278996031716171
Maxdepth: 5	 MAE: 0.278996031716171
Maxdepth: 6	 MAE: 0.278996031716171
Maxdepth: 7	 MAE: 0.278996031716171
Maxdepth: 8	 MAE: 0.278996031716171
Maxdepth: 9	 MAE: 0.278996031716171
Maxdepth: 10	 MAE: 0.278996031716171
> #al ver los resultados nos damos cuenta que la funciÃ³n rpart detiene el crecimiento del Ã¡rbol entonces 
> #no es neceario preocuparnos por esto de ahora en adelante
> 
> ########### el bueno #################
> 
> set.seed(450)
> fit3 <- rpart(Survived~Pclass+Sex+SibSp+Parch+Fare+Embarked+Child, data=train)
> prediction <- predict(fit3, test)
> pred <- as.numeric(prediction)
> col <- ifelse(pred>0.5, 1,0)
> submit <- data.frame(PassengerId=test$PassengerId, Survived=col)
> write_csv(submit, "submission.csv")
> 
> # al someter este archivo a la competencia del titanic se logrÃ³ una precisiÃ³n del 79%
> 
> 
> 
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
  3.362   0.267   3.259 
