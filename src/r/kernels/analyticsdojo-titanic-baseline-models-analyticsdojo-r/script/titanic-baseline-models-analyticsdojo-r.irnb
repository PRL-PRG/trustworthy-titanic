{"cells": [{"metadata": {"_cell_guid": "881c55fd-3b61-de77-7963-190298f11b66", "_uuid": "3668ab7cd3e8c4788fe6fe26b5848b6089cde62b"}, "cell_type": "markdown", "source": ["[![AnalyticsDojo](https://s3.amazonaws.com/analyticsdojo/logo/final-logo.png)](http://www.analyticsdojo.com)\n", "<center><h1>Introduction to R - Titanic Baseline </h1></center>\n", "<center><h3><a href = 'http://www.analyticsdojo.com'>www.analyticsdojo.com</a></h3></center>"]}, {"metadata": {"_cell_guid": "e4366588-27f9-a4e3-4d02-1b660e1fd226", "_uuid": "2c7461c172401b7654f874b6de16b6c6b4d41a6e"}, "cell_type": "markdown", "source": ["## Running Code using Kaggle Notebooks\n", "- Kaggle utilizes Docker to create a fully functional environment for hosting competitions in data science.\n", "- You could download/run kaggle/python docker image from [GitHub](https://github.com/kaggle/docker-python) and run it as an alternative to the standard Jupyter Stack for Data Science we have been using.\n", "- Kaggle has created an incredible resource for learning analytics.  You can view a number of *toy* examples that can be used to understand data science and also compete in real problems faced by top companies. "]}, {"metadata": {"_cell_guid": "193191ca-9119-56cb-1133-3c356f2300ad", "_uuid": "3448fcc64b74a564cc35f7d9586e75e853b84642"}, "source": ["train <- read.csv('../input/train.csv', stringsAsFactors = F)\n", "test  <- read.csv('../input/test.csv', stringsAsFactors = F)"], "execution_count": null, "cell_type": "code", "outputs": []}, {"metadata": {"_cell_guid": "21a68add-20c7-984a-7cb3-a21c0dd80cb0", "_uuid": "a2ba10a5bb516a208de6e6c7a20fdab86089ab4a"}, "cell_type": "markdown", "source": ["## `train` and `test` set on Kaggle\n", "- The `train` file contains a wide variety of information that might be useful in understanding whether they survived or not. It also includes a record as to whether they survived or not.\n", "- The `test` file contains all of the columns of the first file except whether they survived. Our goal is to predict whether the individuals survived."]}, {"metadata": {"_cell_guid": "d12daf5f-88c7-2f45-e106-4052d23c0a0d", "_uuid": "21b04f0aaa9cfa11948db6c185f2225cba86a718"}, "source": ["head(train)"], "execution_count": null, "cell_type": "code", "outputs": []}, {"metadata": {"_cell_guid": "17dca1d6-ac00-2342-bfa9-00739d8b2255", "_uuid": "92fbe1534e780db62d5d81ddb356fd5b45ba166a"}, "source": ["head(test)"], "execution_count": null, "cell_type": "code", "outputs": []}, {"metadata": {"_cell_guid": "4de42a6c-db16-edd8-cdb5-46f5f47698f7", "_uuid": "b68939ee570989916c489bffde89d2a857b6923a"}, "cell_type": "markdown", "source": ["## Baseline Model: No Survivors\n", "- The Titanic problem is one of classification, and often the simplest baseline of all 0/1 is an appropriate baseline.\n", "- Even if you aren't familiar with the history of the tragedy, by checking out the [Wikipedia Page](https://en.wikipedia.org/wiki/RMS_Titanic) we can quickly see that the majority of people (68%) died.\n", "- As a result, our baseline model will be for no survivors."]}, {"metadata": {"_cell_guid": "bcff150d-cbff-3c84-3eea-564df3c43b7b", "_uuid": "4bb023cb116910bb2121c7f356d4e57de4b3ffa2"}, "source": ["test[\"Survived\"] = 0"], "execution_count": null, "cell_type": "code", "outputs": []}, {"metadata": {"_cell_guid": "6c95627c-c1eb-aa34-f4b7-32b8ea7ae61c", "_uuid": "822074cd1a3eda10ddcb994287f9986cae917933"}, "source": ["submission = test[,c(\"PassengerId\", \"Survived\")]"], "execution_count": null, "cell_type": "code", "outputs": []}, {"metadata": {"_cell_guid": "2241735d-8164-32f2-94ec-6ec45dacb145", "_uuid": "9c494660e043f9774f099ceeb405dfa8d37e1e70"}, "source": ["head(submission)"], "execution_count": null, "cell_type": "code", "outputs": []}, {"metadata": {"_cell_guid": "1329809f-7aed-c67e-383c-8d71e5c7c4ac", "_uuid": "26f53c7376bea4297903b499776401d3b240cd74"}, "source": ["# Write the solution to file\n", "write.csv(submission, file = 'nosurvivors.csv', row.names = F)"], "execution_count": null, "cell_type": "code", "outputs": []}, {"metadata": {"_cell_guid": "325683d2-2aa7-96a9-45ec-edf46c69f2da", "_uuid": "09f9eb8927ddb8bbee7b55103b707953e925c7f1"}, "cell_type": "markdown", "source": ["## The First Rule of Shipwrecks\n", "- You may have seen it in a movie or read it in a novel, but [women and children first](https://en.wikipedia.org/wiki/Women_and_children_first) has at it's roots something that could provide our first model.\n", "- Now let's recode the `Survived` column based on whether was a man or a woman.  \n", "- We are using conditionals to *select* rows of interest (for example, where test['Sex'] == 'male') and recoding appropriate columns."]}, {"metadata": {"_cell_guid": "710483a5-7a49-a018-610a-c0968c44479c", "_uuid": "8b279e9be63feaf0bb5b946e3d32cd752b195e7f"}, "source": ["#Here we can code it as Survived, but if we do so we will overwrite our other prediction. \n", "#Instead, let's code it as PredGender\n", "\n", "test[test$Sex == \"male\", \"PredGender\"] = 0\n", "test[test$Sex == \"female\", \"PredGender\"] = 1"], "execution_count": null, "cell_type": "code", "outputs": []}, {"metadata": {"_cell_guid": "078e3827-8f89-59ae-ca2d-66fa36bc79eb", "_uuid": "c0a65b6956267bf39b847741501dde9a30f22272"}, "source": ["submission = test[,c(\"PassengerId\", \"PredGender\")]\n", "#This will Rename the survived column\n", "names(submission)[2] <- \"Survived\"\n", "head(submission)"], "execution_count": null, "cell_type": "code", "outputs": []}, {"metadata": {"_cell_guid": "9f63501b-df2a-0d41-d4dd-3d0e28fea743", "_uuid": "b0d72f03f864bde6cd405e1bcda795c74764ccf4"}, "source": ["write.csv(submission, file = 'womensurvive.csv', row.names = F)"], "execution_count": null, "cell_type": "code", "outputs": []}], "nbformat": 4, "metadata": {"_is_fork": false, "language_info": {"pygments_lexer": "r", "name": "R", "codemirror_mode": "r", "file_extension": ".r", "mimetype": "text/x-r-source", "version": "3.4.1"}, "_change_revision": 0, "kernelspec": {"language": "R", "name": "ir", "display_name": "R"}}, "nbformat_minor": 1}