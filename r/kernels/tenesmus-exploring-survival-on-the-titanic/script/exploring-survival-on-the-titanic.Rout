
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # Load packages
> library('ggplot2') # visualization
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library('ggthemes') # visualization
> library('scales') # visualization
Warning message:
package ‘scales’ was built under R version 3.6.2 
> library('dplyr') # data manipulation

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library('mice') # imputation

Attaching package: ‘mice’

The following objects are masked from ‘package:base’:

    cbind, rbind

Warning message:
package ‘mice’ was built under R version 3.6.2 
> library('randomForest') # classification algorithm
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:dplyr’:

    combine

The following object is masked from ‘package:ggplot2’:

    margin

> train <- read.csv('../input/train.csv', stringsAsFactors = F)
> test  <- read.csv('../input/test.csv', stringsAsFactors = F)
> full  <- bind_rows(train, test) # bind training & test data
> full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
> rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
> full$Title[full$Title == 'Mlle']        <- 'Miss' 
> full$Title[full$Title == 'Ms']          <- 'Miss'
> full$Title[full$Title == 'Mme']         <- 'Mrs' 
> full$Title[full$Title %in% rare_title]  <- 'Rare Title'
> full$Surname <- sapply(full$Name, function(x) strsplit(x, split = '[,.]')[[1]][1])
> full$Fsize <- full$SibSp + full$Parch + 1
> full$Family <- paste(full$Surname, full$Fsize, sep='_')
> full$FsizeD[full$Fsize == 1] <- 'singleton'
> full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- 'small'
> full$FsizeD[full$Fsize > 4] <- 'large'
> full$Deck<-factor(sapply(full$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
> full[c(62, 830), 'Embarked']
[1] "" ""
> embark_fare <- full %>% filter(PassengerId != 62 & PassengerId != 830)
> full$Embarked[c(62, 830)] <- 'C'
> full$Fare[1044] <- median(full[full$Pclass == '3' & full$Embarked == 'S', ]$Fare, na.rm = TRUE)
> factor_vars <- c('PassengerId','Pclass','Sex','Embarked','Title','Surname','Family','FsizeD')
> full[factor_vars] <- lapply(full[factor_vars], function(x) as.factor(x))
> set.seed(129)
> mice_mod <- mice(full[, !names(full) %in% c('PassengerId','Name','Ticket','Cabin','Family','Surname','Survived')], method='rf') 

 iter imp variable
  1   1  Age  Deck
  1   2  Age  Deck
  1   3  Age  Deck
  1   4  Age  Deck
  1   5  Age  Deck
  2   1  Age  Deck
  2   2  Age  Deck
  2   3  Age  Deck
  2   4  Age  Deck
  2   5  Age  Deck
  3   1  Age  Deck
  3   2  Age  Deck
  3   3  Age  Deck
  3   4  Age  Deck
  3   5  Age  Deck
  4   1  Age  Deck
  4   2  Age  Deck
  4   3  Age  Deck
  4   4  Age  Deck
  4   5  Age  Deck
  5   1  Age  Deck
  5   2  Age  Deck
  5   3  Age  Deck
  5   4  Age  Deck
  5   5  Age  Deck
Warning message:
Number of logged events: 50 
> mice_output <- complete(mice_mod)
> par(mfrow=c(1,2))
> full$Age <- mice_output$Age
> full$Child[full$Age < 18] <- 'Child'
> full$Child[full$Age >= 18] <- 'Adult'
> full$Mother <- 'Not Mother'
> full$Mother[full$Sex == 'female' & full$Parch > 0 & full$Age > 18 & full$Title != 'Miss'] <- 'Mother'
> full$Child  <- factor(full$Child)
> full$Mother <- factor(full$Mother)
> train <- full[1:891,]
> test <- full[892:1309,]
> set.seed(754)
> rf_model <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FsizeD + Child + Mother, data = train)
> importance    <- importance(rf_model)
> varImportance <- data.frame(Variables = row.names(importance), Importance = round(importance[ ,'MeanDecreaseGini'],2))
> rankImportance <- varImportance %>% mutate(Rank = paste0('#',dense_rank(desc(Importance))))
> ggplot(rankImportance, aes(x = reorder(Variables, Importance), 
+     y = Importance, fill = Importance)) +
+   geom_bar(stat='identity') + 
+   geom_text(aes(x = Variables, y = 0.5, label = Rank),
+     hjust=0, vjust=0.55, size = 4, colour = 'red') +
+   labs(x = 'Variables') +
+   coord_flip() + 
+   theme_few()
> 
> 
> 
> proc.time()
   user  system elapsed 
 24.066   0.334  24.418 
