
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> library(ggplot2)
Warning message:
package â€˜ggplot2â€™ was built under R version 3.6.2 
> #library(tidyverse) ## A smart alternative to use ggplot functions
> #library(dplyr)
> #library(ggvis)# Web friendly plots.
> 
> train.df <- read.csv("../input/train.csv", header = TRUE)
> test.df <- read.csv("../input/test.csv", header = TRUE)
> 
> names(train.df)
 [1] "PassengerId" "Survived"    "Pclass"      "Name"        "Sex"        
 [6] "Age"         "SibSp"       "Parch"       "Ticket"      "Fare"       
[11] "Cabin"       "Embarked"   
> names(test.df)
 [1] "PassengerId" "Pclass"      "Name"        "Sex"         "Age"        
 [6] "SibSp"       "Parch"       "Ticket"      "Fare"        "Cabin"      
[11] "Embarked"   
> 
> test.df2 <- data.frame(Survived = rep(0, nrow(test.df)), test.df[,])
> 
> combined.df <- rbind(train.df, test.df2)
> 
> # Check the fields wit NAs
> colnames(combined.df)[ apply(combined.df, 2, anyNA) ]
[1] "Age"  "Fare"
> 
> # Impute missing Age with mean
> summary(combined.df)
  PassengerId      Survived          Pclass     
 Min.   :   1   Min.   :0.0000   Min.   :1.000  
 1st Qu.: 328   1st Qu.:0.0000   1st Qu.:2.000  
 Median : 655   Median :0.0000   Median :3.000  
 Mean   : 655   Mean   :0.2613   Mean   :2.295  
 3rd Qu.: 982   3rd Qu.:1.0000   3rd Qu.:3.000  
 Max.   :1309   Max.   :1.0000   Max.   :3.000  
                                                
                               Name          Sex           Age       
 Connolly, Miss. Kate            :   2   female:466   Min.   : 0.17  
 Kelly, Mr. James                :   2   male  :843   1st Qu.:21.00  
 Abbing, Mr. Anthony             :   1                Median :28.00  
 Abbott, Mr. Rossmore Edward     :   1                Mean   :29.88  
 Abbott, Mrs. Stanton (Rosa Hunt):   1                3rd Qu.:39.00  
 Abelson, Mr. Samuel             :   1                Max.   :80.00  
 (Other)                         :1301                NA's   :263    
     SibSp            Parch            Ticket          Fare        
 Min.   :0.0000   Min.   :0.000   CA. 2343:  11   Min.   :  0.000  
 1st Qu.:0.0000   1st Qu.:0.000   1601    :   8   1st Qu.:  7.896  
 Median :0.0000   Median :0.000   CA 2144 :   8   Median : 14.454  
 Mean   :0.4989   Mean   :0.385   3101295 :   7   Mean   : 33.295  
 3rd Qu.:1.0000   3rd Qu.:0.000   347077  :   7   3rd Qu.: 31.275  
 Max.   :8.0000   Max.   :9.000   347082  :   7   Max.   :512.329  
                                  (Other) :1261   NA's   :1        
             Cabin      Embarked
                :1014    :  2   
 C23 C25 C27    :   6   C:270   
 B57 B59 B63 B66:   5   Q:123   
 G6             :   5   S:914   
 B96 B98        :   4           
 C22 C26        :   4           
 (Other)        : 271           
> 
> combined.df$Age[is.na(combined.df$Age)] <-28.00
> 
> # Replace NA in Embarked with most common Embarked point
> table (combined.df$Embarked)

      C   Q   S 
  2 270 123 914 
> # Replace NAs in Embarked column with 'S'; it is the most common point of boarding
> train.df$Embarked[is.na(train.df$Embarked)] <- 'S'
> combined.df$Embarked[is.na(combined.df$Embarked)] <- 'S'
> 
> 
> 
> # Visualize Age and Gender distribution.
> 
> ggplot(data = combined.df)+
+   geom_histogram(mapping = aes(x = Age, fill = Sex))
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
> 
> ggplot(data = combined.df)+
+   geom_bar(mapping = aes(x = Pclass, fill = Sex))
> # Plot Correlation between survivors and Gender
> train.df$Survived <- as.factor(train.df$Survived)
> ggplot(data = train.df )+
+     geom_point( mapping = aes( x = Age, y = Fare, fill = Survived, color = Survived))
Warning message:
Removed 177 rows containing missing values (geom_point). 
>     #geom_smooth()
> 
> ggplot(data = train.df)+
+     geom_bar(mapping = aes(x = Age, fill = Sex))
Warning messages:
1: Removed 177 rows containing non-finite values (stat_count). 
2: position_stack requires non-overlapping x intervals 
> 
> #Survived is int; convert it into categorical variable i.e. factor
> train.df$Survived <- as.factor(train.df$Survived)
> #Plot: A bar chart with Embarked on X axis.
> ggplot(data = train.df)+
+     geom_bar(mapping = aes( x = Embarked, fill = Survived))
> 
> ggplot( data = combined.df)+
+     geom_bar(mapping = aes( x = Fare, fill = Pclass))
Warning message:
Removed 1 rows containing non-finite values (stat_count). 
> 
>   boxplot( combined.df$Fare, col = "palevioletred1")
> # Alternatively one can use summary() function.
> # It displays Minimum, Maximum, Median, and Mean value.
> # Further, it also displays the 1st and 3rd Quratile for detecting outliers.
> # Outlier > Median + 1.5 * 3rd IQR
> summary(combined.df$Fare)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
  0.000   7.896  14.454  33.295  31.275 512.329       1 
> 
> proc.time()
   user  system elapsed 
  1.222   0.068   1.291 
