
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## ----setup, include=FALSE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> knitr::opts_chunk$set(echo = TRUE)
> 
> 
> ## ----message=FALSE---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(tidyverse)
â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.0 â”€â”€
[32mâœ“[39m [34mggplot2[39m 3.3.2     [32mâœ“[39m [34mpurrr  [39m 0.3.4
[32mâœ“[39m [34mtibble [39m 3.0.1     [32mâœ“[39m [34mdplyr  [39m 1.0.2
[32mâœ“[39m [34mtidyr  [39m 1.1.0     [32mâœ“[39m [34mstringr[39m 1.4.0
[32mâœ“[39m [34mreadr  [39m 1.3.1     [32mâœ“[39m [34mforcats[39m 0.5.0
â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
[31mx[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
[31mx[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()
Warning messages:
1: package â€˜ggplot2â€™ was built under R version 3.6.2 
2: package â€˜tibbleâ€™ was built under R version 3.6.2 
3: package â€˜tidyrâ€™ was built under R version 3.6.2 
4: package â€˜purrrâ€™ was built under R version 3.6.2 
5: package â€˜dplyrâ€™ was built under R version 3.6.2 
> library(ggthemes)
> library(Amelia)
Loading required package: Rcpp
## 
## Amelia II: Multiple Imputation
## (Version 1.7.6, built: 2019-11-24)
## Copyright (C) 2005-2020 James Honaker, Gary King and Matthew Blackwell
## Refer to http://gking.harvard.edu/amelia/ for more information
## 
> library(caTools)
> 
> 
> ## ----message=FALSE---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train.file <- "../input/train.csv"
> test.file <- "../input/test.csv"
> test <- read_csv(test.file)
Parsed with column specification:
cols(
  PassengerId = [32mcol_double()[39m,
  Pclass = [32mcol_double()[39m,
  Name = [31mcol_character()[39m,
  Sex = [31mcol_character()[39m,
  Age = [32mcol_double()[39m,
  SibSp = [32mcol_double()[39m,
  Parch = [32mcol_double()[39m,
  Ticket = [31mcol_character()[39m,
  Fare = [32mcol_double()[39m,
  Cabin = [31mcol_character()[39m,
  Embarked = [31mcol_character()[39m
)
> train <- read_csv((train.file))
Parsed with column specification:
cols(
  PassengerId = [32mcol_double()[39m,
  Survived = [32mcol_double()[39m,
  Pclass = [32mcol_double()[39m,
  Name = [31mcol_character()[39m,
  Sex = [31mcol_character()[39m,
  Age = [32mcol_double()[39m,
  SibSp = [32mcol_double()[39m,
  Parch = [32mcol_double()[39m,
  Ticket = [31mcol_character()[39m,
  Fare = [32mcol_double()[39m,
  Cabin = [31mcol_character()[39m,
  Embarked = [31mcol_character()[39m
)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> print(paste0(c("train Rows: ", "train Cols: "), dim(train)))
[1] "train Rows: 891" "train Cols: 12" 
> print(paste0(c("test Rows: ", "test Cols: "), dim(test)))
[1] "test Rows: 418" "test Cols: 11" 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train$set <- "train"
> test$set <- "test"
> test$Survived <- NA
> df <- rbind(train, test)
> glimpse(df)
Rows: 1,309
Columns: 13
$ PassengerId [3m[90m<dbl>[39m[23m 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17â€¦
$ Survived    [3m[90m<dbl>[39m[23m 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, â€¦
$ Pclass      [3m[90m<dbl>[39m[23m 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, â€¦
$ Name        [3m[90m<chr>[39m[23m "Braund, Mr. Owen Harris", "Cumings, Mrs. John Bradley (Fâ€¦
$ Sex         [3m[90m<chr>[39m[23m "male", "female", "female", "female", "male", "male", "maâ€¦
$ Age         [3m[90m<dbl>[39m[23m 22, 38, 26, 35, 35, NA, 54, 2, 27, 14, 4, 58, 20, 39, 14,â€¦
$ SibSp       [3m[90m<dbl>[39m[23m 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, â€¦
$ Parch       [3m[90m<dbl>[39m[23m 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, â€¦
$ Ticket      [3m[90m<chr>[39m[23m "A/5 21171", "PC 17599", "STON/O2. 3101282", "113803", "3â€¦
$ Fare        [3m[90m<dbl>[39m[23m 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625â€¦
$ Cabin       [3m[90m<chr>[39m[23m NA, "C85", NA, "C123", NA, NA, "E46", NA, NA, NA, "G6", "â€¦
$ Embarked    [3m[90m<chr>[39m[23m "S", "C", "S", "S", "S", "Q", "S", "S", "S", "C", "S", "Sâ€¦
$ set         [3m[90m<chr>[39m[23m "train", "train", "train", "train", "train", "train", "trâ€¦
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> unq_val <- df %>% 
+   summarise_at(colnames(df), funs(n_distinct))
Warning message:
`funs()` is deprecated as of dplyr 0.8.0.
Please use a list of either functions or lambdas: 

  # Simple named list: 
  list(mean = mean, median = median)

  # Auto named with `tibble::lst()`: 
  tibble::lst(mean, median)

  # Using lambdas
  list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))
[90mThis warning is displayed once every 8 hours.[39m
[90mCall `lifecycle::last_warnings()` to see where this warning was generated.[39m 
> 
> unq_val <- gather(unq_val, key = "feature",
+                          value = "Unq.Val")
> unq_val
[90m# A tibble: 13 x 2[39m
   feature     Unq.Val
   [3m[90m<chr>[39m[23m         [3m[90m<int>[39m[23m
[90m 1[39m PassengerId    [4m1[24m309
[90m 2[39m Survived          3
[90m 3[39m Pclass            3
[90m 4[39m Name           [4m1[24m307
[90m 5[39m Sex               2
[90m 6[39m Age              99
[90m 7[39m SibSp             7
[90m 8[39m Parch             8
[90m 9[39m Ticket          929
[90m10[39m Fare            282
[90m11[39m Cabin           187
[90m12[39m Embarked          4
[90m13[39m set               2
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> unq_val %>% 
+   ggplot(aes(x=reorder(feature, -Unq.Val), y=Unq.Val)) +
+   geom_bar(stat = 'identity', fill='red') +
+   coord_flip()
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> missmap(df, legend = FALSE, col = c("yellow", "black"),
+         main = "Missing Data in Titanic Data Set")
Warning messages:
1: Unknown or uninitialised column: `arguments`. 
2: Unknown or uninitialised column: `arguments`. 
3: Unknown or uninitialised column: `imputations`. 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> missing.values <- df %>% 
+   summarise_all(funs(sum(is.na(.)) / n()))
> 
> missing.values <- gather(missing.values, key = "feature",
+                          value = "missing.pct")
> 
> missing.values
[90m# A tibble: 13 x 2[39m
   feature     missing.pct
   [3m[90m<chr>[39m[23m             [3m[90m<dbl>[39m[23m
[90m 1[39m PassengerId    0       
[90m 2[39m Survived       0.319   
[90m 3[39m Pclass         0       
[90m 4[39m Name           0       
[90m 5[39m Sex            0       
[90m 6[39m Age            0.201   
[90m 7[39m SibSp          0       
[90m 8[39m Parch          0       
[90m 9[39m Ticket         0       
[90m10[39m Fare           0.000[4m7[24m[4m6[24m[4m4[24m
[90m11[39m Cabin          0.775   
[90m12[39m Embarked       0.001[4m5[24m[4m3[24m 
[90m13[39m set            0       
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> missing.values %>% 
+   ggplot(aes(x=reorder(feature, -missing.pct), y=missing.pct)) +
+   geom_bar(stat = 'identity', fill='red') +
+   coord_flip()
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> df %>% 
+   filter(set == "train") %>% 
+   ggplot(aes(Survived)) +
+   geom_bar()
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> survival.summary <- df %>% 
+   filter(set == "train") %>% 
+   select(PassengerId, Survived) %>% 
+   group_by(Survived) %>% 
+   summarise(n=n()) %>% 
+   mutate(perCent = n / sum(n))
`summarise()` ungrouping output (override with `.groups` argument)
> 
> survival.summary
[90m# A tibble: 2 x 3[39m
  Survived     n perCent
     [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m   [3m[90m<dbl>[39m[23m
[90m1[39m        0   549   0.616
[90m2[39m        1   342   0.384
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> surv.rate <- survival.summary$perCent[survival.summary$Survived == 1]
> surv.rate
[1] 0.3838384
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> df %>% 
+   filter(set == "train") %>% 
+   ggplot(aes(Pclass, fill=Survived)) +
+   geom_bar(aes(fill=factor(Survived)), position = "fill") +
+   scale_y_continuous(labels = scales::percent) +
+   labs(title="Survival Rate by Pclass",
+        xlab = "Pclass",
+        ylab = "Survival Rate") +
+   geom_hline(yintercept = surv.rate, col="white", lty=2, size=1) +
+   theme_bw()
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> df %>% 
+   filter(set == "train") %>% 
+   ggplot(aes(Sex, fill=Survived)) +
+   geom_bar(aes(fill=factor(Survived)), position = "fill") +
+   scale_y_continuous(labels = scales::percent) +
+   labs(title="Survival Rate by Sex",
+        x = "Sex",
+        y = "Survival Rate") +
+   geom_hline(yintercept = surv.rate, col="white", lty=2, size=1) +
+   theme_bw()
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> impute_age <- function(age, pclass) {
+   out <- age
+   for (i in 1:length(age)) {
+     if (is.na(age[i])) {
+       if (pclass[i] == 1) {
+         avg_age <- mean(df[which(df$Pclass == 1),]$Age, na.rm = TRUE)
+         out[i] <- avg_age
+       }else if (pclass[i] == 2) {
+         avg_age <- mean(df[which(df$Pclass == 2),]$Age, na.rm = TRUE)
+         out[i] <- avg_age
+       }else{
+         avg_age <- mean(df[which(df$Pclass == 3),]$Age, na.rm = TRUE)
+         out[i] <- avg_age
+       }
+     }else{
+       out[i] <- age[i]
+     }
+   }
+   return(out)
+ }
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> fixed.age <- impute_age(df$Age, df$Pclass)
> df$Age <- fixed.age
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> tbl.age <- df %>% 
+   filter(set == "train") %>% 
+   select(Age, Survived) %>% 
+   group_by(Survived) %>% 
+   summarise(mean.age = mean(Age, na.rm = TRUE))
`summarise()` ungrouping output (override with `.groups` argument)
> 
> df %>% 
+   filter(set == "train") %>% 
+   ggplot(aes(Age, fill=factor(Survived))) +
+   geom_histogram(aes(y=..density..), binwidth = 10, alpha=0.5) +
+   geom_density(aes(color = factor(Survived)), alpha = 0.2) +
+   geom_vline(data = tbl.age, 
+              aes(xintercept=mean.age, color=factor(Survived)), lty=2, size=1) +
+   scale_fill_brewer(palette = "Set1") +
+   scale_color_brewer(palette = "Set1") +
+   scale_y_continuous(labels = scales::percent) +
+   labs(title = "Survival by Age",
+        x = "Age",
+        y = "Density") +
+   theme_bw()
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> df <- df %>% 
+   mutate(AgeGroup = case_when(Age < 2 ~ "infants",
+                               Age >= 2 & Age < 12 ~ "children",
+                               Age >= 12 & Age < 18 ~ "teenagers",
+                               Age >= 18 & Age < 25 ~ "youngAdults",
+                               Age >= 25 & Age < 40 ~ "adults",
+                               Age >= 40 & Age < 60 ~ "middleAge",
+                               Age >= 60 ~ "old"))
> df$AgeGroup <- as.factor(df$AgeGroup)
> glimpse(df)
Rows: 1,309
Columns: 14
$ PassengerId [3m[90m<dbl>[39m[23m 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17â€¦
$ Survived    [3m[90m<dbl>[39m[23m 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, â€¦
$ Pclass      [3m[90m<dbl>[39m[23m 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, â€¦
$ Name        [3m[90m<chr>[39m[23m "Braund, Mr. Owen Harris", "Cumings, Mrs. John Bradley (Fâ€¦
$ Sex         [3m[90m<chr>[39m[23m "male", "female", "female", "female", "male", "male", "maâ€¦
$ Age         [3m[90m<dbl>[39m[23m 22.00000, 38.00000, 26.00000, 35.00000, 35.00000, 24.8163â€¦
$ SibSp       [3m[90m<dbl>[39m[23m 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, â€¦
$ Parch       [3m[90m<dbl>[39m[23m 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, â€¦
$ Ticket      [3m[90m<chr>[39m[23m "A/5 21171", "PC 17599", "STON/O2. 3101282", "113803", "3â€¦
$ Fare        [3m[90m<dbl>[39m[23m 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625â€¦
$ Cabin       [3m[90m<chr>[39m[23m NA, "C85", NA, "C123", NA, NA, "E46", NA, NA, NA, "G6", "â€¦
$ Embarked    [3m[90m<chr>[39m[23m "S", "C", "S", "S", "S", "Q", "S", "S", "S", "C", "S", "Sâ€¦
$ set         [3m[90m<chr>[39m[23m "train", "train", "train", "train", "train", "train", "trâ€¦
$ AgeGroup    [3m[90m<fct>[39m[23m youngAdults, adults, adults, adults, adults, youngAdults,â€¦
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> df$Survived <- factor(df$Survived)
> df$Pclass <- factor(df$Pclass)
> glimpse(df)
Rows: 1,309
Columns: 14
$ PassengerId [3m[90m<dbl>[39m[23m 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17â€¦
$ Survived    [3m[90m<fct>[39m[23m 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, â€¦
$ Pclass      [3m[90m<fct>[39m[23m 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, â€¦
$ Name        [3m[90m<chr>[39m[23m "Braund, Mr. Owen Harris", "Cumings, Mrs. John Bradley (Fâ€¦
$ Sex         [3m[90m<chr>[39m[23m "male", "female", "female", "female", "male", "male", "maâ€¦
$ Age         [3m[90m<dbl>[39m[23m 22.00000, 38.00000, 26.00000, 35.00000, 35.00000, 24.8163â€¦
$ SibSp       [3m[90m<dbl>[39m[23m 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, â€¦
$ Parch       [3m[90m<dbl>[39m[23m 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, â€¦
$ Ticket      [3m[90m<chr>[39m[23m "A/5 21171", "PC 17599", "STON/O2. 3101282", "113803", "3â€¦
$ Fare        [3m[90m<dbl>[39m[23m 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625â€¦
$ Cabin       [3m[90m<chr>[39m[23m NA, "C85", NA, "C123", NA, NA, "E46", NA, NA, NA, "G6", "â€¦
$ Embarked    [3m[90m<chr>[39m[23m "S", "C", "S", "S", "S", "Q", "S", "S", "S", "C", "S", "Sâ€¦
$ set         [3m[90m<chr>[39m[23m "train", "train", "train", "train", "train", "train", "trâ€¦
$ AgeGroup    [3m[90m<fct>[39m[23m youngAdults, adults, adults, adults, adults, youngAdults,â€¦
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> age.group <- c("infants", "children", "teenagers", "youngAdults",
+                "adults", "middleAge", "old")
> 
> df %>% 
+   filter(set == "train") %>% 
+   ggplot(aes(AgeGroup, fill=Survived))+
+   geom_bar(position = "fill") +
+   scale_fill_brewer(palette = "Set1") +
+   scale_y_continuous(labels = scales::percent) +
+   scale_x_discrete(limits=age.group) +
+   geom_hline(yintercept = surv.rate, col="white", lty=2, size=1) +
+   labs(title = "Survival Rate by Age Group",
+        x = "Age Group",
+        y = "Survival Rate") +
+   theme_bw()
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> strp.title <- function(x){
+   splt <- strsplit(x, split = "[,.]")
+   titl <- splt[[1]][2]
+   return(sub(" ", "", titl))
+ }
> 
> df$title <- sapply(df$Name, strp.title)
> glimpse(df)
Rows: 1,309
Columns: 15
$ PassengerId [3m[90m<dbl>[39m[23m 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17â€¦
$ Survived    [3m[90m<fct>[39m[23m 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, â€¦
$ Pclass      [3m[90m<fct>[39m[23m 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, â€¦
$ Name        [3m[90m<chr>[39m[23m "Braund, Mr. Owen Harris", "Cumings, Mrs. John Bradley (Fâ€¦
$ Sex         [3m[90m<chr>[39m[23m "male", "female", "female", "female", "male", "male", "maâ€¦
$ Age         [3m[90m<dbl>[39m[23m 22.00000, 38.00000, 26.00000, 35.00000, 35.00000, 24.8163â€¦
$ SibSp       [3m[90m<dbl>[39m[23m 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, â€¦
$ Parch       [3m[90m<dbl>[39m[23m 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, â€¦
$ Ticket      [3m[90m<chr>[39m[23m "A/5 21171", "PC 17599", "STON/O2. 3101282", "113803", "3â€¦
$ Fare        [3m[90m<dbl>[39m[23m 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625â€¦
$ Cabin       [3m[90m<chr>[39m[23m NA, "C85", NA, "C123", NA, NA, "E46", NA, NA, NA, "G6", "â€¦
$ Embarked    [3m[90m<chr>[39m[23m "S", "C", "S", "S", "S", "Q", "S", "S", "S", "C", "S", "Sâ€¦
$ set         [3m[90m<chr>[39m[23m "train", "train", "train", "train", "train", "train", "trâ€¦
$ AgeGroup    [3m[90m<fct>[39m[23m youngAdults, adults, adults, adults, adults, youngAdults,â€¦
$ title       [3m[90m<chr>[39m[23m "Mr", "Mrs", "Miss", "Mrs", "Mr", "Mr", "Mr", "Master", "â€¦
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> tbl_title <- df %>% 
+   select(PassengerId, title) %>% 
+   group_by(title) %>% 
+   summarise(n = n())
`summarise()` ungrouping output (override with `.groups` argument)
> tbl_title %>% 
+   ggplot(aes(x=reorder(title, n), y = n)) +
+   geom_bar(stat = "identity", fill='red') +
+   coord_flip()
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> noble <- c("Don", "Dona", "Jonkheer", "Lady", "Dr", "Rev", "Sir", "the Countess")
> Ms <- c("Miss", "Mlle", "Ms")
> Mrs <- c("Mme", "Mrs")
> armyOfficer <- c("Capt", "Col", "Major")
> 
> df <- df %>% 
+   mutate(ttl.group = case_when(title %in% noble ~ "noble",
+                                title %in% Ms ~ "Ms",
+                                title %in% Mrs ~ "Mrs",
+                                title %in% armyOfficer ~ "armyOfficer",
+                                title == "Master" ~ "Master",
+                                title == "Mr" ~ "Mr"))
> glimpse(df)
Rows: 1,309
Columns: 16
$ PassengerId [3m[90m<dbl>[39m[23m 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17â€¦
$ Survived    [3m[90m<fct>[39m[23m 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, â€¦
$ Pclass      [3m[90m<fct>[39m[23m 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, â€¦
$ Name        [3m[90m<chr>[39m[23m "Braund, Mr. Owen Harris", "Cumings, Mrs. John Bradley (Fâ€¦
$ Sex         [3m[90m<chr>[39m[23m "male", "female", "female", "female", "male", "male", "maâ€¦
$ Age         [3m[90m<dbl>[39m[23m 22.00000, 38.00000, 26.00000, 35.00000, 35.00000, 24.8163â€¦
$ SibSp       [3m[90m<dbl>[39m[23m 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, â€¦
$ Parch       [3m[90m<dbl>[39m[23m 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, â€¦
$ Ticket      [3m[90m<chr>[39m[23m "A/5 21171", "PC 17599", "STON/O2. 3101282", "113803", "3â€¦
$ Fare        [3m[90m<dbl>[39m[23m 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625â€¦
$ Cabin       [3m[90m<chr>[39m[23m NA, "C85", NA, "C123", NA, NA, "E46", NA, NA, NA, "G6", "â€¦
$ Embarked    [3m[90m<chr>[39m[23m "S", "C", "S", "S", "S", "Q", "S", "S", "S", "C", "S", "Sâ€¦
$ set         [3m[90m<chr>[39m[23m "train", "train", "train", "train", "train", "train", "trâ€¦
$ AgeGroup    [3m[90m<fct>[39m[23m youngAdults, adults, adults, adults, adults, youngAdults,â€¦
$ title       [3m[90m<chr>[39m[23m "Mr", "Mrs", "Miss", "Mrs", "Mr", "Mr", "Mr", "Master", "â€¦
$ ttl.group   [3m[90m<chr>[39m[23m "Mr", "Mrs", "Ms", "Mrs", "Mr", "Mr", "Mr", "Master", "Mrâ€¦
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> df %>% 
+   filter(set == "train") %>% 
+   ggplot(aes(ttl.group, fill=Survived))+
+   geom_bar(position = "fill") +
+   scale_fill_brewer(palette = "Set1") +
+   scale_y_continuous(labels = scales::percent) +
+   geom_hline(yintercept = surv.rate, col="white", lty=2, size=1) +
+   labs(title = "Survival Rate by Title",
+        x = "Title's",
+        y = "Survival Rate") +
+   theme_bw()
>   
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> df <- df %>% 
+   mutate(familySize = SibSp + Parch + 1,
+          familyGrp = case_when(familySize == 1 ~ "Single",
+                                familySize >= 2 & familySize < 5 ~ "Small",
+                                familySize >= 5 ~ "Big"),
+          familyGrp = as.factor(familyGrp))
> glimpse(df)
Rows: 1,309
Columns: 18
$ PassengerId [3m[90m<dbl>[39m[23m 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17â€¦
$ Survived    [3m[90m<fct>[39m[23m 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, â€¦
$ Pclass      [3m[90m<fct>[39m[23m 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, â€¦
$ Name        [3m[90m<chr>[39m[23m "Braund, Mr. Owen Harris", "Cumings, Mrs. John Bradley (Fâ€¦
$ Sex         [3m[90m<chr>[39m[23m "male", "female", "female", "female", "male", "male", "maâ€¦
$ Age         [3m[90m<dbl>[39m[23m 22.00000, 38.00000, 26.00000, 35.00000, 35.00000, 24.8163â€¦
$ SibSp       [3m[90m<dbl>[39m[23m 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, â€¦
$ Parch       [3m[90m<dbl>[39m[23m 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, â€¦
$ Ticket      [3m[90m<chr>[39m[23m "A/5 21171", "PC 17599", "STON/O2. 3101282", "113803", "3â€¦
$ Fare        [3m[90m<dbl>[39m[23m 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625â€¦
$ Cabin       [3m[90m<chr>[39m[23m NA, "C85", NA, "C123", NA, NA, "E46", NA, NA, NA, "G6", "â€¦
$ Embarked    [3m[90m<chr>[39m[23m "S", "C", "S", "S", "S", "Q", "S", "S", "S", "C", "S", "Sâ€¦
$ set         [3m[90m<chr>[39m[23m "train", "train", "train", "train", "train", "train", "trâ€¦
$ AgeGroup    [3m[90m<fct>[39m[23m youngAdults, adults, adults, adults, adults, youngAdults,â€¦
$ title       [3m[90m<chr>[39m[23m "Mr", "Mrs", "Miss", "Mrs", "Mr", "Mr", "Mr", "Master", "â€¦
$ ttl.group   [3m[90m<chr>[39m[23m "Mr", "Mrs", "Ms", "Mrs", "Mr", "Mr", "Mr", "Master", "Mrâ€¦
$ familySize  [3m[90m<dbl>[39m[23m 2, 2, 1, 2, 1, 1, 1, 5, 3, 2, 3, 1, 1, 7, 1, 1, 6, 1, 2, â€¦
$ familyGrp   [3m[90m<fct>[39m[23m Small, Small, Single, Small, Single, Single, Single, Big,â€¦
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> fam.grp <- c("Single", "Small", "Big")
> df %>% 
+   filter(set == "train") %>% 
+   ggplot(aes(familyGrp, fill=Survived))+
+   geom_bar(position = "fill") +
+   scale_fill_brewer(palette = "Set1") +
+   scale_y_continuous(labels = scales::percent) +
+   scale_x_discrete(limits=fam.grp)+
+   geom_hline(yintercept = surv.rate, col="white", lty=2, size=1) +
+   labs(title = "Survival Rate by Family",
+        x = "Family Group",
+        y = "Survival Rate") +
+   theme_bw()
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> df$Embarked <- replace(df$Embarked, which(is.na(df$Embarked)), "S")
> df$Embarked <- as.factor(df$Embarked)
> levels(df$Embarked)
[1] "C" "Q" "S"
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> df %>% 
+   filter(set == "train") %>% 
+   ggplot(aes(Embarked, fill=Survived))+
+   geom_bar(position = "fill") +
+   scale_fill_brewer(palette = "Set1") +
+   scale_y_continuous(labels = scales::percent) +
+   geom_hline(yintercept = surv.rate, col="white", lty=2, size=1) +
+   labs(title = "Survival Rate by Port of Embark",
+        x = "Port",
+        y = "Survival Rate") +
+   theme_bw()
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> df <- df %>% 
+   mutate(Sex = as.factor(Sex),
+          SibSp = as.factor(SibSp),
+          Parch = as.factor(Parch),
+          title = as.factor(title),
+          ttl.group = as.factor(ttl.group))
> str(df)
tibble [1,309 Ã— 18] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
 $ PassengerId: num [1:1309] 1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr [1:1309] "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num [1:1309] 22 38 26 35 35 ...
 $ SibSp      : Factor w/ 7 levels "0","1","2","3",..: 2 2 1 2 1 1 1 4 1 2 ...
 $ Parch      : Factor w/ 8 levels "0","1","2","3",..: 1 1 1 1 1 1 1 2 3 1 ...
 $ Ticket     : chr [1:1309] "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num [1:1309] 7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr [1:1309] NA "C85" NA "C123" ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ set        : chr [1:1309] "train" "train" "train" "train" ...
 $ AgeGroup   : Factor w/ 7 levels "adults","children",..: 7 1 1 1 1 7 4 2 1 6 ...
 $ title      : Factor w/ 18 levels "Capt","Col","Don",..: 13 14 10 14 13 13 13 9 14 14 ...
  ..- attr(*, "names")= chr [1:1309] "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ ttl.group  : Factor w/ 6 levels "armyOfficer",..: 3 4 5 4 3 3 3 2 4 4 ...
 $ familySize : num [1:1309] 2 2 1 2 1 1 1 5 3 2 ...
 $ familyGrp  : Factor w/ 3 levels "Big","Single",..: 3 3 2 3 2 2 2 1 3 3 ...
 - attr(*, "spec")=
  .. cols(
  ..   PassengerId = [32mcol_double()[39m,
  ..   Survived = [32mcol_double()[39m,
  ..   Pclass = [32mcol_double()[39m,
  ..   Name = [31mcol_character()[39m,
  ..   Sex = [31mcol_character()[39m,
  ..   Age = [32mcol_double()[39m,
  ..   SibSp = [32mcol_double()[39m,
  ..   Parch = [32mcol_double()[39m,
  ..   Ticket = [31mcol_character()[39m,
  ..   Fare = [32mcol_double()[39m,
  ..   Cabin = [31mcol_character()[39m,
  ..   Embarked = [31mcol_character()[39m
  .. )
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> df <- df %>% 
+   mutate(familySize = as.factor(familySize))
> str(df)
tibble [1,309 Ã— 18] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
 $ PassengerId: num [1:1309] 1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr [1:1309] "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num [1:1309] 22 38 26 35 35 ...
 $ SibSp      : Factor w/ 7 levels "0","1","2","3",..: 2 2 1 2 1 1 1 4 1 2 ...
 $ Parch      : Factor w/ 8 levels "0","1","2","3",..: 1 1 1 1 1 1 1 2 3 1 ...
 $ Ticket     : chr [1:1309] "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num [1:1309] 7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr [1:1309] NA "C85" NA "C123" ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ set        : chr [1:1309] "train" "train" "train" "train" ...
 $ AgeGroup   : Factor w/ 7 levels "adults","children",..: 7 1 1 1 1 7 4 2 1 6 ...
 $ title      : Factor w/ 18 levels "Capt","Col","Don",..: 13 14 10 14 13 13 13 9 14 14 ...
  ..- attr(*, "names")= chr [1:1309] "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ ttl.group  : Factor w/ 6 levels "armyOfficer",..: 3 4 5 4 3 3 3 2 4 4 ...
 $ familySize : Factor w/ 9 levels "1","2","3","4",..: 2 2 1 2 1 1 1 5 3 2 ...
 $ familyGrp  : Factor w/ 3 levels "Big","Single",..: 3 3 2 3 2 2 2 1 3 3 ...
 - attr(*, "spec")=
  .. cols(
  ..   PassengerId = [32mcol_double()[39m,
  ..   Survived = [32mcol_double()[39m,
  ..   Pclass = [32mcol_double()[39m,
  ..   Name = [31mcol_character()[39m,
  ..   Sex = [31mcol_character()[39m,
  ..   Age = [32mcol_double()[39m,
  ..   SibSp = [32mcol_double()[39m,
  ..   Parch = [32mcol_double()[39m,
  ..   Ticket = [31mcol_character()[39m,
  ..   Fare = [32mcol_double()[39m,
  ..   Cabin = [31mcol_character()[39m,
  ..   Embarked = [31mcol_character()[39m
  .. )
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # make a dataframe of selected columns
> pruned.df <- df %>% 
+   select(PassengerId, Survived, Pclass, Sex, Age,
+          familyGrp, Embarked, ttl.group, set)
> 
> # extract train set for further splitting
> train.pruned.df <- pruned.df %>% 
+   filter(set == "train") %>% 
+   select(-set)
> 
> # split the train set further in 70/30 ration
> split = sample.split(train.pruned.df$Survived, SplitRatio = 0.70)
> final.train <- subset(train.pruned.df, split == TRUE)
> final.test <- subset(train.pruned.df, split == FALSE)
> 
> # check the dimensions
> print(paste0(c("train Rows: ", "train Cols: "), dim(final.train)))
[1] "train Rows: 623" "train Cols: 8"  
> print(paste0(c("test Rows: ", "test Cols: "), dim(final.test)))
[1] "test Rows: 268" "test Cols: 8"  
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> log.model <- glm(Survived ~ ., family = binomial(link = "logit"),
+                  data = final.train)
> summary(log.model)

Call:
glm(formula = Survived ~ ., family = binomial(link = "logit"), 
    data = final.train)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.5721  -0.5734  -0.3913   0.5258   2.4996  

Coefficients:
                  Estimate Std. Error z value Pr(>|z|)    
(Intercept)      1.632e+01  5.068e+02   0.032  0.97430    
PassengerId     -3.202e-04  4.316e-04  -0.742  0.45816    
Pclass2         -1.121e+00  3.566e-01  -3.145  0.00166 ** 
Pclass3         -2.365e+00  3.383e-01  -6.991 2.74e-12 ***
Sexmale         -1.589e+01  5.068e+02  -0.031  0.97498    
Age             -3.591e-02  1.179e-02  -3.045  0.00233 ** 
familyGrpSingle  2.260e+00  5.121e-01   4.413 1.02e-05 ***
familyGrpSmall   1.987e+00  4.956e-01   4.009 6.09e-05 ***
EmbarkedQ       -5.666e-02  4.758e-01  -0.119  0.90521    
EmbarkedS       -4.958e-01  2.973e-01  -1.667  0.09545 .  
ttl.groupMaster  2.172e+00  1.610e+00   1.349  0.17737    
ttl.groupMr     -1.184e+00  1.454e+00  -0.814  0.41560    
ttl.groupMrs    -1.381e+01  5.068e+02  -0.027  0.97826    
ttl.groupMs     -1.438e+01  5.068e+02  -0.028  0.97737    
ttl.groupnoble  -1.797e+00  1.663e+00  -1.081  0.27986    
---
Signif. codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 829.60  on 622  degrees of freedom
Residual deviance: 516.59  on 608  degrees of freedom
AIC: 546.59

Number of Fisher Scoring iterations: 13

> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> probs <- predict(log.model, newdata = final.test, type = "response")
> res <- ifelse(probs > 0.5, 1, 0)
> 
> # Accuracy
> misClasificationError <- mean(res != final.test$Survived)
> print(paste('Accuracy', 1 - misClasificationError))
[1] "Accuracy 0.850746268656716"
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> table(final.test$Survived, probs > 0.5)
   
    FALSE TRUE
  0   146   19
  1    21   82
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> orgnl.train <- pruned.df %>% 
+   filter(set == "train") %>% 
+   select(-set)
> orgnl.test <- pruned.df %>% 
+   filter(set == "test") %>% 
+   select(-set, -Survived)
> 
> # check the dimensins of both set
> print(paste0(c("train Rows: ", "train Cols: "), dim(orgnl.train)))
[1] "train Rows: 891" "train Cols: 8"  
> print(paste0(c("test Rows: ", "test Cols: "), dim(orgnl.test)))
[1] "test Rows: 418" "test Cols: 7"  
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> final.log.model <- glm(Survived ~ ., family = binomial(link = "logit"),
+                        data = orgnl.train)
> summary(final.log.model)

Call:
glm(formula = Survived ~ ., family = binomial(link = "logit"), 
    data = orgnl.train)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.5849  -0.5221  -0.3860   0.5430   2.4799  

Coefficients:
                  Estimate Std. Error z value Pr(>|z|)    
(Intercept)      1.415e+01  5.079e+02   0.028  0.97778    
PassengerId      4.746e-05  3.720e-04   0.128  0.89847    
Pclass2         -1.354e+00  3.078e-01  -4.397 1.10e-05 ***
Pclass3         -2.422e+00  2.937e-01  -8.248  < 2e-16 ***
Sexmale         -1.550e+01  5.079e+02  -0.031  0.97565    
Age             -2.811e-02  9.867e-03  -2.849  0.00439 ** 
familyGrpSingle  2.864e+00  4.730e-01   6.055 1.41e-09 ***
familyGrpSmall   2.571e+00  4.555e-01   5.644 1.66e-08 ***
EmbarkedQ       -4.044e-02  3.970e-01  -0.102  0.91888    
EmbarkedS       -3.868e-01  2.519e-01  -1.536  0.12462    
ttl.groupMaster  2.989e+00  1.136e+00   2.632  0.00849 ** 
ttl.groupMr     -4.762e-01  9.610e-01  -0.496  0.62023    
ttl.groupMrs    -1.235e+01  5.079e+02  -0.024  0.98060    
ttl.groupMs     -1.304e+01  5.079e+02  -0.026  0.97952    
ttl.groupnoble  -8.934e-01  1.164e+00  -0.767  0.44282    
---
Signif. codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 1186.66  on 890  degrees of freedom
Residual deviance:  713.55  on 876  degrees of freedom
AIC: 743.55

Number of Fisher Scoring iterations: 13

> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> test.probs <- predict(final.log.model, newdata = orgnl.test, type = "response")
> test.res <- ifelse(test.probs > 0.5, 1, 0)
> 
> # write it into test data frame
> orgnl.test$Survived <- test.res
> 
> # prepare submission csv file
> log.submission <- orgnl.test %>% 
+   select(PassengerId, Survived)
> 
> 
> proc.time()
   user  system elapsed 
  3.362   0.206   3.706 
