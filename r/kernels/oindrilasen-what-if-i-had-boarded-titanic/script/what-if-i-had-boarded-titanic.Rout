
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## ----include = FALSE-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

Warning message:
package â€˜dplyrâ€™ was built under R version 3.6.2 
> library(ggplot2)
Warning message:
package â€˜ggplot2â€™ was built under R version 3.6.2 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ######################################
> # 1. Load Data
> ######################################
> # Set Working Directory
> #setwd("/Users/oindrilasen/WORK_AREA/Data Science/kaggle/Titanic")
> # Read train.csv data file
> titanic_train<-read.csv('../input/train.csv',
+                   header = TRUE,
+                   na.strings = "",
+                   stringsAsFactors = FALSE)
> 
> # Read test.csv data file
> titanic_test<-read.csv('../input/test.csv',
+                         header = TRUE,
+                         na.strings = "",
+                         stringsAsFactors = FALSE)
> 
> # Add column Survived in Test DataSet
> titanic_test$Survived <- NA
> titanic_clean <- rbind(titanic_train,titanic_test)
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> dim(titanic_train) # 891,12
[1] 891  12
> dim(titanic_test) # 418, 11
[1] 418  12
> glimpse(titanic_clean) # 1309, 12
Rows: 1,309
Columns: 12
$ PassengerId [3m[90m<int>[39m[23m 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17â€¦
$ Survived    [3m[90m<int>[39m[23m 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, â€¦
$ Pclass      [3m[90m<int>[39m[23m 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, â€¦
$ Name        [3m[90m<chr>[39m[23m "Braund, Mr. Owen Harris", "Cumings, Mrs. John Bradley (Fâ€¦
$ Sex         [3m[90m<chr>[39m[23m "male", "female", "female", "female", "male", "male", "maâ€¦
$ Age         [3m[90m<dbl>[39m[23m 22, 38, 26, 35, 35, NA, 54, 2, 27, 14, 4, 58, 20, 39, 14,â€¦
$ SibSp       [3m[90m<int>[39m[23m 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, â€¦
$ Parch       [3m[90m<int>[39m[23m 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, â€¦
$ Ticket      [3m[90m<chr>[39m[23m "A/5 21171", "PC 17599", "STON/O2. 3101282", "113803", "3â€¦
$ Fare        [3m[90m<dbl>[39m[23m 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625â€¦
$ Cabin       [3m[90m<chr>[39m[23m NA, "C85", NA, "C123", NA, NA, "E46", NA, NA, NA, "G6", "â€¦
$ Embarked    [3m[90m<chr>[39m[23m "S", "C", "S", "S", "S", "Q", "S", "S", "S", "C", "S", "Sâ€¦
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Check which variables are Factors
> sapply(titanic_clean, function(x) length(unique(x)))
PassengerId    Survived      Pclass        Name         Sex         Age 
       1309           3           3        1307           2          99 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          7           8         929         282         187           4 
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Transforming categorical Variables to factors:
> to_factor <- c(
+   'Survived',
+   'Pclass',
+   'Sex',
+   'Embarked'
+ )
> for (col in to_factor) {
+   titanic_clean[[col]] <- factor(titanic_clean[[col]])
+ }
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # check for NA values
> sapply(titanic_clean, function(x) sum(is.na(x)))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0         418           0           0           0         263 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           1        1014           2 
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Convert Age column to Numeric
> titanic_clean$Age <- as.integer((titanic_clean$Age))
> # Relace NA values for Age with the mean
> titanic_clean$Age[is.na(titanic_clean$Age)] <- mean(titanic_clean$Age,na.rm = TRUE)
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Replace Cabin# with None for NA records
> titanic_clean$Cabin[is.na(titanic_clean$Cabin)] <- "None"
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Check for Embarked variable
> table(titanic_clean$Embarked)

  C   Q   S 
270 123 914 
> # Relace the Embarked value with the most common value i.e S
> titanic_clean$Embarked[is.na(titanic_clean$Embarked)] <- "S"
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Convert Fare column to Integer
> titanic_clean$Fare <- as.integer((titanic_clean$Fare))
> # Relace NA values for Fare with the Mean
> titanic_clean$Fare[is.na(titanic_clean$Fare)] <- mean(titanic_clean$Fare,na.rm = TRUE)
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Again check for NA values
> sapply(titanic_clean, function(x) sum(is.na(x)))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0         418           0           0           0           0 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           0           0           0 
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Change the levels to meaningful values
> # 1. Pclass
> levels(titanic_clean$Pclass)[levels(titanic_clean$Pclass)== "1"] <- "1st Class"
> levels(titanic_clean$Pclass)[levels(titanic_clean$Pclass)== "2"] <- "2nd Class"
> levels(titanic_clean$Pclass)[levels(titanic_clean$Pclass)== "3"] <- "3rd Class"
> 
> # 2. Embarked
> levels(titanic_clean$Embarked)[levels(titanic_clean$Embarked)== "C"] <- "Cherbourg"
> levels(titanic_clean$Embarked)[levels(titanic_clean$Embarked)== "Q"] <- "Queenstown"
> levels(titanic_clean$Embarked)[levels(titanic_clean$Embarked)== "S"] <- "Southampton"
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> summary(titanic_clean$Fare)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   0.00    7.00   14.00   32.87   31.00  512.00 
> titanic_clean$Fare_Group <-factor(ifelse(titanic_clean$Fare >= 0 & titanic_clean$Fare <= 15, "Low",
+                            ifelse(titanic_clean$Fare > 15 & titanic_clean$Fare <=100, "Medium",
+                            ifelse(titanic_clean$Fare >100 ,"High",NA
+                                                ))))
> 
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Add new feature Age_Group
> summary(titanic_clean$Age)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   0.00   22.00   29.86   29.86   35.00   80.00 
> 
> titanic_clean$Age_Group <-factor(ifelse(titanic_clean$Age<= 3, "Baby",
+                           ifelse(titanic_clean$Age> 3 & titanic_clean$Age<=12, "Kid",
+                           ifelse(titanic_clean$Age> 12 & titanic_clean$Age<=18, "Teen",
+                           ifelse(titanic_clean$Age> 18, "Adult",NA
+                                  ))))
+ )
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Add new feature with_family
> titanic_clean$with_family <-factor(ifelse(titanic_clean$Parch == 0 & titanic_clean$SibSp ==0, "no","yes"))
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Understand the Variables Individually
> ggplot(titanic_clean, aes(x = Pclass)) +
+   geom_bar(fill= "light blue")+
+   scale_y_continuous(limits = c(0,1400), breaks = seq(0,1400,100))+
+   ggtitle("Class vs Total Passengers") 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> prop.table((table(titanic_clean$Sex)))

   female      male 
0.3559969 0.6440031 
> ggplot(titanic_clean, aes(x = Sex)) +
+     geom_bar(fill= "light green")+
+     scale_y_continuous(limits = c(0,1400), breaks = seq(0,1400,100))+
+   ggtitle("Sex vs Total Passengers") 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot(titanic_clean, aes(x = Embarked)) +
+     geom_bar(fill= "light yellow")+
+     scale_y_continuous(limits = c(0,1400), breaks = seq(0,1400,100))+
+   ggtitle("Embarked vs Total Passengers") 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot(titanic_clean, aes(x = Age_Group)) +
+     geom_bar(fill= "light green")+
+     scale_y_continuous(limits = c(0,1400), breaks = seq(0,1400,100))+
+   ggtitle("Age_Group vs Total Passengers") 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot(titanic_clean, aes(x = Fare_Group)) +
+     geom_bar(fill= "light blue")+
+     scale_y_continuous(limits = c(0,1000), breaks = seq(0,1000,100))+
+   ggtitle("Fare_Group vs Total Passengers") 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> prop.table(table(titanic_clean$with_family))

       no       yes 
0.6035141 0.3964859 
> 
> ggplot(titanic_clean, aes(x = with_family)) +
+     geom_bar(fill= "light yellow")+
+     scale_y_continuous(limits = c(0,1000), breaks = seq(0,1000,100))+
+   ggtitle("with_family vs Total Passengers")   
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
>   table(titanic_clean$with_family, titanic_clean$Age_Group)
     
      Adult Baby Kid Teen
  no    734    0   3   53
  yes   379   41  50   49
>    kids_without_family<-
+     titanic_clean%>%
+     filter(with_family=="no",Age_Group=="Kid")
>   
>   kids_without_family
  PassengerId Survived    Pclass                          Name    Sex Age SibSp
1         732        0 3rd Class      Hassan, Mr. Houssein G N   male  11     0
2         778        1 3rd Class Emanuel, Miss. Virginia Ethel female   5     0
3        1012     <NA> 2nd Class          Watt, Miss. Bertha J female  12     0
  Parch     Ticket Fare Cabin    Embarked Fare_Group Age_Group with_family
1     0       2699   18  None   Cherbourg     Medium       Kid          no
2     0     364516   12  None Southampton        Low       Kid          no
3     0 C.A. 33595   15  None Southampton        Low       Kid          no
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> set.seed(550)
> titanic_train <- titanic_clean[1:891,]
> titanic_test <- titanic_clean[892:1309,]
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> table(titanic_train$Survived,titanic_train$Age_Group)
   
    Adult Baby Kid Teen
  0   480   10  19   40
  1   272   20  20   30
> ggplot(titanic_train, aes(Age_Group, ..count..)) + 
+ geom_bar(aes(fill = Survived), position = "dodge", na.rm = FALSE)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> table(titanic_train$Survived,titanic_train$Sex)
   
    female male
  0     81  468
  1    233  109
> ggplot(titanic_train, aes(Sex, ..count..)) + 
+   geom_bar(aes(fill = Survived), position = "dodge", na.rm = FALSE)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> table(titanic_train$Survived,titanic_train$with_family)
   
     no yes
  0 374 175
  1 163 179
> ggplot(titanic_train, aes(with_family, ..count..)) + 
+   geom_bar(aes(fill = Survived), position = "dodge", na.rm = FALSE)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> prop.table(table(titanic_train$Survived,titanic_train$Fare_Group))
   
          High        Low     Medium
  0 0.01571268 0.40067340 0.19977553
  1 0.04377104 0.14253648 0.19753086
> ggplot(titanic_train, aes(Fare_Group, ..count..)) + 
+   geom_bar(aes(fill = Survived), position = "dodge", na.rm = FALSE)
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> my_chances <-
+   titanic_train %>%
+   filter(Sex=="female",
+          Age_Group == "Teen",
+          Parch >0 ,
+          SibSp >0 
+          )
> prop.table(table(my_chances$Survived))

   0    1 
0.25 0.75 
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ######################################
> # 5. Create a Model
> ######################################
> lm_survival_model <- glm(Survived ~ Pclass+Sex+
+                                     Age+SibSp+Parch
+                            +with_family+Age_Group,
+                            data = titanic_train,
+                            family = binomial(link=logit)
+ )
> 
> summary(lm_survival_model)

Call:
glm(formula = Survived ~ Pclass + Sex + Age + SibSp + Parch + 
    with_family + Age_Group, family = binomial(link = logit), 
    data = titanic_train)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.0570  -0.5823  -0.4284   0.5876   2.4205  

Coefficients:
                 Estimate Std. Error z value Pr(>|z|)    
(Intercept)      3.372282   0.471233   7.156 8.29e-13 ***
Pclass2nd Class -1.138113   0.265179  -4.292 1.77e-05 ***
Pclass3rd Class -2.131168   0.247142  -8.623  < 2e-16 ***
Sexmale         -2.808637   0.207012 -13.568  < 2e-16 ***
Age             -0.024822   0.009957  -2.493  0.01267 *  
SibSp           -0.701804   0.162641  -4.315 1.60e-05 ***
Parch           -0.379574   0.143193  -2.651  0.00803 ** 
with_familyyes   0.837755   0.285852   2.931  0.00338 ** 
Age_GroupBaby    1.963868   0.643506   3.052  0.00227 ** 
Age_GroupKid     1.166658   0.564569   2.066  0.03879 *  
Age_GroupTeen   -0.327979   0.383784  -0.855  0.39278    
---
Signif. codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 1186.7  on 890  degrees of freedom
Residual deviance:  766.8  on 880  degrees of freedom
AIC: 788.8

Number of Fisher Scoring iterations: 5

> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Prediction
> predict_survival <- round(predict(lm_survival_model,
+                                   titanic_test,type =  "response"))
> titanic_test$Survived <- predict_survival
> table(titanic_test$Survived)

  0   1 
264 154 
> 
> 
> ## ----comment=NA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Write the Final Solution
> final_solution <- titanic_test%>%
+                   select(PassengerId,Survived)
> #write.csv(final_solution, file = 'Final_Solution.csv', row.names = F)
> 
> 
> proc.time()
   user  system elapsed 
  1.395   0.079   1.473 
