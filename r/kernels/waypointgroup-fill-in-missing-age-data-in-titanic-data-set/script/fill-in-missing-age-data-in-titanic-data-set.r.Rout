
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # Load the libraries
> library(readr) # CSV file I/O, e.g. the read_csv function
> library(tidyverse) # ggplot and others
â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.0 â”€â”€
[32mâœ“[39m [34mggplot2[39m 3.3.2     [32mâœ“[39m [34mdplyr  [39m 1.0.2
[32mâœ“[39m [34mtibble [39m 3.0.1     [32mâœ“[39m [34mstringr[39m 1.4.0
[32mâœ“[39m [34mtidyr  [39m 1.1.0     [32mâœ“[39m [34mforcats[39m 0.5.0
[32mâœ“[39m [34mpurrr  [39m 0.3.4     
â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
[31mx[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
[31mx[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()
Warning messages:
1: package â€˜ggplot2â€™ was built under R version 3.6.2 
2: package â€˜tibbleâ€™ was built under R version 3.6.2 
3: package â€˜tidyrâ€™ was built under R version 3.6.2 
4: package â€˜purrrâ€™ was built under R version 3.6.2 
5: package â€˜dplyrâ€™ was built under R version 3.6.2 
> 
> # Read the files
> train.data <- read_csv("../input/train.csv")
Parsed with column specification:
cols(
  PassengerId = [32mcol_double()[39m,
  Survived = [32mcol_double()[39m,
  Pclass = [32mcol_double()[39m,
  Name = [31mcol_character()[39m,
  Sex = [31mcol_character()[39m,
  Age = [32mcol_double()[39m,
  SibSp = [32mcol_double()[39m,
  Parch = [32mcol_double()[39m,
  Ticket = [31mcol_character()[39m,
  Fare = [32mcol_double()[39m,
  Cabin = [31mcol_character()[39m,
  Embarked = [31mcol_character()[39m
)
> test.data <- read_csv("../input/test.csv")
Parsed with column specification:
cols(
  PassengerId = [32mcol_double()[39m,
  Pclass = [32mcol_double()[39m,
  Name = [31mcol_character()[39m,
  Sex = [31mcol_character()[39m,
  Age = [32mcol_double()[39m,
  SibSp = [32mcol_double()[39m,
  Parch = [32mcol_double()[39m,
  Ticket = [31mcol_character()[39m,
  Fare = [32mcol_double()[39m,
  Cabin = [31mcol_character()[39m,
  Embarked = [31mcol_character()[39m
)
> 
> # Combine the files
> train.data$file <- "Train"
> test.data$file <- "Test"
> test.data$Survived <- "NA"
> data <- rbind(train.data,test.data)
> rm(test.data,train.data)
> 
> #
> # Find columns with missing data
> #
> attach(data)
> missing <- list(Pclass=nrow(data[is.na(Pclass), ]))
> missing$Name <- nrow(data[is.na(Name), ])
> missing$Sex <- nrow(data[is.na(Sex), ])
> missing$Age <- nrow(data[is.na(Age), ])
> missing$Fare <- nrow(data[is.na(Fare), ])
> missing$Cabin <- nrow(data[is.na(Cabin), ])
> missing$Embarked <- nrow(data[is.na(Embarked), ])
> detach(data)
> 
> # Print out the columns with missing data
> 
> for (name in names(missing)){
+   if (missing[[name]][1] > 0){
+     print(paste('',name,' miss ',missing[[name]][1],' values',sep=''))
+   }
+ }
[1] "Age miss 263 values"
[1] "Fare miss 1 values"
[1] "Cabin miss 1014 values"
[1] "Embarked miss 2 values"
> 
> rm(name)
> 
> # Seperate titles from name (Code from Huijun Zhao)
> data$Title <- gsub('(.*, )|(\\..*)','',data$Name)
> 
> # Combine Rare Titles. 
> 
> rareTitle <- c('Dona','Lady','the Countess','Capt','Col','Don','Dr','Major','Rev','Sir','Jonkheer')
> data$Title[data$Title %in% rareTitle] <- 'Rare Title'
> rm(rareTitle)
> 
> #We count titles like Mlle, Ms all as Miss.
> data$Title[data$Title=='Mlle'] <- 'Miss'
> data$Title[data$Title=='Ms'] <- 'Miss'
> data$Title[data$Title=='Mme'] <- 'Mrs'
> 
> table(as.character(data$Sex), data$Title)
        
         Master Miss  Mr Mrs Rare Title
  female      0  264   0 198          4
  male       61    0 757   0         25
> 
> data <- data %>%mutate(
+   Title = factor(Title))
> 
> 
> # Introduce a value for Family size (based on SibSp and Parch)
> data$FamilySize <- data$SibSp + data$Parch +1
> 
> # Format relevent parameters as factors 
> data <- data %>%mutate(
+   Survived = factor(Survived),
+   Pclass = factor(Pclass),
+   FamilySize = factor(FamilySize),
+   Embarked = factor(Embarked),
+   Sex = factor(Sex),
+   file = factor(file)  
+ )
> 
> # Function to find the rows with missing age value.  
> # Note that these records don't have other missing data.
> 
> getMissingRows <- function(total_data,column.with.gaps){
+   missingrows <- integer(0)
+   count <- 0
+   for (i in 1:nrow(total_data)){
+     if(is.na(total_data[i,column.with.gaps])){
+       count <- count+1
+       missingrows[count] <- i
+       
+     }
+   }
+   print(paste(column.with.gaps,"has",count,"record(s) with a missing value"))
+   return(missingrows)
+ }
> MissingAge <- getMissingRows(data,"Age")
[1] "Age has 263 record(s) with a missing value"
> age.gaps <- data[MissingAge,]
> summary(age.gaps)
  PassengerId     Survived Pclass      Name               Sex     
 Min.   :   6.0   0 :125   1: 39   Length:263         female: 78  
 1st Qu.: 335.5   1 : 52   2: 16   Class :character   male  :185  
 Median : 630.0   NA: 86   3:208   Mode  :character               
 Mean   : 653.6                                                   
 3rd Qu.: 999.5                                                   
 Max.   :1309.0                                                   
                                                                  
      Age          SibSp            Parch           Ticket         
 Min.   : NA   Min.   :0.0000   Min.   :0.0000   Length:263        
 1st Qu.: NA   1st Qu.:0.0000   1st Qu.:0.0000   Class :character  
 Median : NA   Median :0.0000   Median :0.0000   Mode  :character  
 Mean   :NaN   Mean   :0.4829   Mean   :0.2433                     
 3rd Qu.: NA   3rd Qu.:0.0000   3rd Qu.:0.0000                     
 Max.   : NA   Max.   :8.0000   Max.   :9.0000                     
 NA's   :263                                                       
      Fare           Cabin           Embarked    file            Title    
 Min.   :  0.00   Length:263         C: 58    Test : 86   Master    :  8  
 1st Qu.:  7.75   Class :character   Q: 73    Train:177   Miss      : 51  
 Median :  8.05   Mode  :character   S:132                Mr        :176  
 Mean   : 19.82                                           Mrs       : 27  
 3rd Qu.: 22.80                                           Rare Title:  1  
 Max.   :227.53                                                           
                                                                          
   FamilySize 
 1      :200  
 2      : 29  
 3      : 15  
 11     : 10  
 5      :  5  
 4      :  4  
 (Other):  0  
> 
> # Find all the variables that might predict age
> # Deliberately ignore survived as a feature
> features <- c("Age",
+               "PassengerId",
+               "Pclass",
+               "Sex",
+               "SibSp",
+               "Parch",
+               "FamilySize",
+               "Fare",
+               "Embarked",
+               "Title")
> age.data <- subset(data,select=features)
> # Store the missing age records in a seperate df
> missing.age.data <- age.data[is.na(age.data$Age),]
> #
> # Establish a clean dataset for an age model
> #
> # Remove NA records
> age.data <- age.data[!is.na(age.data$Age),]
> age.data <- age.data[!is.na(age.data$Embarked),]
> age.data <- age.data[!is.na(age.data$Fare),]
> 
> # split this model into 33% test data and 66%train
> set.seed(2)
> train=sample(c(TRUE,TRUE,FALSE),nrow(age.data),replace = TRUE)
> test=(!train)
> # Have a look at the three sets to make sure that they are broadly similar
> summary(missing.age.data)
      Age       PassengerId     Pclass      Sex          SibSp       
 Min.   : NA   Min.   :   6.0   1: 39   female: 78   Min.   :0.0000  
 1st Qu.: NA   1st Qu.: 335.5   2: 16   male  :185   1st Qu.:0.0000  
 Median : NA   Median : 630.0   3:208                Median :0.0000  
 Mean   :NaN   Mean   : 653.6                        Mean   :0.4829  
 3rd Qu.: NA   3rd Qu.: 999.5                        3rd Qu.:0.0000  
 Max.   : NA   Max.   :1309.0                        Max.   :8.0000  
 NA's   :263                                                         
     Parch          FamilySize       Fare        Embarked        Title    
 Min.   :0.0000   1      :200   Min.   :  0.00   C: 58    Master    :  8  
 1st Qu.:0.0000   2      : 29   1st Qu.:  7.75   Q: 73    Miss      : 51  
 Median :0.0000   3      : 15   Median :  8.05   S:132    Mr        :176  
 Mean   :0.2433   11     : 10   Mean   : 19.82            Mrs       : 27  
 3rd Qu.:0.0000   5      :  5   3rd Qu.: 22.80            Rare Title:  1  
 Max.   :9.0000   4      :  4   Max.   :227.53                            
                  (Other):  0                                             
> summary(age.data[train,])
      Age         PassengerId     Pclass      Sex          SibSp       
 Min.   : 0.17   Min.   :   1.0   1:194   female:255   Min.   :0.0000  
 1st Qu.:21.00   1st Qu.: 315.0   2:181   male  :452   1st Qu.:0.0000  
 Median :28.00   Median : 653.0   3:332                Median :0.0000  
 Mean   :29.76   Mean   : 645.1                        Mean   :0.4851  
 3rd Qu.:38.00   3rd Qu.: 964.5                        3rd Qu.:1.0000  
 Max.   :80.00   Max.   :1307.0                        Max.   :8.0000  
                                                                       
     Parch          FamilySize       Fare        Embarked        Title    
 Min.   :0.0000   1      :406   Min.   :  0.00   C:138    Master    : 35  
 1st Qu.:0.0000   2      :140   1st Qu.:  8.05   Q: 35    Miss      :134  
 Median :0.0000   3      : 93   Median : 15.50   S:534    Mr        :403  
 Mean   :0.4031   4      : 28   Mean   : 35.30            Mrs       :118  
 3rd Qu.:1.0000   6      : 15   3rd Qu.: 33.51            Rare Title: 17  
 Max.   :6.0000   7      : 11   Max.   :512.33                            
                  (Other): 14                                             
> summary(age.data[test,])
      Age         PassengerId     Pclass      Sex          SibSp       
 Min.   : 0.75   Min.   :   2.0   1: 88   female:131   Min.   :0.0000  
 1st Qu.:21.00   1st Qu.: 348.5   2: 80   male  :205   1st Qu.:0.0000  
 Median :28.00   Median : 685.0   3:168                Median :0.0000  
 Mean   :29.93   Mean   : 677.0                        Mean   :0.5446  
 3rd Qu.:40.00   3rd Qu.: 992.2                        3rd Qu.:1.0000  
 Max.   :67.00   Max.   :1298.0                        Max.   :5.0000  
                                                                       
     Parch          FamilySize       Fare        Embarked        Title    
 Min.   :0.0000   1      :181   Min.   :  0.00   C: 74    Master    : 18  
 1st Qu.:0.0000   2      : 66   1st Qu.:  8.05   Q: 15    Miss      : 78  
 Median :0.0000   3      : 51   Median : 16.10   S:247    Mr        :177  
 Mean   :0.4613   4      : 11   Mean   : 39.35            Mrs       : 52  
 3rd Qu.:1.0000   6      : 10   3rd Qu.: 39.00            Rare Title: 11  
 Max.   :6.0000   5      :  9   Max.   :512.33                            
                  (Other):  8                                             
> attach(age.data)
> 
> # Scatterplot 
> pairs(Age~.,data=age.data)
> 
> # Age versus Title
> age.data %>%
+   ggplot(aes(x=Age, color = Title)) +
+   ggtitle("Age vs. Title\n") +
+   geom_density(size = 1.5)
> 
> # Age versus Pclass
> age.data %>%
+   ggplot(aes(x=Age, color = Pclass)) +
+   ggtitle("Age vs. Pclass\n") +
+   geom_density(size = 1.5)
> 
> # Age versus Fare
> ggplot(age.data) +
+   ggtitle("Age vs. Fare\n") +
+   geom_point(mapping = aes(x=Age, y=Fare)) 
> 
> # Age versus Parch
> ggplot(age.data) +
+   ggtitle("Age vs. Parch\n") +
+   geom_point(mapping = aes(x=Age, y=Parch)) 
> 
> # Age versus SibSp
> ggplot(age.data) +
+   ggtitle("Age vs. SibSp\n") +
+   geom_point(mapping = aes(x=Age, y=SibSp)) 
> 
> # Age versus Family Size
> age.data %>%
+   ggplot(aes(x=Age, color = FamilySize)) +
+   ggtitle("Age vs. Family Size\n") +
+   geom_density(size = 1.5)
Warning messages:
1: Groups with fewer than two data points have been dropped. 
2: In max(ids, na.rm = TRUE) :
  no non-missing arguments to max; returning -Inf
> 
> # Age versus Sex
> age.data %>%
+   ggplot(aes(x=Age, color = Sex)) +
+   ggtitle("Age vs. Sex\n") +
+   geom_density(size = 1.5)
> 
> # Age versus Embarked
> age.data %>%
+   ggplot(aes(x=Age, color = Embarked)) +
+   ggtitle("Age vs. Embarked\n") +
+   geom_density(size = 1.5)
> 
> 
> 
> 
> # set dfs to hold the mse for each model alternative
> model.MSE <- data.frame(matrix(vector(), 0, 2)) 
> colnames(model.MSE) <- c("Model","MSE")
> # set up functions to update the MSE df and missing.age.data df with the output of each model
> add.MSE <- function(model.name,MSE.value,model.MSE){
+  i <- nrow(model.MSE)+1
+  model.MSE[i,"Model"] <- model.name
+  model.MSE[i,"MSE"] <- MSE.value
+  return(model.MSE)
+ }  
> #
> add.predictions <- function(model.name,predictions,age.gaps){
+  predictions <- as.data.frame(predictions)
+     colnames(predictions)[1] <- model.name
+  age.gaps <- cbind(age.gaps,predictions)   
+  return(age.gaps)
+ }  
> 
> model.name <- "Linear Model" 
> # Model the training set 
> model <- lm(Age~.,data = age.data[train,])
> summary(model)

Call:
lm(formula = Age ~ ., data = age.data[train, ])

Residuals:
    Min      1Q  Median      3Q     Max 
-27.046  -7.570  -1.043   6.184  45.177 

Coefficients: (1 not defined because of singularities)
                  Estimate Std. Error t value Pr(>|t|)    
(Intercept)      1.683e+01  7.427e+00   2.266 0.023783 *  
PassengerId      4.658e-04  1.114e-03   0.418 0.675923    
Pclass2         -1.065e+01  1.397e+00  -7.619 8.48e-14 ***
Pclass3         -1.428e+01  1.375e+00 -10.388  < 2e-16 ***
Sexmale          6.798e-01  6.979e+00   0.097 0.922432    
SibSp            5.985e-01  1.135e+00   0.527 0.598211    
Parch            1.874e+00  1.349e+00   1.389 0.165328    
FamilySize2     -3.024e+00  1.595e+00  -1.895 0.058454 .  
FamilySize3     -5.542e+00  2.609e+00  -2.124 0.034002 *  
FamilySize4     -1.345e+01  4.062e+00  -3.312 0.000975 ***
FamilySize5     -4.424e+00  5.958e+00  -0.742 0.458081    
FamilySize6     -6.969e+00  6.370e+00  -1.094 0.274334    
FamilySize7     -7.256e+00  7.506e+00  -0.967 0.333996    
FamilySize8     -5.060e+00  9.201e+00  -0.550 0.582552    
FamilySize11            NA         NA      NA       NA    
Fare            -5.231e-03  1.180e-02  -0.443 0.657699    
EmbarkedQ        6.572e+00  2.217e+00   2.964 0.003144 ** 
EmbarkedS        2.523e+00  1.148e+00   2.197 0.028375 *  
TitleMiss        1.301e+01  7.330e+00   1.775 0.076295 .  
TitleMr          2.272e+01  2.206e+00  10.300  < 2e-16 ***
TitleMrs         2.784e+01  7.326e+00   3.799 0.000158 ***
TitleRare Title  2.837e+01  3.636e+00   7.802 2.28e-14 ***
---
Signif. codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1

Residual standard error: 10.92 on 686 degrees of freedom
Multiple R-squared:  0.4299,	Adjusted R-squared:  0.4133 
F-statistic: 25.87 on 20 and 686 DF,  p-value: < 2.2e-16

> plot(model)
Warning messages:
1: not plotting observations with leverage one:
  679 
2: not plotting observations with leverage one:
  679 
> # Predict the ages of the test set 
> predictions <- predict.lm(model,age.data[test,])
Warning message:
In predict.lm(model, age.data[test, ]) :
  prediction from a rank-deficient fit may be misleading
> # Calculate the MSE 
> MSE <- mean((age.data$Age[test]-predictions)^2)
> # Predict the ages for the missing rows 
> predictions <- predict.lm(model,missing.age.data)
Warning message:
In predict.lm(model, missing.age.data) :
  prediction from a rank-deficient fit may be misleading
> # Update our summaries
> model.MSE <- add.MSE(model.name,MSE,model.MSE)
> age.gaps <- add.predictions(model.name,predictions,age.gaps)
> 
> ### Tree Model
> 
> model.name <- "Tree" 
> library(tree)
Error in library(tree) : there is no package called â€˜treeâ€™
Execution halted
