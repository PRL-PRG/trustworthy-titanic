
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # This R script will run on our backend. You can write arbitrary code here!
> 
> # Many standard libraries are already installed, such as randomForest
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.
> library(party)
Loading required package: grid
Loading required package: mvtnorm
Loading required package: modeltools
Loading required package: stats4
Loading required package: strucchange
Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

Loading required package: sandwich
Warning messages:
1: package ‘party’ was built under R version 3.6.2 
2: package ‘zoo’ was built under R version 3.6.2 
> library(grid)
> library(mvtnorm)
> library(modeltools)
> library(stats4)
> library(strucchange)
> library(zoo)
> library(sandwich)
> 
> # The train and test data is stored in the ../input directory
> train <- read.csv("../input/train.csv")
> test  <- read.csv("../input/test.csv")
> 
> test$Survived <- NA
> combi <- rbind(train, test)
> combi$Name <- as.character(combi$Name)
> combi$Title <- sapply(combi$Name, FUN = function(x){strsplit(x, split = '[,.]')[[1]][2]})
> combi$Title <- sub(' ','',combi$Title)
> table(combi$Title)

        Capt          Col          Don         Dona           Dr     Jonkheer 
           1            4            1            1            8            1 
        Lady        Major       Master         Miss         Mlle          Mme 
           1            2           61          260            2            1 
          Mr          Mrs           Ms          Rev          Sir the Countess 
         757          197            2            8            1            1 
> combi$Title[combi$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
> combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
> combi$Title[combi$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'
> combi$Title <- factor(combi$Title)
> combi$FamilySize <- combi$SibSp + combi$Parch + 1
> combi$Surname <- sapply(combi$Name, FUN = function(x){strsplit(x, split = '[,.]')[[1]][1]})
> combi$FamilyId <- paste(as.character(combi$FamilySize), combi$Surname, sep = '')
> combi$FamilyId[combi$FamilySize <= 2] <- 'Small'
> famId <- data.frame(table(combi$FamilyId))
> famId <- famId[famId$Freq <= 2, ]
> combi$FamilyId[combi$FamilyId %in% famId$Var1] <- 'Small'
> combi$FamilyId <- factor(combi$FamilyId)
> train <- combi[1:891,]
> test <- combi[892:1309,]
> fit <- cforest(as.factor(Survived) ~ Pclass + Sex + Age + Fare + Title + FamilySize + FamilyId + Ticket,data = train,controls=cforest_unbiased(ntree=2000, mtry=3))
