
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(mice) #For Missing Value imputation

Attaching package: ‘mice’

The following objects are masked from ‘package:base’:

    cbind, rbind

Warning message:
package ‘mice’ was built under R version 3.6.2 
> library(MASS) 
> library(ggplot2)
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(grid)
> library(gridExtra)
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:gridExtra’:

    combine

The following object is masked from ‘package:ggplot2’:

    margin

> library(e1071)
> library(caret)
Loading required package: lattice
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> input=read.csv("../input/train.csv",stringsAsFactors = FALSE)
> str(input)
'data.frame':	891 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> head(input)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked
1        A/5 21171  7.2500              S
2         PC 17599 71.2833   C85        C
3 STON/O2. 3101282  7.9250              S
4           113803 53.1000  C123        S
5           373450  8.0500              S
6           330877  8.4583              Q
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> summary(input)
  PassengerId       Survived          Pclass          Name          
 Min.   :  1.0   Min.   :0.0000   Min.   :1.000   Length:891        
 1st Qu.:223.5   1st Qu.:0.0000   1st Qu.:2.000   Class :character  
 Median :446.0   Median :0.0000   Median :3.000   Mode  :character  
 Mean   :446.0   Mean   :0.3838   Mean   :2.309                     
 3rd Qu.:668.5   3rd Qu.:1.0000   3rd Qu.:3.000                     
 Max.   :891.0   Max.   :1.0000   Max.   :3.000                     
                                                                    
     Sex                 Age            SibSp           Parch       
 Length:891         Min.   : 0.42   Min.   :0.000   Min.   :0.0000  
 Class :character   1st Qu.:20.12   1st Qu.:0.000   1st Qu.:0.0000  
 Mode  :character   Median :28.00   Median :0.000   Median :0.0000  
                    Mean   :29.70   Mean   :0.523   Mean   :0.3816  
                    3rd Qu.:38.00   3rd Qu.:1.000   3rd Qu.:0.0000  
                    Max.   :80.00   Max.   :8.000   Max.   :6.0000  
                    NA's   :177                                     
    Ticket               Fare           Cabin             Embarked        
 Length:891         Min.   :  0.00   Length:891         Length:891        
 Class :character   1st Qu.:  7.91   Class :character   Class :character  
 Mode  :character   Median : 14.45   Mode  :character   Mode  :character  
                    Mean   : 32.20                                        
                    3rd Qu.: 31.00                                        
                    Max.   :512.33                                        
                                                                          
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> input[input==""]=NA
> print("Total count of missing values in each column:")
[1] "Total count of missing values in each column:"
> apply(apply(input,2,is.na),2,sum)
PassengerId    Survived      Pclass        Name         Sex         Age 
          0           0           0           0           0         177 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           0         687           2 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> input$Title <- gsub('(.*, )|(\\..*)', '', input$Name)
> table(input$Title)

        Capt          Col          Don           Dr     Jonkheer         Lady 
           1            2            1            7            1            1 
       Major       Master         Miss         Mlle          Mme           Mr 
           2           40          182            2            1          517 
         Mrs           Ms          Rev          Sir the Countess 
         125            1            6            1            1 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', 
+                 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
> 
> # Also reassign mlle, ms, and mme accordingly
> input$Title[input$Title == 'Mlle']        <- 'Miss' 
> input$Title[input$Title == 'Ms']          <- 'Miss'
> input$Title[input$Title == 'Mme']         <- 'Mrs' 
> input$Title[input$Title %in% rare_title]  <- 'Others'
> head(input)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked Title
1        A/5 21171  7.2500  <NA>        S    Mr
2         PC 17599 71.2833   C85        C   Mrs
3 STON/O2. 3101282  7.9250  <NA>        S  Miss
4           113803 53.1000  C123        S   Mrs
5           373450  8.0500  <NA>        S    Mr
6           330877  8.4583  <NA>        Q    Mr
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> input$Deck=substr(input$Cabin,1,1)
> input$fsize=input$SibSp+input$Parch
> input$with_family=ifelse(input$fsize==0,0,1)
> head(input)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked Title Deck fsize with_family
1        A/5 21171  7.2500  <NA>        S    Mr <NA>     1           1
2         PC 17599 71.2833   C85        C   Mrs    C     1           1
3 STON/O2. 3101282  7.9250  <NA>        S  Miss <NA>     0           0
4           113803 53.1000  C123        S   Mrs    C     1           1
5           373450  8.0500  <NA>        S    Mr <NA>     0           0
6           330877  8.4583  <NA>        Q    Mr <NA>     0           0
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> input_features=input[,c("Survived","Pclass","Sex","Age","SibSp","Parch","Fare","Embarked","Title","Deck","fsize","with_family")]
> factor_vars <- c("Survived","Pclass","Sex","Embarked","Title","Deck","with_family")
> input_features[factor_vars] <- lapply(input_features[factor_vars], function(x) as.factor(x))
> str(input_features)
'data.frame':	891 obs. of  12 variables:
 $ Survived   : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ Title      : Factor w/ 5 levels "Master","Miss",..: 3 4 2 4 3 3 3 1 4 4 ...
 $ Deck       : Factor w/ 8 levels "A","B","C","D",..: NA 3 NA 3 NA NA 5 NA NA NA ...
 $ fsize      : int  1 1 0 1 0 0 0 4 2 1 ...
 $ with_family: Factor w/ 2 levels "0","1": 2 2 1 2 1 1 1 2 2 2 ...
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> set.seed(129)
> imp=mice(input_features,m=5, meth='rf')

 iter imp variable
  1   1  Age  Embarked  Deck
  1   2  Age  Embarked  Deck
  1   3  Age  Embarked  Deck
  1   4  Age  Embarked  Deck
  1   5  Age  Embarked  Deck
  2   1  Age  Embarked  Deck
  2   2  Age  Embarked  Deck
  2   3  Age  Embarked  Deck
  2   4  Age  Embarked  Deck
  2   5  Age  Embarked  Deck
  3   1  Age  Embarked  Deck
  3   2  Age  Embarked  Deck
  3   3  Age  Embarked  Deck
  3   4  Age  Embarked  Deck
  3   5  Age  Embarked  Deck
  4   1  Age  Embarked  Deck
  4   2  Age  Embarked  Deck
  4   3  Age  Embarked  Deck
  4   4  Age  Embarked  Deck
  4   5  Age  Embarked  Deck
  5   1  Age  Embarked  Deck
  5   2  Age  Embarked  Deck
  5   3  Age  Embarked  Deck
  5   4  Age  Embarked  Deck
  5   5  Age  Embarked  Deck
Warning message:
Number of logged events: 75 
> dat=complete(imp)
> summary(imp)
Class: mids
Number of multiple imputations:  5 
Imputation methods:
   Survived      Pclass         Sex         Age       SibSp       Parch 
         ""          ""          ""        "rf"          ""          "" 
       Fare    Embarked       Title        Deck       fsize with_family 
         ""        "rf"          ""        "rf"          ""          "" 
PredictorMatrix:
         Survived Pclass Sex Age SibSp Parch Fare Embarked Title Deck fsize
Survived        0      1   1   1     1     1    1        1     1    1     1
Pclass          1      0   1   1     1     1    1        1     1    1     1
Sex             1      1   0   1     1     1    1        1     1    1     1
Age             1      1   1   0     1     1    1        1     1    1     1
SibSp           1      1   1   1     0     1    1        1     1    1     1
Parch           1      1   1   1     1     0    1        1     1    1     1
         with_family
Survived           1
Pclass             1
Sex                1
Age                1
SibSp              1
Parch              1
Number of logged events:  75 
  it im      dep meth   out
1  1  1      Age   rf fsize
2  1  1 Embarked   rf fsize
3  1  1     Deck   rf fsize
4  1  2      Age   rf fsize
5  1  2 Embarked   rf fsize
6  1  2     Deck   rf fsize
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> print("Total number of missing values in each column")
[1] "Total number of missing values in each column"
> apply(apply(dat,2,is.na),2,sum)
   Survived      Pclass         Sex         Age       SibSp       Parch 
          0           0           0           0           0           0 
       Fare    Embarked       Title        Deck       fsize with_family 
          0           0           0           0           0           0 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> par(mfrow =c(1,2))
> hist(input_features$Age,main= "Before imputation")
> hist(dat$Age,main="After imputation")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> par(mfrow =c(1,3))
> hist(dat$Age)
> hist(dat$Fare)
> hist(dat$fsize)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> p21=ggplot(dat, aes(Sex, fill = factor(Survived))) + geom_histogram(stat="count")
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> p22=ggplot(dat, aes(Sex, fill = factor(Survived))) + geom_bar(position="fill")+labs(y="Proportion")
> grid.arrange(p21,p22, ncol = 2)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> p11=ggplot(dat, aes(Pclass, fill = factor(Survived))) + geom_histogram(stat="count")
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> p12=ggplot(dat, aes(Pclass, fill = factor(Survived))) + geom_bar(position="fill")+labs(y="Proportion")
> grid.arrange(p11,p12, ncol = 2)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot(dat, aes(Embarked, fill = factor(Survived))) + geom_histogram(stat="count")
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> p41=ggplot(dat, aes(Deck, fill = factor(Survived))) + geom_histogram(stat="count")
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> p42=ggplot(dat, aes(Deck, fill = factor(Survived))) + geom_bar(position="fill")+labs(y="Proportion")
> grid.arrange(p41,p42, ncol = 2)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> p51=ggplot(dat, aes(Title, fill = factor(Survived))) + geom_histogram(stat="count")
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> p52=ggplot(dat, aes(Title, fill = factor(Survived))) + geom_bar(position="fill")+labs(y="Proportion")
> grid.arrange(p51,p52, ncol = 2)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> p61=ggplot(dat, aes(with_family, fill = factor(Survived))) + geom_histogram(stat="count")
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> p62=ggplot(dat, aes(with_family, fill = factor(Survived))) + geom_bar(position="fill")+labs(y="Proportion")
> p63=ggplot(dat, aes(fsize, fill = factor(Survived))) + geom_histogram(stat="count")
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> p64=ggplot(dat, aes(fsize, fill = factor(Survived))) + geom_bar(position="fill")+labs(y="Proportion")
> grid.arrange(p61,p62,p63,p64,ncol = 2)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot(dat, aes(Survived, fill = factor(Survived))) + geom_histogram(stat="count") + facet_grid(Embarked~Pclass)#
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot(dat, aes(Survived, fill = factor(Survived))) + geom_histogram(stat="count") + facet_grid(Deck~Pclass)#
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> chisq.test(dat$Survived,dat$Pclass)

	Pearson's Chi-squared test

data:  dat$Survived and dat$Pclass
X-squared = 102.89, df = 2, p-value < 2.2e-16

> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> set.seed(123)
> train_size=floor(0.70*nrow(dat))
> train_ind=sample(seq_len(nrow(dat)),size = train_size)
> train=dat[train_ind,]
> test=dat[-train_ind,]
> print("Train dataset dimension:")
[1] "Train dataset dimension:"
> dim(train)
[1] 623  12
> print("Test dataset Dimension:")
[1] "Test dataset Dimension:"
> dim(test)
[1] 268  12
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> rf.model=randomForest(Survived~.,data = train,importance=TRUE)
> rf.model

Call:
 randomForest(formula = Survived ~ ., data = train, importance = TRUE) 
               Type of random forest: classification
                     Number of trees: 500
No. of variables tried at each split: 3

        OOB estimate of  error rate: 17.82%
Confusion matrix:
    0   1 class.error
0 345  36  0.09448819
1  75 167  0.30991736
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> varImpPlot(rf.model)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> rf.pred=predict(rf.model,newdata=test)
> rf.pred
  1   3   4   7   9  12  15  17  18  22  25  27  28  32  35  42  43  44  50  53 
  0   1   1   0   1   1   1   0   0   0   0   0   0   1   0   1   0   1   0   1 
 58  60  62  63  66  68  70  73  75  77  82  86  92  93  97  99 101 102 107 109 
  0   0   1   0   1   0   0   0   0   0   0   0   0   0   0   1   1   0   1   0 
114 123 126 133 140 142 144 145 146 147 149 150 154 157 172 173 176 182 183 192 
  0   0   1   0   1   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0 
194 198 208 213 214 215 216 230 233 245 247 248 249 253 254 256 257 266 269 272 
  1   0   0   0   0   0   1   0   0   0   1   1   0   0   0   0   1   0   1   0 
283 285 293 296 298 300 307 313 318 321 324 325 327 329 332 333 335 341 351 356 
  0   0   0   0   1   1   1   1   0   0   1   0   0   1   0   0   1   1   0   0 
359 361 363 365 366 369 370 372 375 376 380 383 385 387 394 405 406 407 410 414 
  1   0   1   0   0   1   1   0   0   1   0   0   0   0   1   1   0   0   0   0 
419 423 425 427 432 433 434 435 436 438 440 442 443 449 451 453 454 460 462 469 
  0   0   0   1   1   1   0   0   1   1   0   0   1   1   0   1   0   0   0   0 
471 472 478 481 484 487 491 492 495 497 502 503 505 510 513 517 520 521 525 527 
  0   0   0   0   0   1   0   0   0   1   1   1   1   0   1   1   0   1   0   1 
531 532 533 536 547 550 552 558 559 562 565 568 570 576 577 582 583 584 586 587 
  1   0   0   1   1   1   0   1   1   0   0   0   0   0   1   1   0   1   1   0 
594 599 604 607 612 615 616 620 625 631 634 641 642 644 647 652 654 655 658 661 
  1   0   0   0   0   0   1   0   0   0   0   0   1   0   0   1   1   1   1   0 
664 668 673 674 675 681 684 688 689 690 692 694 697 698 705 707 708 713 715 716 
  0   0   0   0   0   1   0   0   0   1   1   0   0   1   0   1   1   0   0   0 
718 719 720 721 725 734 741 743 745 748 750 757 760 765 770 773 776 778 780 781 
  1   0   0   1   0   0   0   1   0   1   0   0   1   0   0   1   0   1   1   1 
783 785 786 790 793 796 802 803 804 811 815 817 823 825 830 837 845 847 850 858 
  1   0   0   1   0   0   1   1   1   0   0   1   0   0   1   0   0   0   1   0 
859 861 863 864 879 881 885 889 
  1   0   1   0   0   1   0   1 
Levels: 0 1
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> confusionMatrix(rf.pred,test$Survived)
Confusion Matrix and Statistics

          Reference
Prediction   0   1
         0 144  25
         1  24  75
                                          
               Accuracy : 0.8172          
                 95% CI : (0.7656, 0.8616)
    No Information Rate : 0.6269          
    P-Value [Acc > NIR] : 9.218e-12       
                                          
                  Kappa : 0.6084          
                                          
 Mcnemar's Test P-Value : 1               
                                          
            Sensitivity : 0.8571          
            Specificity : 0.7500          
         Pos Pred Value : 0.8521          
         Neg Pred Value : 0.7576          
             Prevalence : 0.6269          
         Detection Rate : 0.5373          
   Detection Prevalence : 0.6306          
      Balanced Accuracy : 0.8036          
                                          
       'Positive' Class : 0               
                                          
> 
> 
> proc.time()
   user  system elapsed 
 21.411   0.626  22.179 
