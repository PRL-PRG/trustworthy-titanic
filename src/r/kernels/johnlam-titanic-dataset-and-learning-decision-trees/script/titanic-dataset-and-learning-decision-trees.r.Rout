
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> 
> # Read the raw data
> train <- read.csv("../input/train.csv")
> test <- read.csv("../input/test.csv")
> 
> # Look at the dimensions of the datasets
> dim(train)
[1] 891  12
> dim(test)
[1] 418  11
> 
> # Generate a combined dataset for cross validation
> # Note initial errors about coercing factors to characters
> full <- bind_rows(train, test)
> dim(full)
[1] 1309   12
> 
> head(full)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked
1        A/5 21171  7.2500              S
2         PC 17599 71.2833   C85        C
3 STON/O2. 3101282  7.9250              S
4           113803 53.1000  C123        S
5           373450  8.0500              S
6           330877  8.4583              Q
> 
> # These don't seem to work, as the Kaggle kernel doesn't allow insertion of arbirary HTML from
> # packages like googleVis.
> 
> # suppressPackageStartupMessages(library(googleVis))
> # gvisTable(train)
> 
> str(train)
'data.frame':	891 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : Factor w/ 891 levels "Abbing, Mr. Anthony",..: 109 191 358 277 16 559 520 629 417 581 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 148 levels "","A10","A14",..: 1 83 1 57 1 1 131 1 1 1 ...
 $ Embarked   : Factor w/ 4 levels "","C","Q","S": 4 2 4 4 4 3 4 4 4 2 ...
> head(train)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked
1        A/5 21171  7.2500              S
2         PC 17599 71.2833   C85        C
3 STON/O2. 3101282  7.9250              S
4           113803 53.1000  C123        S
5           373450  8.0500              S
6           330877  8.4583              Q
> 
> str(test)
'data.frame':	418 obs. of  11 variables:
 $ PassengerId: int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass     : int  3 3 2 3 3 3 3 2 3 3 ...
 $ Name       : Factor w/ 418 levels "Abbott, Master. Eugene Joseph",..: 210 409 273 414 182 370 85 58 5 104 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age        : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp      : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch      : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket     : Factor w/ 363 levels "110469","110489",..: 153 222 74 148 139 262 159 85 101 270 ...
 $ Fare       : num  7.83 7 9.69 8.66 12.29 ...
 $ Cabin      : Factor w/ 77 levels "","A11","A18",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 2 3 2 3 3 3 2 3 1 3 ...
> head(test)
  PassengerId Pclass                                         Name    Sex  Age
1         892      3                             Kelly, Mr. James   male 34.5
2         893      3             Wilkes, Mrs. James (Ellen Needs) female 47.0
3         894      2                    Myles, Mr. Thomas Francis   male 62.0
4         895      3                             Wirz, Mr. Albert   male 27.0
5         896      3 Hirvonen, Mrs. Alexander (Helga E Lindqvist) female 22.0
6         897      3                   Svensson, Mr. Johan Cervin   male 14.0
  SibSp Parch  Ticket    Fare Cabin Embarked
1     0     0  330911  7.8292              Q
2     1     0  363272  7.0000              S
3     0     0  240276  9.6875              Q
4     0     0  315154  8.6625              S
5     1     1 3101298 12.2875              S
6     0     0    7538  9.2250              S
> 
> library(rpart)
> 
> decision_tree <- rpart(
+     Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, 
+     data = train, 
+     method = "class")
> 
> # Load the packages to build the fancy plot
> library(rattle)
Loading required package: tibble
Loading required package: bitops
Rattle: A free graphical interface for data science with R.
Version 5.4.0 Copyright (c) 2006-2020 Togaware Pty Ltd.
Type 'rattle()' to shake, rattle, and roll your data.
Warning messages:
1: package ‘rattle’ was built under R version 3.6.2 
2: package ‘tibble’ was built under R version 3.6.2 
> library(rpart.plot)
> library(RColorBrewer)
> 
> # Plot the tree
> fancyRpartPlot(decision_tree)
> 
> prediction_1 <- predict(decision_tree, newdata = test, type = "class")
> solution_1 <- data.frame(PassengerId = test$PassengerId, Survived = prediction_1)
> write.csv(solution_1, file = "my_solution.csv", row.names = FALSE)
> 
> # summary() will give me NAs for numerical values, but we need to treat NA for strings as empty strings
> summary(full)
  PassengerId      Survived          Pclass     
 Min.   :   1   Min.   :0.0000   Min.   :1.000  
 1st Qu.: 328   1st Qu.:0.0000   1st Qu.:2.000  
 Median : 655   Median :0.0000   Median :3.000  
 Mean   : 655   Mean   :0.3838   Mean   :2.295  
 3rd Qu.: 982   3rd Qu.:1.0000   3rd Qu.:3.000  
 Max.   :1309   Max.   :1.0000   Max.   :3.000  
                NA's   :418                     
                               Name          Sex           Age       
 Connolly, Miss. Kate            :   2   female:466   Min.   : 0.17  
 Kelly, Mr. James                :   2   male  :843   1st Qu.:21.00  
 Abbing, Mr. Anthony             :   1                Median :28.00  
 Abbott, Mr. Rossmore Edward     :   1                Mean   :29.88  
 Abbott, Mrs. Stanton (Rosa Hunt):   1                3rd Qu.:39.00  
 Abelson, Mr. Samuel             :   1                Max.   :80.00  
 (Other)                         :1301                NA's   :263    
     SibSp            Parch            Ticket          Fare        
 Min.   :0.0000   Min.   :0.000   CA. 2343:  11   Min.   :  0.000  
 1st Qu.:0.0000   1st Qu.:0.000   1601    :   8   1st Qu.:  7.896  
 Median :0.0000   Median :0.000   CA 2144 :   8   Median : 14.454  
 Mean   :0.4989   Mean   :0.385   3101295 :   7   Mean   : 33.295  
 3rd Qu.:1.0000   3rd Qu.:0.000   347077  :   7   3rd Qu.: 31.275  
 Max.   :8.0000   Max.   :9.000   347082  :   7   Max.   :512.329  
                                  (Other) :1261   NA's   :1        
             Cabin      Embarked
                :1014    :  2   
 C23 C25 C27    :   6   C:270   
 B57 B59 B63 B66:   5   Q:123   
 G6             :   5   S:914   
 B96 B98        :   4           
 C22 C26        :   4           
 (Other)        : 271           
> 
> # identify passenger without fare
> id <- full[which(is.na(full$Fare)), 1]
> full[id,]
     PassengerId Survived Pclass               Name  Sex  Age SibSp Parch
1044        1044       NA      3 Storey, Mr. Thomas male 60.5     0     0
     Ticket Fare Cabin Embarked
1044   3701   NA              S
> 
> # compute what the fare should be by computing the median fare of 3rd class passengers who left from
> # Southhampton
> 
> median_fare <- full %>%
+     filter(Pclass == '3' & Embarked == 'S') %>%
+     summarise(missing_fare = median(Fare, na.rm = TRUE))
> 
> median_fare
  missing_fare
1         8.05
> 
> # characters need special handling as well because it is not obvious
> full$Embarked[full$Embarked == ""] <- NA
> full[which(is.na(full$Embarked)), 1]
[1]  62 830
> 
> full$Cabin[full$Cabin == ""] <- NA
> full[which(is.na(full$Cabin)), 1]
   [1]    1    3    5    6    8    9   10   13   14   15   16   17   18   19
  [15]   20   21   23   25   26   27   29   30   31   33   34   35   36   37
  [29]   38   39   40   41   42   43   44   45   46   47   48   49   50   51
  [43]   52   54   57   58   59   60   61   64   65   66   68   69   70   71
  [57]   72   73   74   75   77   78   79   80   81   82   83   84   85   86
  [71]   87   88   90   91   92   94   95   96   99  100  101  102  104  105
  [85]  106  107  108  109  110  112  113  114  115  116  117  118  120  121
  [99]  122  123  126  127  128  130  131  132  133  134  135  136  139  141
 [113]  142  143  144  145  146  147  148  150  151  153  154  155  156  157
 [127]  158  159  160  161  162  163  164  165  166  168  169  170  172  173
 [141]  174  176  177  179  180  181  182  183  185  187  188  189  190  191
 [155]  192  193  197  198  199  200  201  202  203  204  205  207  208  209
 [169]  211  212  213  214  215  217  218  220  221  222  223  224  226  227
 [183]  228  229  230  232  233  234  235  236  237  238  239  240  241  242
 [197]  243  244  245  247  248  250  251  254  255  256  257  259  260  261
 [211]  262  265  266  267  268  271  272  273  275  277  278  279  280  281
 [225]  282  283  284  286  287  288  289  290  291  294  295  296  297  301
 [239]  302  303  305  307  309  313  314  315  316  317  318  321  322  323
 [253]  324  325  327  329  331  334  335  336  339  343  344  345  347  348
 [267]  349  350  351  353  354  355  356  358  359  360  361  362  363  364
 [281]  365  366  368  369  372  373  374  375  376  377  379  380  381  382
 [295]  383  384  385  386  387  388  389  390  392  393  396  397  398  399
 [309]  400  401  402  403  404  405  406  407  408  409  410  411  412  414
 [323]  415  416  417  418  419  420  421  422  423  424  425  426  427  428
 [337]  429  432  433  434  437  438  440  441  442  443  444  445  447  448
 [351]  449  451  452  455  456  459  460  462  464  465  466  467  468  469
 [365]  470  471  472  473  475  477  478  479  480  481  482  483  484  486
 [379]  489  490  491  492  494  495  496  498  500  501  502  503  504  507
 [393]  508  509  510  511  512  514  515  518  519  520  522  523  525  526
 [407]  527  529  530  531  532  533  534  535  536  538  539  542  543  544
 [421]  546  547  548  549  550  552  553  554  555  556  558  560  561  562
 [435]  563  564  565  566  567  568  569  570  571  574  575  576  577  579
 [449]  580  581  583  585  587  589  590  591  593  594  595  596  597  598
 [463]  599  601  602  603  604  605  606  607  608  609  611  612  613  614
 [477]  615  616  617  618  620  621  623  624  625  627  629  630  632  634
 [491]  635  636  637  638  639  640  641  643  644  645  647  649  650  651
 [505]  652  653  654  655  656  657  658  659  661  662  664  665  666  667
 [519]  668  669  671  673  674  675  676  677  678  679  681  683  684  685
 [533]  686  687  688  689  692  693  694  695  696  697  698  703  704  705
 [547]  706  707  709  710  714  715  719  720  721  722  723  724  726  727
 [561]  728  729  730  732  733  734  735  736  737  739  740  744  745  747
 [575]  748  750  751  753  754  755  756  757  758  759  761  762  763  765
 [589]  767  768  769  770  771  772  774  775  776  778  779  781  784  785
 [603]  786  787  788  789  791  792  793  794  795  796  798  799  800  801
 [617]  802  804  805  806  808  809  811  812  813  814  815  817  818  819
 [631]  820  822  823  825  826  827  828  829  831  832  833  834  835  837
 [645]  838  839  841  842  843  844  845  846  847  848  849  851  852  853
 [659]  855  856  857  859  860  861  862  864  865  866  867  869  870  871
 [673]  874  875  876  877  878  879  881  882  883  884  885  886  887  889
 [687]  891  892  893  894  895  896  897  898  899  900  901  902  903  905
 [701]  907  908  909  910  911  912  913  914  915  917  919  921  922  923
 [715]  924  925  927  928  929  930  931  932  934  935  937  939  941  943
 [729]  944  946  947  948  950  952  953  954  955  957  958  959  962  963
 [743]  964  968  970  971  972  974  975  976  977  978  979  980  981  982
 [757]  983  985  986  987  989  990  991  993  994  995  996  997  998  999
 [771] 1000 1002 1003 1005 1007 1008 1011 1012 1013 1015 1016 1017 1018 1019
 [785] 1020 1021 1022 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1035
 [799] 1036 1037 1039 1040 1041 1043 1044 1045 1046 1047 1049 1051 1052 1053
 [813] 1054 1055 1056 1057 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068
 [827] 1072 1075 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1089
 [841] 1090 1091 1092 1093 1095 1096 1097 1098 1099 1101 1102 1103 1104 1105
 [855] 1106 1108 1109 1111 1112 1113 1115 1116 1117 1118 1119 1120 1121 1122
 [869] 1123 1124 1125 1127 1129 1130 1132 1133 1135 1136 1138 1139 1140 1141
 [883] 1142 1143 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156
 [897] 1157 1158 1159 1160 1161 1163 1165 1166 1167 1168 1169 1170 1171 1172
 [911] 1173 1174 1175 1176 1177 1178 1181 1182 1183 1184 1186 1187 1188 1189
 [925] 1190 1191 1192 1194 1195 1196 1199 1201 1202 1203 1204 1205 1207 1209
 [939] 1210 1211 1212 1215 1216 1217 1219 1220 1221 1222 1224 1225 1226 1228
 [953] 1229 1230 1231 1232 1233 1234 1236 1237 1238 1239 1240 1241 1243 1244
 [967] 1245 1246 1249 1250 1251 1252 1253 1254 1255 1257 1258 1259 1260 1261
 [981] 1262 1265 1267 1268 1269 1271 1272 1273 1274 1275 1276 1277 1278 1279
 [995] 1280 1281 1284 1285 1286 1288 1290 1291 1293 1294 1295 1298 1300 1301
[1009] 1302 1304 1305 1307 1308 1309
> 
> library(caret)
Loading required package: lattice
Loading required package: ggplot2
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> 
> controlParameters <- trainControl(
+     method = "cv",
+     number = 10,
+     repeats = 10,
+     verboseIter = TRUE
+ )
Warning message:
`repeats` has no meaning for this resampling method. 
> 
> decision_tree_model <- train(
+     Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, 
+     data = full,
+     trControl = controlParameters,
+     method = "rpart",
+     na.action = na.omit
+ )
+ Fold01: cp=0.03145 
- Fold01: cp=0.03145 
+ Fold02: cp=0.03145 
- Fold02: cp=0.03145 
+ Fold03: cp=0.03145 
- Fold03: cp=0.03145 
+ Fold04: cp=0.03145 
- Fold04: cp=0.03145 
+ Fold05: cp=0.03145 
- Fold05: cp=0.03145 
+ Fold06: cp=0.03145 
- Fold06: cp=0.03145 
+ Fold07: cp=0.03145 
- Fold07: cp=0.03145 
+ Fold08: cp=0.03145 
- Fold08: cp=0.03145 
+ Fold09: cp=0.03145 
- Fold09: cp=0.03145 
+ Fold10: cp=0.03145 
- Fold10: cp=0.03145 
Aggregating results
Selecting tuning parameters
Fitting cp = 0.0315 on full training set
Warning messages:
1: In train.default(x, y, weights = w, ...) :
  You are trying to do regression and your outcome only has two possible values Are you trying to do classification? If so, use a 2 level factor as your outcome column.
2: In nominalTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo,  :
  There were missing values in resampled performance measures.
> 
> 
> train_1 <- data.frame(train$Pclass, train$Sex, train$Age, train$SibSp, train$Parch, train$Fare, train$Embarked)
> head(train_1)
  train.Pclass train.Sex train.Age train.SibSp train.Parch train.Fare
1            3      male        22           1           0     7.2500
2            1    female        38           1           0    71.2833
3            3    female        26           0           0     7.9250
4            1    female        35           1           0    53.1000
5            3      male        35           0           0     8.0500
6            3      male        NA           0           0     8.4583
  train.Embarked
1              S
2              C
3              S
4              S
5              S
6              Q
> 
> plot(train)
> 
> summary(solution_1)
  PassengerId     Survived
 Min.   : 892.0   0:288   
 1st Qu.: 996.2   1:130   
 Median :1100.5           
 Mean   :1100.5           
 3rd Qu.:1204.8           
 Max.   :1309.0           
> 
> 
> 
> proc.time()
   user  system elapsed 
  2.841   0.229   3.198 
