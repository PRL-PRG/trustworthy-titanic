
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # Very much a work-in-progress
> # I know I can merge then split the datasets
> # to cut down on the duplicate code.
> # and I WILL!
> #
> #
> library(caret)
Loading required package: lattice
Loading required package: ggplot2
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

> library(stringr)
> 
> trainSet <- read.table("../input/train.csv", sep = ",", header = TRUE)
> testSet <- read.table("../input/test.csv", sep = ",", header = TRUE)
> head(trainSet)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked
1        A/5 21171  7.2500              S
2         PC 17599 71.2833   C85        C
3 STON/O2. 3101282  7.9250              S
4           113803 53.1000  C123        S
5           373450  8.0500              S
6           330877  8.4583              Q
> 
> 
> head(testSet)
  PassengerId Pclass                                         Name    Sex  Age
1         892      3                             Kelly, Mr. James   male 34.5
2         893      3             Wilkes, Mrs. James (Ellen Needs) female 47.0
3         894      2                    Myles, Mr. Thomas Francis   male 62.0
4         895      3                             Wirz, Mr. Albert   male 27.0
5         896      3 Hirvonen, Mrs. Alexander (Helga E Lindqvist) female 22.0
6         897      3                   Svensson, Mr. Johan Cervin   male 14.0
  SibSp Parch  Ticket    Fare Cabin Embarked
1     0     0  330911  7.8292              Q
2     1     0  363272  7.0000              S
3     0     0  240276  9.6875              Q
4     0     0  315154  8.6625              S
5     1     1 3101298 12.2875              S
6     0     0    7538  9.2250              S
> 
> 
> table(trainSet[,c("Survived", "Pclass")])
        Pclass
Survived   1   2   3
       0  80  97 372
       1 136  87 119
> 
> ## ----, warning = FALSE, message = FALSE----------------------------------
> # Comparing Age and Survived: The boxplots are very similar between Age
> # for survivors and those who died. 
> library(fields)
Loading required package: spam
Loading required package: dotCall64
Loading required package: grid
Spam version 2.5-1 (2019-12-12) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: maps
See https://github.com/NCAR/Fields for
 an extensive vignette, other supplements and source code 
> bplot.xy(trainSet$Survived, trainSet$Age)
> # Also, there are lots of NA's. Exclude this variable
> ##
> testSet$Nlen <- str_length(testSet$Name)
> trainSet$Nlen <- str_length(trainSet$Name)
> trainSet$Fam <- trainSet$Parch + trainSet$SibSp
> testSet$Fam <- testSet$Parch + testSet$SibSp
> trainSet$Survived <- factor(trainSet$Survived)
> ##
> trainSet$Title<-regmatches(as.character(trainSet$Name),regexpr("\\,[A-z ]{1,20}\\.", as.character(trainSet$Name)))
> trainSet$Title<-unlist(lapply(trainSet$Title,FUN=function(x) substr(x, 3, nchar(x)-1)))
> table(trainSet$Title)

        Capt          Col          Don           Dr     Jonkheer         Lady 
           1            2            1            7            1            1 
       Major       Master         Miss         Mlle          Mme           Mr 
           2           40          182            2            1          517 
         Mrs           Ms          Rev          Sir the Countess 
         125            1            6            1            1 
> trainSet$Title[which(trainSet$Title %in% c("Mme", "Mlle"))] <- "Miss"
> trainSet$Title[which(trainSet$Title %in% c("Lady", "Ms", "the Countess", "Dona"))] <- "Mrs"
> trainSet$Title[which(trainSet$Title=="Dr" & trainSet$Sex=="female")] <- "Mrs"
> trainSet$Title[which(trainSet$Title=="Dr" & trainSet$Sex=="male")] <- "Mr"
> trainSet$Title[which(trainSet$Title %in% c("Capt", "Col", "Don", "Jonkheer", "Major", "Rev", "Sir"))] <- "Mr"
> trainSet$Title<-as.factor(trainSet$Title) #convert to factor variable 
> #
> testSet$Title<-regmatches(as.character(testSet$Name),regexpr("\\,[A-z ]{1,20}\\.", as.character(testSet$Name)))
> testSet$Title<-unlist(lapply(testSet$Title,FUN=function(x) substr(x, 3, nchar(x)-1)))
> table(testSet$Title)

   Col   Dona     Dr Master   Miss     Mr    Mrs     Ms    Rev 
     2      1      1     21     78    240     72      1      2 
> testSet$Title[which(testSet$Title %in% c("Mme", "Mlle"))] <- "Miss"
> testSet$Title[which(testSet$Title %in% c("Lady", "Ms", "the Countess", "Dona"))] <- "Mrs"
> testSet$Title[which(testSet$Title=="Dr" & testSet$Sex=="female")] <- "Mrs"
> testSet$Title[which(testSet$Title=="Dr" & testSet$Sex=="male")] <- "Mr"
> testSet$Title[which(testSet$Title %in% c("Capt", "Col", "Don", "Jonkheer", "Major", "Rev", "Sir"))] <- "Mr"
> testSet$Title<-as.factor(testSet$Title) #convert to factor variable 
> # Set a random seed (so you will get the same results as me)
> set.seed(421)
> # Train the model using a "random forest" algorithm
> model <- train(Survived ~ Pclass + Sex + Fam + Nlen +   
+                  Embarked + Fare + Title, # Survived is a function of the variables we decided to include
+                data = trainSet, # Use the trainSet dataframe as the training data
+                method = "rf",# Use the "random forest" algorithm
+                trControl = trainControl(method = "cv", # Use cross-validation
+                                         number = 5) # Use 5 folds for cross-validation
+ )
> 
> print(model)
Random Forest 

891 samples
  7 predictor
  2 classes: '0', '1' 

No pre-processing
Resampling: Cross-Validated (5 fold) 
Summary of sample sizes: 713, 712, 712, 713, 714 
Resampling results across tuning parameters:

  mtry  Accuracy   Kappa    
   2    0.8259720  0.6229787
   6    0.8282633  0.6301592
  11    0.8238068  0.6220476

Accuracy was used to select the optimal model using the largest value.
The final value used for the model was mtry = 6.
> 
> testSet$Fare <- ifelse(is.na(testSet$Fare), mean(testSet$Fare, na.rm = TRUE), testSet$Fare)
> 
> testSet$Survived <- predict(model, newdata = testSet)
> 
> submission <- testSet[,c("PassengerId", "Survived")]
> write.table(submission, file = "submission.csv", col.names = TRUE, row.names = FALSE, sep = ",")
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
  6.965   0.250   7.240 
