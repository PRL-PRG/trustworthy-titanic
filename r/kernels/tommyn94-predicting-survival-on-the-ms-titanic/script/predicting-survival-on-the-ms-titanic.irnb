{"cells":[{"metadata":{"_uuid":"b3b5a7294ce6e859ad50d4bf73a4ffb2e7aae18b","_execution_state":"idle","trusted":true},"cell_type":"code","source":"suppressMessages({\n    library(caret)\n    library(caretEnsemble)\n    library(naniar)\n    library(ggplot2)\n    library(doParallel)\n    options(repr.plot.width=7, repr.plot.height=3, warn = -1)\n})\ntrainingFile = \"../input/train.csv\"\ntraining = read.csv(trainingFile, na.strings = \"\")\ndim(training)\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"200be168667589e0de0f5e203deea923d9957ea9"},"cell_type":"code","source":"head(training)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"6676e05c0cd5669f0d61797d2252312d28cdfb1a"},"cell_type":"markdown","source":"As we can see above the data set has 12 colums with `Survived` being the target variable in this case. I will not use `PassengerId` and `Name` as predictors in the models below because they contain information that is specific to each passenger and thus can not be generalized. The same may be true for `Ticket`. Let's have a closer look."},{"metadata":{"trusted":true,"scrolled":false,"_uuid":"eee861d0969ef0c0ea64b54d99a1f9ff872161b6"},"cell_type":"code","source":"str(training)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"3d4b7f02e9e584a095991872cfbc858cd5397213"},"cell_type":"markdown","source":"Indeed, with 681 unique levels given 891 obserations in the training data I will also discard `Ticket` as a feature used for learning. Apart from that,`Survived` has type `int` at the moment even though its are categorical variables. Let's fix this."},{"metadata":{"trusted":true,"_uuid":"d01ce779fdf374b82e2f2be39ee5bd8924cd1e74"},"cell_type":"code","source":"training$Survived = factor(training$Survived, labels = c(\"no\", \"yes\"))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"121993de0d2a5d26540821b31c83a9d536ba18b9"},"cell_type":"markdown","source":"Next let's have a look at missing values in the training set."},{"metadata":{"trusted":true,"_uuid":"2eff981a8891e0e2f460f21903d79604f2870e02"},"cell_type":"code","source":"miss_var_summary(training)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"79deb0cd19a13bb26d97b030da069fe6985d9d39"},"cell_type":"markdown","source":"Wow, the `Cabin` variable has almost 80% missing values! With that much missing values this feature is useless. Next, `Age` has roughly 20% missings. I will impute the missing values later on using the `preProcess = \"knnImpute\"` in the `train` function. Furtermore, I will impute the 2 missing values for `Embarked` with the modal, i.e. most frequent, value."},{"metadata":{"trusted":true,"_uuid":"d72aaf748e7bf4654f1dcf1bb97b9c9f8fb07988"},"cell_type":"code","source":"training$Embarked[is.na(training$Embarked)] = names(which.max(table(training$Embarked)))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"9925d3498d7510aad501092cfea77cc59342204a"},"cell_type":"code","source":"with(training, table(Sex, Survived))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"f8e5ad9bb706e61df6dda4b9c0afcc213d614656"},"cell_type":"code","source":"ggplot(training, aes(Age, color = Survived)) + geom_density() + facet_wrap(~ Sex)\nggplot(training, aes(Fare, color = Survived)) + geom_density() + facet_wrap(~ Sex)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"82e5e5ac4a44ff313f4e88bae10383d56caab733"},"cell_type":"code","source":"ggplot(training, aes(Survived, SibSp)) + geom_count()\nggplot(training, aes(Survived, Parch)) + geom_count()","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"3686655e8b724d8c5224ee15300cb1f061508cfd"},"cell_type":"code","source":"with(training, table(Embarked, Survived))\nwith(training, table(Pclass, Survived))\nwith(training, table(Embarked, Pclass))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"85be669251b58b09f4697c29ad34845bc42538c4"},"cell_type":"code","source":"ggplot(training, aes(Embarked, Fare)) + geom_boxplot()","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"4192d7723624eb852776aec26f8d5f54b41946da"},"cell_type":"code","source":"with(training, table(Title, Survived))\nwith(training, table(Title, Sex))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"scrolled":false,"_uuid":"d4569c69d5a751f67b41dfa2bd145688d056b1c7"},"cell_type":"code","source":"cl = makePSOCKcluster(4)\nregisterDoParallel(cl)\n\np = dummyVars(~ Age + Embarked + Pclass + Sex + SibSp + Parch + Fare, training)\npredictors = predict(p, training)\ntarget = training$Survived\n\nset.seed(418)\n\nmyFolds = createMultiFolds(training$Survived, 5, 3)\nmyControl = trainControl(method = \"repeatedcv\", number = 5, repeats = 3, index = myFolds, savePredictions = TRUE,\n                        classProbs = TRUE, search = \"random\")\nmethods = c(\"ranger\", \"knn\", \"svmRadial\", \"glmnet\", \"xgbTree\")\nmodels = caretEnsemble::caretList(predictors, target, methodList = methods, trControl = myControl,\n                                  preProcess = \"knnImpute\", tuneLength = 15)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"40e640d0170f6335dc07b3ff1b0e2b7080ad65d6"},"cell_type":"code","source":"bwplot(resamples(models))\nsummary(resamples(models))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"e6f105031fa353c0fd03ad848496f4244275ddcb"},"cell_type":"code","source":"cor(predict(models, predictors))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"732c1cc78f389368ea4eefa10d1733adcc4e7ac5"},"cell_type":"code","source":"models2stack = models[c(1, 4)]\nclass(models2stack) = \"caretList\"\nstackControl = trainControl(\"repeatedcv\", 5, 3, search = \"random\", savePredictions = TRUE, classProbs = TRUE)\nstack = caretEnsemble::caretStack(models2stack, method = \"xgbTree\", trControl = stackControl, tuneLength = 30)\nstopCluster(cl)","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}