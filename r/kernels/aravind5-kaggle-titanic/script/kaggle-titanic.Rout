
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # LIBRARY CALL
> library("rpart")
> library("rpart.plot")	
> #library("rattle")
> ### READING DATA ###
> train <- read.csv("../input/train.csv")
> test  <- read.csv("../input/test.csv")
> test$Survived <- 0
> ### CLEANDATA
> combi <- rbind(train, test)
> combi$Name <- as.character(combi$Name)
> strsplit(combi$Name[1], split='[,.]')
[[1]]
[1] "Braund"       " Mr"          " Owen Harris"

> strsplit(combi$Name[1], split='[,.]')[[1]]
[1] "Braund"       " Mr"          " Owen Harris"
> strsplit(combi$Name[1], split='[,.]')[[1]][2]
[1] " Mr"
> combi$Title <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
> combi$Title <- sub(' ', '', combi$Title)
> combi$Title[combi$PassengerId == 797] <- 'Mrs' # female doctor
> combi$Title[combi$Title %in% c('Lady', 'the Countess', 'Mlle', 'Mee', 'Ms')] <- 'Miss'
> combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir', 'Col', 'Jonkheer', 'Rev', 'Dr', 'Master')] <- 'Mr'
> combi$Title[combi$Title %in% c('Dona')] <- 'Mrs'
> combi$Title <- factor(combi$Title)
> 
> # Passenger on row 62 and 830 do not have a value for embarkment. 
> # Since many passengers embarked at Southampton, we give them the value S.
> # We code all embarkment codes as factors.
> combi$Embarked[c(62,830)] = "S"
> combi$Embarked <- factor(combi$Embarked)
> 
> # Passenger on row 1044 has an NA Fare value. Let's replace it with the median fare value.
> combi$Fare[1044] <- median(combi$Fare, na.rm=TRUE)
> 
> # Create new column -> family_size
> combi$family_size <- combi$SibSp + combi$Parch + 1
> 
> 
> # How to fill in missing Age values?
> # We make a prediction of a passengers Age using the other variables and a decision tree model. 
> # This time you give method="anova" since you are predicting a continuous variable.
> 
> predicted_age <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + family_size,
+                        data=combi[!is.na(combi$Age),], method="anova")
> combi$Age[is.na(combi$Age)] <- predict(predicted_age, combi[is.na(combi$Age),])
> 
> ### Create MODEL ###
> train_new <- combi[1:891,]
> test_new <- combi[892:1309,]
> test_new$Survived <- NULL
> 
> # Find Cabin Class 
> train_new$Cabin <- substr(train_new$Cabin,1,1)
> train_new$Cabin[train_new$Cabin == ""] <- "H"
> train_new$Cabin[train_new$Cabin == "T"] <- "H"
> 
> test_new$Cabin <- substr(test_new$Cabin,1,1)
> test_new$Cabin[test_new$Cabin == ""] <- "H"
> 
> train_new$Cabin <- factor(train_new$Cabin)
> test_new$Cabin <- factor(test_new$Cabin)
> 
> # train_new and test_new are available in the workspace
> str(train_new)
'data.frame':	891 obs. of  14 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : num  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 929 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 8 levels "A","B","C","D",..: 8 3 8 3 8 8 5 8 8 8 ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ Title      : Factor w/ 4 levels "Miss","Mme","Mr",..: 3 4 1 4 3 3 3 3 4 4 ...
 $ family_size: num  2 2 1 2 1 1 1 5 3 2 ...
> str(test_new)
'data.frame':	418 obs. of  13 variables:
 $ PassengerId: int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass     : int  3 3 2 3 3 3 3 2 3 3 ...
 $ Name       : chr  "Kelly, Mr. James" "Wilkes, Mrs. James (Ellen Needs)" "Myles, Mr. Thomas Francis" "Wirz, Mr. Albert" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age        : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp      : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch      : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket     : Factor w/ 929 levels "110152","110413",..: 781 841 726 776 252 869 787 159 745 520 ...
 $ Fare       : num  7.83 7 9.69 8.66 12.29 ...
 $ Cabin      : Factor w/ 8 levels "A","B","C","D",..: 8 8 8 8 8 8 8 8 8 8 ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 2 3 2 3 3 3 2 3 1 3 ...
 $ Title      : Factor w/ 4 levels "Miss","Mme","Mr",..: 3 4 3 3 4 3 1 3 4 3 ...
 $ family_size: num  1 2 1 1 3 1 1 3 1 3 ...
> 
> # Create a new model `my_tree`
> my_tree <- rpart(Survived ~ Age + Sex + Pclass  + family_size, data = train_new, method = "class", control=rpart.control(cp=0.0001))
> summary(my_tree)
Call:
rpart(formula = Survived ~ Age + Sex + Pclass + family_size, 
    data = train_new, method = "class", control = rpart.control(cp = 1e-04))
  n= 891 

           CP nsplit rel error    xerror       xstd
1 0.444444444      0 1.0000000 1.0000000 0.04244576
2 0.030701754      1 0.5555556 0.5555556 0.03574957
3 0.023391813      3 0.4941520 0.5233918 0.03497048
4 0.020467836      4 0.4707602 0.5029240 0.03444798
5 0.005847953      6 0.4298246 0.4766082 0.03374384
6 0.004385965     11 0.3976608 0.4883041 0.03406141
7 0.002923977     13 0.3888889 0.5000000 0.03437157
8 0.000100000     17 0.3771930 0.4853801 0.03398272

Variable importance
        Sex         Age      Pclass family_size 
         49          19          18          13 

Node number 1: 891 observations,    complexity param=0.4444444
  predicted class=0  expected loss=0.3838384  P(node) =1
    class counts:   549   342
   probabilities: 0.616 0.384 
  left son=2 (577 obs) right son=3 (314 obs)
  Primary splits:
      Sex         splits as  RL,           improve=124.42630, (0 missing)
      Pclass      < 2.5      to the right, improve= 43.78183, (0 missing)
      family_size < 1.5      to the left,  improve= 17.43059, (0 missing)
      Age         < 6.5      to the right, improve= 10.05326, (0 missing)
  Surrogate splits:
      family_size < 1.5      to the left,  agree=0.672, adj=0.070, (0 split)
      Age         < 15.5     to the right, agree=0.655, adj=0.022, (0 split)

Node number 2: 577 observations,    complexity param=0.02339181
  predicted class=0  expected loss=0.1889081  P(node) =0.647587
    class counts:   468   109
   probabilities: 0.811 0.189 
  left son=4 (553 obs) right son=5 (24 obs)
  Primary splits:
      Age         < 6.5      to the right, improve=11.431650, (0 missing)
      Pclass      < 1.5      to the right, improve=10.019140, (0 missing)
      family_size < 1.5      to the left,  improve= 3.147488, (0 missing)

Node number 3: 314 observations,    complexity param=0.03070175
  predicted class=1  expected loss=0.2579618  P(node) =0.352413
    class counts:    81   233
   probabilities: 0.258 0.742 
  left son=6 (144 obs) right son=7 (170 obs)
  Primary splits:
      Pclass      < 2.5      to the right, improve=31.163130, (0 missing)
      family_size < 4.5      to the right, improve=16.243840, (0 missing)
      Age         < 12       to the left,  improve= 6.096013, (0 missing)
  Surrogate splits:
      Age         < 27.71591 to the left,  agree=0.697, adj=0.340, (0 split)
      family_size < 4.5      to the right, agree=0.608, adj=0.146, (0 split)

Node number 4: 553 observations,    complexity param=0.005847953
  predicted class=0  expected loss=0.1681736  P(node) =0.620651
    class counts:   460    93
   probabilities: 0.832 0.168 
  left son=8 (433 obs) right son=9 (120 obs)
  Primary splits:
      Pclass      < 1.5      to the right, improve=11.083720, (0 missing)
      Age         < 30.75    to the left,  improve= 1.245402, (0 missing)
      family_size < 4.5      to the right, improve= 1.173744, (0 missing)
  Surrogate splits:
      Age < 41.36005 to the left,  agree=0.825, adj=0.192, (0 split)

Node number 5: 24 observations,    complexity param=0.02046784
  predicted class=1  expected loss=0.3333333  P(node) =0.02693603
    class counts:     8    16
   probabilities: 0.333 0.667 
  left son=10 (9 obs) right son=11 (15 obs)
  Primary splits:
      family_size < 4.5      to the right, improve=8.8888890, (0 missing)
      Pclass      < 2.5      to the right, improve=3.8095240, (0 missing)
      Age         < 1.5      to the right, improve=0.6095238, (0 missing)
  Surrogate splits:
      Pclass < 2.5      to the right, agree=0.792, adj=0.444, (0 split)

Node number 6: 144 observations,    complexity param=0.03070175
  predicted class=0  expected loss=0.5  P(node) =0.1616162
    class counts:    72    72
   probabilities: 0.500 0.500 
  left son=12 (27 obs) right son=13 (117 obs)
  Primary splits:
      family_size < 4.5      to the right, improve=10.051280, (0 missing)
      Age         < 38.5     to the right, improve= 4.545455, (0 missing)
  Surrogate splits:
      Age < 37.5     to the right, agree=0.819, adj=0.037, (0 split)

Node number 7: 170 observations
  predicted class=1  expected loss=0.05294118  P(node) =0.1907969
    class counts:     9   161
   probabilities: 0.053 0.947 

Node number 8: 433 observations
  predicted class=0  expected loss=0.1154734  P(node) =0.4859708
    class counts:   383    50
   probabilities: 0.885 0.115 

Node number 9: 120 observations,    complexity param=0.005847953
  predicted class=0  expected loss=0.3583333  P(node) =0.1346801
    class counts:    77    43
   probabilities: 0.642 0.358 
  left son=18 (81 obs) right son=19 (39 obs)
  Primary splits:
      Age         < 36.5     to the right, improve=3.749335, (0 missing)
      family_size < 1.5      to the left,  improve=0.250000, (0 missing)
  Surrogate splits:
      family_size < 3.5      to the left,  agree=0.692, adj=0.051, (0 split)

Node number 10: 9 observations
  predicted class=0  expected loss=0.1111111  P(node) =0.01010101
    class counts:     8     1
   probabilities: 0.889 0.111 

Node number 11: 15 observations
  predicted class=1  expected loss=0  P(node) =0.01683502
    class counts:     0    15
   probabilities: 0.000 1.000 

Node number 12: 27 observations
  predicted class=0  expected loss=0.1111111  P(node) =0.03030303
    class counts:    24     3
   probabilities: 0.889 0.111 

Node number 13: 117 observations,    complexity param=0.02046784
  predicted class=1  expected loss=0.4102564  P(node) =0.1313131
    class counts:    48    69
   probabilities: 0.410 0.590 
  left son=26 (25 obs) right son=27 (92 obs)
  Primary splits:
      Age         < 27.71591 to the right, improve=3.3562540, (0 missing)
      family_size < 1.5      to the right, improve=0.1785425, (0 missing)

Node number 18: 81 observations,    complexity param=0.004385965
  predicted class=0  expected loss=0.2716049  P(node) =0.09090909
    class counts:    59    22
   probabilities: 0.728 0.272 
  left son=36 (22 obs) right son=37 (59 obs)
  Primary splits:
      Age         < 53       to the right, improve=1.1048530, (0 missing)
      family_size < 1.5      to the left,  improve=0.4256065, (0 missing)

Node number 19: 39 observations,    complexity param=0.005847953
  predicted class=1  expected loss=0.4615385  P(node) =0.04377104
    class counts:    18    21
   probabilities: 0.462 0.538 
  left son=38 (29 obs) right son=39 (10 obs)
  Primary splits:
      Age         < 33.5     to the left,  improve=1.8397880, (0 missing)
      family_size < 1.5      to the right, improve=0.3109312, (0 missing)

Node number 26: 25 observations
  predicted class=0  expected loss=0.36  P(node) =0.02805836
    class counts:    16     9
   probabilities: 0.640 0.360 

Node number 27: 92 observations,    complexity param=0.002923977
  predicted class=1  expected loss=0.3478261  P(node) =0.1032548
    class counts:    32    60
   probabilities: 0.348 0.652 
  left son=54 (81 obs) right son=55 (11 obs)
  Primary splits:
      Age         < 7        to the right, improve=1.6493440, (0 missing)
      family_size < 2.5      to the left,  improve=0.1203069, (0 missing)
  Surrogate splits:
      family_size < 3.5      to the left,  agree=0.891, adj=0.091, (0 split)

Node number 36: 22 observations
  predicted class=0  expected loss=0.1363636  P(node) =0.02469136
    class counts:    19     3
   probabilities: 0.864 0.136 

Node number 37: 59 observations,    complexity param=0.004385965
  predicted class=0  expected loss=0.3220339  P(node) =0.06621773
    class counts:    40    19
   probabilities: 0.678 0.322 
  left son=74 (46 obs) right son=75 (13 obs)
  Primary splits:
      Age         < 47.5     to the left,  improve=2.8697350, (0 missing)
      family_size < 1.5      to the left,  improve=0.3678401, (0 missing)
  Surrogate splits:
      family_size < 2.5      to the left,  agree=0.797, adj=0.077, (0 split)

Node number 38: 29 observations,    complexity param=0.005847953
  predicted class=0  expected loss=0.4482759  P(node) =0.0325477
    class counts:    16    13
   probabilities: 0.552 0.448 
  left son=76 (8 obs) right son=77 (21 obs)
  Primary splits:
      Age         < 28.5     to the right, improve=0.868637100, (0 missing)
      family_size < 1.5      to the right, improve=0.008289125, (0 missing)

Node number 39: 10 observations
  predicted class=1  expected loss=0.2  P(node) =0.01122334
    class counts:     2     8
   probabilities: 0.200 0.800 

Node number 54: 81 observations,    complexity param=0.002923977
  predicted class=1  expected loss=0.382716  P(node) =0.09090909
    class counts:    31    50
   probabilities: 0.383 0.617 
  left son=108 (44 obs) right son=109 (37 obs)
  Primary splits:
      Age         < 25.5     to the left,  improve=2.6499830, (0 missing)
      family_size < 1.5      to the right, improve=0.4767662, (0 missing)

Node number 55: 11 observations
  predicted class=1  expected loss=0.09090909  P(node) =0.01234568
    class counts:     1    10
   probabilities: 0.091 0.909 

Node number 74: 46 observations
  predicted class=0  expected loss=0.2391304  P(node) =0.05162738
    class counts:    35    11
   probabilities: 0.761 0.239 

Node number 75: 13 observations
  predicted class=1  expected loss=0.3846154  P(node) =0.01459035
    class counts:     5     8
   probabilities: 0.385 0.615 

Node number 76: 8 observations
  predicted class=0  expected loss=0.25  P(node) =0.008978676
    class counts:     6     2
   probabilities: 0.750 0.250 

Node number 77: 21 observations,    complexity param=0.005847953
  predicted class=1  expected loss=0.4761905  P(node) =0.02356902
    class counts:    10    11
   probabilities: 0.476 0.524 
  left son=154 (10 obs) right son=155 (11 obs)
  Primary splits:
      Age         < 24.5     to the left,  improve=1.912554, (0 missing)
      family_size < 1.5      to the right, improve=0.264652, (0 missing)
  Surrogate splits:
      family_size < 1.5      to the right, agree=0.667, adj=0.3, (0 split)

Node number 108: 44 observations,    complexity param=0.002923977
  predicted class=0  expected loss=0.5  P(node) =0.04938272
    class counts:    22    22
   probabilities: 0.500 0.500 
  left son=216 (9 obs) right son=217 (35 obs)
  Primary splits:
      Age         < 14.75    to the left,  improve=0.6285714, (0 missing)
      family_size < 1.5      to the right, improve=0.4168421, (0 missing)
  Surrogate splits:
      family_size < 2.5      to the right, agree=0.841, adj=0.222, (0 split)

Node number 109: 37 observations
  predicted class=1  expected loss=0.2432432  P(node) =0.04152637
    class counts:     9    28
   probabilities: 0.243 0.757 

Node number 154: 10 observations
  predicted class=0  expected loss=0.3  P(node) =0.01122334
    class counts:     7     3
   probabilities: 0.700 0.300 

Node number 155: 11 observations
  predicted class=1  expected loss=0.2727273  P(node) =0.01234568
    class counts:     3     8
   probabilities: 0.273 0.727 

Node number 216: 9 observations
  predicted class=0  expected loss=0.3333333  P(node) =0.01010101
    class counts:     6     3
   probabilities: 0.667 0.333 

Node number 217: 35 observations,    complexity param=0.002923977
  predicted class=1  expected loss=0.4571429  P(node) =0.03928171
    class counts:    16    19
   probabilities: 0.457 0.543 
  left son=434 (19 obs) right son=435 (16 obs)
  Primary splits:
      Age         < 19.5     to the right, improve=0.39774440, (0 missing)
      family_size < 1.5      to the right, improve=0.06708075, (0 missing)

Node number 434: 19 observations
  predicted class=0  expected loss=0.4736842  P(node) =0.02132435
    class counts:    10     9
   probabilities: 0.526 0.474 

Node number 435: 16 observations
  predicted class=1  expected loss=0.375  P(node) =0.01795735
    class counts:     6    10
   probabilities: 0.375 0.625 

> 
> # Visualize new decision tree
> #fancyRpartPlot(my_tree)
> prp(my_tree, type = 4, extra = 100)
> 
> # Make your prediction using `my_tree` and `test_new`
> my_prediction <- predict(my_tree, test_new, type = "class")
> head(my_prediction)
892 893 894 895 896 897 
  0   0   0   0   0   0 
Levels: 0 1
> 
> # Create a data frame with two columns: PassengerId & Survived. Survived contains your predictions
> vector_passengerid <- test_new$PassengerId
> 
> my_solution <- data.frame(PassengerId = vector_passengerid, Survived = my_prediction)
> 
> head(my_solution)
    PassengerId Survived
892         892        0
893         893        0
894         894        0
895         895        0
896         896        0
897         897        0
> 
> # Write your solution to a csv file with the name my_solution.csv
> write.csv(my_solution, file = "my_solution.csv",row.names=FALSE)
> 
> proc.time()
   user  system elapsed 
  0.389   0.057   0.453 
