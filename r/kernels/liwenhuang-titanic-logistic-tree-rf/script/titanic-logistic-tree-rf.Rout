
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## ----setup, include=FALSE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> knitr::opts_chunk$set(echo = TRUE)
> library(data.table)
> library(ggplot2)
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train <- fread("../input/train.csv")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> test <- fread ("../input/test.csv")
> submission <- fread("../input/gender_submission.csv")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full <- bind_rows(train, test)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> str(train)
Classes ‘data.table’ and 'data.frame':	891 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
 - attr(*, ".internal.selfref")=<externalptr> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> head(train)
   PassengerId Survived Pclass
1:           1        0      3
2:           2        1      1
3:           3        1      3
4:           4        1      1
5:           5        0      3
6:           6        0      3
                                                  Name    Sex Age SibSp Parch
1:                             Braund, Mr. Owen Harris   male  22     1     0
2: Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3:                              Heikkinen, Miss. Laina female  26     0     0
4:        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5:                            Allen, Mr. William Henry   male  35     0     0
6:                                    Moran, Mr. James   male  NA     0     0
             Ticket    Fare Cabin Embarked
1:        A/5 21171  7.2500              S
2:         PC 17599 71.2833   C85        C
3: STON/O2. 3101282  7.9250              S
4:           113803 53.1000  C123        S
5:           373450  8.0500              S
6:           330877  8.4583              Q
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> sapply(full, function(x)sum(is.na(x) | x == ""))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0         418           0           0           0         263 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           1        1014           2 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train$Female <- train$Sex == "female"
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot(full, aes(group = as.factor(Pclass), y = Fare, color = as.factor(Pclass))) + 
+   geom_boxplot() + 
+   coord_cartesian(xlim = c(-0.5, 0.5), ylim = c(-50, 300))
Warning message:
Removed 1 rows containing non-finite values (stat_boxplot). 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> aggregate(Fare ~ Pclass, data = train, mean)
  Pclass     Fare
1      1 84.15469
2      2 20.66218
3      3 13.67555
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full[full$Embarked == ""]
   PassengerId Survived Pclass                                      Name    Sex
1:          62        1      1                       Icard, Miss. Amelie female
2:         830        1      1 Stone, Mrs. George Nelson (Martha Evelyn) female
   Age SibSp Parch Ticket Fare Cabin Embarked
1:  38     0     0 113572   80   B28         
2:  62     0     0 113572   80   B28         
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot(data = full, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
+   geom_boxplot() +
+   geom_hline(aes(yintercept=80), 
+     colour='red', linetype='dashed', lwd=1) 
Warning message:
Removed 1 rows containing non-finite values (stat_boxplot). 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full$Embarked[full$Embarked == ""] <- "C"
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full[is.na(full$Fare), ]
   PassengerId Survived Pclass               Name  Sex  Age SibSp Parch Ticket
1:        1044       NA      3 Storey, Mr. Thomas male 60.5     0     0   3701
   Fare Cabin Embarked
1:   NA              S
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full$Fare[which(is.na(full$Fare))] <- 13.67555
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> cor(train[,-c("PassengerId", "Sex", "Name", "Ticket", "Cabin", "Embarked")])
            Survived      Pclass Age       SibSp      Parch       Fare
Survived  1.00000000 -0.33848104  NA -0.03532250 0.08162941  0.2573065
Pclass   -0.33848104  1.00000000  NA  0.08308136 0.01844267 -0.5494996
Age               NA          NA   1          NA         NA         NA
SibSp    -0.03532250  0.08308136  NA  1.00000000 0.41483770  0.1596510
Parch     0.08162941  0.01844267  NA  0.41483770 1.00000000  0.2162249
Fare      0.25730652 -0.54949962  NA  0.15965104 0.21622494  1.0000000
Female    0.54335138 -0.13190049  NA  0.11463081 0.24548896  0.1823328
             Female
Survived  0.5433514
Pclass   -0.1319005
Age              NA
SibSp     0.1146308
Parch     0.2454890
Fare      0.1823328
Female    1.0000000
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot(data = train, aes(x = Survived, fill = Sex)) +
+                      geom_bar(width=.5, position = "dodge")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot(data = train, aes(x = Survived, fill = as.factor(Pclass) )) +
+                      geom_bar(width=.5, position = "dodge") 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> cor(train[,-c("PassengerId", "Sex", "Name", "Ticket", "Cabin", "Embarked")], use = "complete.obs")
            Survived      Pclass         Age       SibSp       Parch
Survived  1.00000000 -0.35965268 -0.07722109 -0.01735836  0.09331701
Pclass   -0.35965268  1.00000000 -0.36922602  0.06724737  0.02568307
Age      -0.07722109 -0.36922602  1.00000000 -0.30824676 -0.18911926
SibSp    -0.01735836  0.06724737 -0.30824676  1.00000000  0.38381986
Parch     0.09331701  0.02568307 -0.18911926  0.38381986  1.00000000
Fare      0.26818862 -0.55418247  0.09606669  0.13832879  0.20511888
Female    0.53882559 -0.15546030 -0.09325358  0.10394968  0.24697204
                Fare      Female
Survived  0.26818862  0.53882559
Pclass   -0.55418247 -0.15546030
Age       0.09606669 -0.09325358
SibSp     0.13832879  0.10394968
Parch     0.20511888  0.24697204
Fare      1.00000000  0.18499425
Female    0.18499425  1.00000000
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> cor(full[,-c("PassengerId", "Sex", "Name", "Ticket", "Cabin", "Embarked")], use = "complete.obs")
            Survived      Pclass         Age       SibSp       Parch
Survived  1.00000000 -0.35965268 -0.07722109 -0.01735836  0.09331701
Pclass   -0.35965268  1.00000000 -0.36922602  0.06724737  0.02568307
Age      -0.07722109 -0.36922602  1.00000000 -0.30824676 -0.18911926
SibSp    -0.01735836  0.06724737 -0.30824676  1.00000000  0.38381986
Parch     0.09331701  0.02568307 -0.18911926  0.38381986  1.00000000
Fare      0.26818862 -0.55418247  0.09606669  0.13832879  0.20511888
                Fare
Survived  0.26818862
Pclass   -0.55418247
Age       0.09606669
SibSp     0.13832879
Parch     0.20511888
Fare      1.00000000
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train_logit1 <- glm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data = train, family = "binomial")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> summary(train_logit1)

Call:
glm(formula = Survived ~ Pclass + Sex + Age + SibSp + Parch + 
    Fare + Embarked, family = "binomial", data = train)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.7233  -0.6439  -0.3772   0.6288   2.4457  

Coefficients:
              Estimate Std. Error z value Pr(>|z|)    
(Intercept)  17.894850 607.855474   0.029  0.97651    
Pclass       -1.199251   0.164619  -7.285 3.22e-13 ***
Sexmale      -2.638476   0.222256 -11.871  < 2e-16 ***
Age          -0.043350   0.008232  -5.266 1.39e-07 ***
SibSp        -0.363208   0.129017  -2.815  0.00487 ** 
Parch        -0.060270   0.123900  -0.486  0.62666    
Fare          0.001432   0.002531   0.566  0.57165    
EmbarkedC   -12.257443 607.855250  -0.020  0.98391    
EmbarkedQ   -13.080988 607.855452  -0.022  0.98283    
EmbarkedS   -12.658656 607.855228  -0.021  0.98339    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 964.52  on 713  degrees of freedom
Residual deviance: 632.34  on 704  degrees of freedom
  (177 observations deleted due to missingness)
AIC: 652.34

Number of Fisher Scoring iterations: 13

> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> hist(train$Age, breaks = 50, col = "lightblue", freq = F)
> lines(density(train$Age, na.rm = T), col = "red")
> lines(density(train$Age, adjust = 4, na.rm = T), lty="dotted", col="darkgreen", lwd=2)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> hist(test$Age, breaks = 50, col = "lightblue", freq = F)
> lines(density(test$Age, na.rm = T), col = "red")
> lines(density(test$Age, adjust = 4, na.rm = T), lty="dotted", col="darkgreen", lwd=2)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> hist(full$Age, breaks = 50, col = "lightblue", freq = F)
> lines(density(full$Age, na.rm = T), col = "red")
> lines(density(full$Age, adjust = 4, na.rm = T), lty="dotted", col="darkgreen", lwd=2)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> summary(train$Age, rm.na = T)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
   0.42   20.12   28.00   29.70   38.00   80.00     177 
> summary(test$Age, rm.na = T)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
   0.17   21.00   27.00   30.27   39.00   76.00      86 
> summary(full$Age, rm.na = T)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
   0.17   21.00   28.00   29.88   39.00   80.00     263 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> Age_missing <- full[is.na(full$Age)]
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> table(full$Pclass)

  1   2   3 
323 277 709 
> table(full$Pclass)/dim(full)[1]

        1         2         3 
0.2467532 0.2116119 0.5416348 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> table(Age_missing$Pclass)

  1   2   3 
 39  16 208 
> table(Age_missing$Pclass)/dim(Age_missing)[1]

        1         2         3 
0.1482890 0.0608365 0.7908745 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> table(full$Sex)

female   male 
   466    843 
> table(full$Sex)/dim(full)[1]

   female      male 
0.3559969 0.6440031 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> table(Age_missing$Sex)

female   male 
    78    185 
> table(Age_missing$Sex)/dim(Age_missing)[1]

   female      male 
0.2965779 0.7034221 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot (data = full, aes(Age, fill = as.factor(Pclass))) +
+   geom_histogram (aes(y = ..density..), alpha = 0.7, position = 'identity', binwidth = 2, na.rm = T) +
+   geom_density(alpha = 0.2, linetype="dotted", na.rm = T)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> summary(full$Age[full$Pclass == 1])
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
   0.92   28.00   39.00   39.16   50.00   80.00      39 
> summary(full$Age[full$Pclass == 2])
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
   0.67   22.00   29.00   29.51   36.00   70.00      16 
> summary(full$Age[full$Pclass == 3])
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
   0.17   18.00   24.00   24.82   32.00   74.00     208 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot (data = full, aes(Age, fill = Sex))+
+   geom_histogram (aes(y = ..density..), alpha = 0.7, position = 'identity', binwidth = 2, na.rm = T) +
+   geom_density(alpha = 0.2, linetype="dotted", na.rm = T)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(mice)

Attaching package: ‘mice’

The following objects are masked from ‘package:base’:

    cbind, rbind

Warning message:
package ‘mice’ was built under R version 3.6.2 
> mice_mod <- mice(data = full[, c("Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Cabin", "Embarked" )], method='rf') 

 iter imp variable
  1   1  Age
  1   2  Age
  1   3  Age
  1   4  Age
  1   5  Age
  2   1  Age
  2   2  Age
  2   3  Age
  2   4  Age
  2   5  Age
  3   1  Age
  3   2  Age
  3   3  Age
  3   4  Age
  3   5  Age
  4   1  Age
  4   2  Age
  4   3  Age
  4   4  Age
  4   5  Age
  5   1  Age
  5   2  Age
  5   3  Age
  5   4  Age
  5   5  Age
Warning message:
Number of logged events: 3 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> mice_output <- complete(mice_mod)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> par(mfrow = c(1, 2))
> 
> hist(full$Age, breaks = 50, col = "darkblue", freq = F, main = "Age: Original Data")
> lines(density(full$Age, na.rm = T), col = "red")
> lines(density(full$Age, adjust = 4, na.rm = T), lty="dotted", col="darkgreen", lwd=2)
> 
> hist(mice_output$Age, breaks = 50, col = "lightblue", freq = F, main = "Age: MICE output")
> lines(density(mice_output$Age, na.rm = T), col = "red")
> lines(density(mice_output$Age, adjust = 4, na.rm = T), lty="dotted", col="darkgreen", lwd=2)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> par(mfrow = c(1, 2))
> 
> ggplot (data = full, aes(Age, fill = as.factor(Pclass))) +
+   geom_histogram (aes(y = ..density..), alpha = 0.7, position = 'identity', binwidth = 2, na.rm = T) +
+   geom_density(alpha = 0.2, linetype="dotted", na.rm = T) +
+   ggtitle("Age: Original Data")
> 
> ggplot (data = mice_output, aes(Age, fill = as.factor(Pclass))) +
+   geom_histogram (aes(y = ..density..), alpha = 0.7, position = 'identity', binwidth = 2, na.rm = T) +
+   geom_density(alpha = 0.2, linetype="dotted", na.rm = T) + 
+   ggtitle("Age: MICE output")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full$Age <- mice_output$Age
> sum(is.na(full$Age))
[1] 0
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full$Cabin[1:30]
 [1] ""            "C85"         ""            "C123"        ""           
 [6] ""            "E46"         ""            ""            ""           
[11] "G6"          "C103"        ""            ""            ""           
[16] ""            ""            ""            ""            ""           
[21] ""            "D56"         ""            "A6"          ""           
[26] ""            ""            "C23 C25 C27" ""            ""           
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train_logit2 <- glm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data = full[!is.na(full$Survived), ], family = "binomial")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> summary(train_logit1)

Call:
glm(formula = Survived ~ Pclass + Sex + Age + SibSp + Parch + 
    Fare + Embarked, family = "binomial", data = train)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.7233  -0.6439  -0.3772   0.6288   2.4457  

Coefficients:
              Estimate Std. Error z value Pr(>|z|)    
(Intercept)  17.894850 607.855474   0.029  0.97651    
Pclass       -1.199251   0.164619  -7.285 3.22e-13 ***
Sexmale      -2.638476   0.222256 -11.871  < 2e-16 ***
Age          -0.043350   0.008232  -5.266 1.39e-07 ***
SibSp        -0.363208   0.129017  -2.815  0.00487 ** 
Parch        -0.060270   0.123900  -0.486  0.62666    
Fare          0.001432   0.002531   0.566  0.57165    
EmbarkedC   -12.257443 607.855250  -0.020  0.98391    
EmbarkedQ   -13.080988 607.855452  -0.022  0.98283    
EmbarkedS   -12.658656 607.855228  -0.021  0.98339    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 964.52  on 713  degrees of freedom
Residual deviance: 632.34  on 704  degrees of freedom
  (177 observations deleted due to missingness)
AIC: 652.34

Number of Fisher Scoring iterations: 13

> summary(train_logit2)

Call:
glm(formula = Survived ~ Pclass + Sex + Age + SibSp + Parch + 
    Fare + Embarked, family = "binomial", data = full[!is.na(full$Survived), 
    ])

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.6311  -0.6165  -0.3992   0.6188   2.6699  

Coefficients:
             Estimate Std. Error z value Pr(>|z|)    
(Intercept)  5.274537   0.564495   9.344  < 2e-16 ***
Pclass      -1.130421   0.146539  -7.714 1.22e-14 ***
Sexmale     -2.723218   0.201188 -13.536  < 2e-16 ***
Age         -0.037247   0.007400  -5.034 4.82e-07 ***
SibSp       -0.355734   0.106409  -3.343 0.000829 ***
Parch       -0.096676   0.118789  -0.814 0.415733    
Fare         0.002037   0.002403   0.848 0.396508    
EmbarkedQ   -0.057306   0.385852  -0.149 0.881933    
EmbarkedS   -0.399682   0.237034  -1.686 0.091761 .  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 1186.66  on 890  degrees of freedom
Residual deviance:  785.03  on 882  degrees of freedom
AIC: 803.03

Number of Fisher Scoring iterations: 5

> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> anova(train_logit1, test = 'Chisq')
Analysis of Deviance Table

Model: binomial, link: logit

Response: Survived

Terms added sequentially (first to last)


         Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    
NULL                       713     964.52              
Pclass    1   93.786       712     870.73 < 2.2e-16 ***
Sex       1  198.219       711     672.51 < 2.2e-16 ***
Age       1   25.220       710     647.29 5.116e-07 ***
SibSp     1   10.572       709     636.72  0.001148 ** 
Parch     1    0.097       708     636.62  0.755403    
Fare      1    0.814       707     635.81  0.367038    
Embarked  3    3.466       704     632.34  0.325254    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> anova(train_logit2, test = 'Chisq')
Analysis of Deviance Table

Model: binomial, link: logit

Response: Survived

Terms added sequentially (first to last)


         Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    
NULL                       890    1186.66              
Pclass    1  102.254       889    1084.40 < 2.2e-16 ***
Sex       1  257.206       888     827.20 < 2.2e-16 ***
Age       1   18.939       887     808.26 1.349e-05 ***
SibSp     1   17.562       886     790.69 2.780e-05 ***
Parch     1    0.513       885     790.18    0.4739    
Fare      1    1.632       884     788.55    0.2014    
Embarked  2    3.521       882     785.03    0.1719    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train_predict1 <- predict (train_logit1, data = full[1:891, ], type = "response")
> train_predict2 <- predict (train_logit2, data = full[1:891, ], type = "response")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train_1 <- cbind(train, train_predict1)
Warning message:
In as.data.table.list(x, keep.rownames = keep.rownames, check.names = check.names,  :
  Item 2 has 714 rows but longest item has 891; recycled with remainder.
> train_2 <- cbind(train, train_predict2)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ggplot (data = train, aes(train_predict2, fill = as.factor(Survived))) +
+   geom_histogram (alpha = 0.5, position = 'identity', binwidth = 0.01) +
+   ggtitle("MICE outcome")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(ROCR)
Warning message:
package ‘ROCR’ was built under R version 3.6.2 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> result2 <- prediction(train_predict2, train$Survived)
> evaluation2 <- performance(result2, "acc")
> plot(evaluation2)
> abline(v = 0.6, col = "red")
> abline(h = 0.81, col = "red")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> max_index2 <- which.max(slot(evaluation2, "y.values")[[1]])
> max_index2
[1] 255
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> acc2 <- slot(evaluation2, "y.values")[[1]][max_index2]
> cut_off2<- slot(evaluation2, "x.values")[[1]][max_index2]
> print(c(Accuracy = acc2, Cutoff = cut_off2))
  Accuracy Cutoff.824 
 0.8215488  0.6002866 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train_outcome2<- ifelse(train_predict2> 0.6121, 1, 0)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> conf_table2 <- table(train$Survived, train_outcome2)
> conf_table2
   train_outcome2
      0   1
  0 508  41
  1 122 220
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> conf_table2[2,2]/sum(conf_table2[,2])
[1] 0.8429119
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> conf_table2[2,1]/sum(conf_table2[,1])
[1] 0.1936508
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> roc2 <- performance(result2, "tpr", "fpr")
> plot(roc2, colorize = T)
> abline(a = 0, b = 1, col = "grey")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> auc2 <- performance(result2, "auc") %>%
+         slot(., "y.values") %>%
+         unlist() %>%
+         round(., 4)
> auc2
[1] 0.8582
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> 
> plot(roc2, colorize = T)
> abline(a = 0, b = 1, col = "grey")
> legend(0.65, 0.2, auc2, title = "AUC2")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(pscl)
Classes and Methods for R developed in the
Political Science Computational Laboratory
Department of Political Science
Stanford University
Simon Jackman
hurdle and zeroinfl functions by Achim Zeileis
> pR2(train_logit2)
fitting null model for pseudo-r2
         llh      llhNull           G2     McFadden         r2ML         r2CU 
-392.5137938 -593.3275684  401.6275491    0.3384535    0.3628565    0.4930085 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full$Name[1:20]
 [1] "Braund, Mr. Owen Harris"                                
 [2] "Cumings, Mrs. John Bradley (Florence Briggs Thayer)"    
 [3] "Heikkinen, Miss. Laina"                                 
 [4] "Futrelle, Mrs. Jacques Heath (Lily May Peel)"           
 [5] "Allen, Mr. William Henry"                               
 [6] "Moran, Mr. James"                                       
 [7] "McCarthy, Mr. Timothy J"                                
 [8] "Palsson, Master. Gosta Leonard"                         
 [9] "Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)"      
[10] "Nasser, Mrs. Nicholas (Adele Achem)"                    
[11] "Sandstrom, Miss. Marguerite Rut"                        
[12] "Bonnell, Miss. Elizabeth"                               
[13] "Saundercock, Mr. William Henry"                         
[14] "Andersson, Mr. Anders Johan"                            
[15] "Vestrom, Miss. Hulda Amanda Adolfina"                   
[16] "Hewlett, Mrs. (Mary D Kingcome) "                       
[17] "Rice, Master. Eugene"                                   
[18] "Williams, Mr. Charles Eugene"                           
[19] "Vander Planke, Mrs. Julius (Emelia Maria Vandemoortele)"
[20] "Masselmani, Mrs. Fatima"                                
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> Title <- gsub("(.*,\\s)|(\\..*)", "", full$Name)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> table(Title, full$Sex)
              
Title          female male
  Capt              0    1
  Col               0    4
  Don               0    1
  Dona              1    0
  Dr                1    7
  Jonkheer          0    1
  Lady              1    0
  Major             0    2
  Master            0   61
  Miss            260    0
  Mlle              2    0
  Mme               1    0
  Mr                0  757
  Mrs             197    0
  Ms                2    0
  Rev               0    8
  Sir               0    1
  the Countess      1    0
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> table(Title[1:891], train$Survived)
              
                 0   1
  Capt           1   0
  Col            1   1
  Don            1   0
  Dr             4   3
  Jonkheer       1   0
  Lady           0   1
  Major          1   1
  Master        17  23
  Miss          55 127
  Mlle           0   2
  Mme            0   1
  Mr           436  81
  Mrs           26  99
  Ms             0   1
  Rev            6   0
  Sir            0   1
  the Countess   0   1
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> #"Mlle", "Mme", "Ms" => "Miss"
> Title[Title == "Mlle" | Title == "Mme" | Title == "Ms"] <- "Miss"
> 
> # Assign the upper class to one category
> Title[Title == "Don" | Title == "Dona" | Title == "Master" | Title == "Lady" | 
+       Title == "Sir" | Title == "Jonkheer" | Title == "the Countess"] <- "Upper"
> 
> # Assign military titles and Reverend to a service category
> Title[Title == "Capt" | Title == "Col" | Title == "Major" | Title == "Rev" | Title == "Dr" ] <- "Service"
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> tb_ts <- table(Title[1:891], train$Survived)
> tb_ts
         
            0   1
  Miss     55 131
  Mr      436  81
  Mrs      26  99
  Service  13   5
  Upper    19  26
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> chisq.test(tb_ts)

	Pearson's Chi-squared test

data:  tb_ts
X-squared = 289.63, df = 4, p-value < 2.2e-16

> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> table(full$SibSp, full$Survived)
   
      0   1
  0 398 210
  1  97 112
  2  15  13
  3  12   4
  4  15   3
  5   5   0
  8   7   0
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> table(full$Parch, full$Survived)
   
      0   1
  0 445 233
  1  53  65
  2  40  40
  3   2   3
  4   4   0
  5   4   1
  6   1   0
  9   0   0
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> Fam_size <- full$Parch + full$SibSp
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> tb_fams <- table(Fam_size, full$Survived)
> tb_fams
        
Fam_size   0   1
      0  374 163
      1   72  89
      2   43  59
      3    8  21
      4   12   3
      5   19   3
      6    8   4
      7    6   0
      10   7   0
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> Fam_sizeD <- vector(mode = "numeric", length = length(Fam_size))
> Fam_sizeD[Fam_size == 0] <- "Singleton"
> Fam_sizeD[Fam_size > 0 & Fam_size < 5] <- "Small"
> Fam_sizeD[Fam_size >= 5] <- "Big"
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> tb_fams <- table(Fam_sizeD, full$Survived)
> tb_fams
           
Fam_sizeD     0   1
  Big        40   7
  Singleton 374 163
  Small     135 172
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> chisq.test(tb_fams)

	Pearson's Chi-squared test

data:  tb_fams
X-squared = 66.008, df = 2, p-value = 4.64e-15

> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(tibble)
Warning message:
package ‘tibble’ was built under R version 3.6.2 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full$Title <- Title
> full$Fam_sizeD <- Fam_sizeD
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train_logit3 <- glm(Survived ~ Pclass + Sex + Age + SibSp + Parch + 
+     Fare + Embarked + Fam_sizeD + Title , family = "binomial", data = full[1:891, ])
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> summary(train_logit3)

Call:
glm(formula = Survived ~ Pclass + Sex + Age + SibSp + Parch + 
    Fare + Embarked + Fam_sizeD + Title, family = "binomial", 
    data = full[1:891, ])

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.4136  -0.5627  -0.3853   0.5601   2.6098  

Coefficients:
                     Estimate Std. Error z value Pr(>|z|)    
(Intercept)          3.773032   1.203254   3.136  0.00171 ** 
Pclass              -1.020774   0.156427  -6.526 6.77e-11 ***
Sexmale            -14.968711 678.986234  -0.022  0.98241    
Age                 -0.024834   0.008430  -2.946  0.00322 ** 
SibSp               -0.470151   0.204779  -2.296  0.02168 *  
Parch               -0.280594   0.189618  -1.480  0.13893    
Fare                 0.003747   0.002634   1.423  0.15476    
EmbarkedQ            0.075529   0.399901   0.189  0.85019    
EmbarkedS           -0.312097   0.250421  -1.246  0.21266    
Fam_sizeDSingleton   0.659994   1.042258   0.633  0.52658    
Fam_sizeDSmall       0.868410   0.796907   1.090  0.27583    
TitleMr             12.111790 678.986296   0.018  0.98577    
TitleMrs             0.632637   0.352528   1.795  0.07272 .  
TitleService        12.122181 678.986083   0.018  0.98576    
TitleUpper          15.229235 678.986389   0.022  0.98211    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 1186.66  on 890  degrees of freedom
Residual deviance:  729.93  on 876  degrees of freedom
AIC: 759.93

Number of Fisher Scoring iterations: 14

> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train_predict3 <- predict(train_logit3, full[1:891], type = "response")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> result3 <- prediction(train_predict3, train$Survived)
> evaluation3 <- performance(result3, "acc")
> plot(evaluation3)
> abline(v = 0.6, col = "red")
> abline(h = 0.81, col = "red")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> max_index3 <- which.max(slot(evaluation3, "y.values")[[1]])
> max_index3
[1] 287
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> acc3 <- slot(evaluation3, "y.values")[[1]][max_index3]
> cut_off3 <- slot(evaluation3, "x.values")[[1]][max_index3]
> print(c(Accuracy = acc3, Cutoff = cut_off3))
  Accuracy Cutoff.775 
 0.8417508  0.5875076 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train_outcome3<- ifelse(train_predict3 > 0.6291, 1, 0)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> conf_table3 <- table(train$Survived, train_outcome3)
> conf_table3
   train_outcome3
      0   1
  0 512  37
  1 106 236
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> conf_table3[2,2]/sum(conf_table3[,2])
[1] 0.8644689
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> conf_table3[2,1]/sum(conf_table3[,1])
[1] 0.171521
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> auc3 <- performance(result3, "auc") %>%
+         slot(., "y.values") %>%
+         unlist() %>%
+         round(., 4)
> auc3
[1] 0.8752
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> roc3 <- performance(result3, "tpr", "fpr")
> plot(roc3, colorize = T)
> abline(a = 0, b = 1, col = "grey")
> legend(0.85, 0.2, auc3, title = "AUC3")
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> auc2
[1] 0.8582
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> pR2(train_logit3)
fitting null model for pseudo-r2
         llh      llhNull           G2     McFadden         r2ML         r2CU 
-364.9666475 -593.3275684  456.7218418    0.3848817    0.4010605    0.5449157 
> pR2(train_logit2)
fitting null model for pseudo-r2
         llh      llhNull           G2     McFadden         r2ML         r2CU 
-392.5137938 -593.3275684  401.6275491    0.3384535    0.3628565    0.4930085 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(rpart)
> library(rattle)
Loading required package: bitops
Rattle: A free graphical interface for data science with R.
Version 5.4.0 Copyright (c) 2006-2020 Togaware Pty Ltd.
Type 'rattle()' to shake, rattle, and roll your data.
Warning message:
package ‘rattle’ was built under R version 3.6.2 
> library(rpart.plot)
> library(RColorBrewer)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train_tree <- rpart(formula = Survived ~ as.factor(Pclass) + Sex + Age + SibSp + Parch + 
+     Fare + Embarked + Fam_sizeD + Title, data = full[1:891, ], method = "class")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> fancyRpartPlot(train_tree)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> tree_predict <- predict(train_tree, data = full[1:891, ], type = "class")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> conf_table4 <- table(train$Survived, tree_predict)
> conf_table4
   tree_predict
      0   1
  0 509  40
  1 104 238
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> conf_table4[2,2]/sum(conf_table4[,2])
[1] 0.8561151
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> conf_table4[2,1]/sum(conf_table4[,1])
[1] 0.1696574
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:rattle’:

    importance

The following object is masked from ‘package:dplyr’:

    combine

The following object is masked from ‘package:ggplot2’:

    margin

> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(dplyr)
> full = full %>% mutate_if(is.character, as.factor)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> set.seed(111)
> train_rf <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + 
+     Fare + Embarked + Fam_sizeD + Title, data = full[1:891, ], importance = T)
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train_rf$confusion
    0   1 class.error
0 494  55   0.1001821
1 100 242   0.2923977
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> varImpPlot(train_rf)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> plot(train_rf, ylim = c(0, 0.36))
> 
> legend("topright", colnames(train_rf$err.rate), col = 1:3, fill = 1:3)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> test_predict <- predict(train_rf, full[892:1309, ])
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Save the solution to a dataframe with two columns: PassengerId and Survived (prediction)
> solution <- data.frame(PassengerID = test$PassengerId, Survived = test_predict)
> 
> # Write the solution to file
> write.csv(solution, file = 'rf_Solution.csv', row.names = F)
> 
> 
> proc.time()
   user  system elapsed 
 11.880   0.364   4.953 
