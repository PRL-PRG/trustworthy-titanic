
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #Hello to everyone, I am an Aeronautical Engineer working as Research Assistant.
> #This is my very first code in kaggle and also in my life time and i would like to thank the kagglers for your submissions.They gave me some good idea about the codings.
> 
> ##Loading of all Libraries##
> 
> library('dplyr') # Data Manipulation

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library('mice') # Data Imputaion

Attaching package: ‘mice’

The following objects are masked from ‘package:base’:

    cbind, rbind

Warning message:
package ‘mice’ was built under R version 3.6.2 
> library('ggplot2') # Data Visualization
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library('ggthemes') # Data Visualization
> library('Hmisc') # Exploratory Analysis
Loading required package: lattice
Loading required package: survival
Loading required package: Formula

Attaching package: ‘Hmisc’

The following objects are masked from ‘package:dplyr’:

    src, summarize

The following objects are masked from ‘package:base’:

    format.pval, units

Warning message:
package ‘survival’ was built under R version 3.6.2 
> library('caret') # Classification and Regression

Attaching package: ‘caret’

The following object is masked from ‘package:survival’:

    cluster

> library('randomForest') # Classification and Regression
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

The following object is masked from ‘package:dplyr’:

    combine

> library('e1071') # Statistical Methods

Attaching package: ‘e1071’

The following object is masked from ‘package:Hmisc’:

    impute

> 
> ##Loading and Consolidation of Data##
> 
> train <- read.csv('../input/train.csv', stringsAsFactors = F)
> test  <- read.csv('../input/test.csv', stringsAsFactors = F)
> 
> ##Joining of Training and Testing Dataset##
> 
> Titanic <- bind_rows(train, test)
> 
> ##Summary of Whole Titanic Dataset##
> 
> summary(Titanic)
  PassengerId      Survived          Pclass          Name          
 Min.   :   1   Min.   :0.0000   Min.   :1.000   Length:1309       
 1st Qu.: 328   1st Qu.:0.0000   1st Qu.:2.000   Class :character  
 Median : 655   Median :0.0000   Median :3.000   Mode  :character  
 Mean   : 655   Mean   :0.3838   Mean   :2.295                     
 3rd Qu.: 982   3rd Qu.:1.0000   3rd Qu.:3.000                     
 Max.   :1309   Max.   :1.0000   Max.   :3.000                     
                NA's   :418                                        
     Sex                 Age            SibSp            Parch      
 Length:1309        Min.   : 0.17   Min.   :0.0000   Min.   :0.000  
 Class :character   1st Qu.:21.00   1st Qu.:0.0000   1st Qu.:0.000  
 Mode  :character   Median :28.00   Median :0.0000   Median :0.000  
                    Mean   :29.88   Mean   :0.4989   Mean   :0.385  
                    3rd Qu.:39.00   3rd Qu.:1.0000   3rd Qu.:0.000  
                    Max.   :80.00   Max.   :8.0000   Max.   :9.000  
                    NA's   :263                                     
    Ticket               Fare            Cabin             Embarked        
 Length:1309        Min.   :  0.000   Length:1309        Length:1309       
 Class :character   1st Qu.:  7.896   Class :character   Class :character  
 Mode  :character   Median : 14.454   Mode  :character   Mode  :character  
                    Mean   : 33.295                                        
                    3rd Qu.: 31.275                                        
                    Max.   :512.329                                        
                    NA's   :1                                              
> 
> ##To Understand the Structure of the Dataset##
> 
> str(Titanic) 
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
> 
> ##To know the Missing Values in given Dataset##
> 
> colSums(Titanic=='')
PassengerId    Survived      Pclass        Name         Sex         Age 
          0          NA           0           0           0          NA 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0          NA        1014           2 
> 
> ##To know the number of NA in dataset#
> 
> colSums(is.na(Titanic))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0         418           0           0           0         263 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           1           0           0 
> 
> ##Data Visualization (start with the first variable "Pclass", which gives the basic understanding of this survival Analysis)##
> 
> ggplot(Titanic[1:891,],aes(x = Pclass,fill=factor(Survived))) +
+                         geom_bar() + ggtitle("Pclass versus Survival Rate")+
+                           xlab("Pclass") + ylab("Count") + labs(fill = "Survived")
>  # The Visualization Clearly explains the 1st class peoples had a better surviaval rate than other class#
> ##Feature Analysis on Name##
> 
> Titanic$Title <- gsub('(.*, )|(\\..*)', '',Titanic$Name)
> 
> table(Titanic$Title)

        Capt          Col          Don         Dona           Dr     Jonkheer 
           1            4            1            1            8            1 
        Lady        Major       Master         Miss         Mlle          Mme 
           1            2           61          260            2            1 
          Mr          Mrs           Ms          Rev          Sir the Countess 
         757          197            2            8            1            1 
> 
> table(Titanic$Sex, Titanic$Title)
        
         Capt Col Don Dona  Dr Jonkheer Lady Major Master Miss Mlle Mme  Mr Mrs
  female    0   0   0    1   1        0    1     0      0  260    2   1   0 197
  male      1   4   1    0   7        1    0     2     61    0    0   0 757   0
        
          Ms Rev Sir the Countess
  female   2   0   0            1
  male     0   8   1            0
> 
>  # combine and Replace the small titles for understanding#
> Titanic$Title[Titanic$Title == 'Ms'] <- 'Miss'
> Titanic$Title[Titanic$Title == 'Lady'] <- 'Miss'
> Titanic$Title[Titanic$Title == 'Mme'] <- 'Mrs'
> Titanic$Title[Titanic$Title == 'Mlle'] <- 'Miss'
> 
> rare_title <- c('Dona','the Countess','Capt', 'Col', 'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
> 
> Titanic$Title[Titanic$Title %in% rare_title]  <- 'Officer'
> 
> table(Titanic$Sex, Titanic$Title)
        
         Master Miss  Mr Mrs Officer
  female      0  265   0 198       3
  male       61    0 757   0      25
> 
>  
> ggplot(Titanic[1:891,],aes(x = Title,fill=factor(Survived))) +
+                         geom_bar() + ggtitle("Title Versus Survival rate")+
+                          xlab("Title") + ylab("Count") + labs(fill = "Survived") 
>  # The above plot proves the female has a very good survuival rate"
> 
> ##Exploratory analysis on Age##
> 
> sum(is.na(Titanic$Age))
[1] 263
> 
>  # Conveting the Useful variables into factors#
> 
> variables <- c('PassengerId','Pclass','Sex','Embarked','Title')
> 
> Titanic[variables] <- lapply(Titanic[variables], function(x) as.factor(x))
> 
>  #Imputation#
> 
> mice_mod <- mice(Titanic[, !names(Titanic) %in% c('PassengerId','Name','Ticket','Cabin','Sibsp','Parch','Survived','Fare')], method='rf') 

 iter imp variable
  1   1  Age
  1   2  Age
  1   3  Age
  1   4  Age
  1   5  Age
  2   1  Age
  2   2  Age
  2   3  Age
  2   4  Age
  2   5  Age
  3   1  Age
  3   2  Age
  3   3  Age
  3   4  Age
  3   5  Age
  4   1  Age
  4   2  Age
  4   3  Age
  4   4  Age
  4   5  Age
  5   1  Age
  5   2  Age
  5   3  Age
  5   4  Age
  5   5  Age
> 
> mice_output <- complete(mice_mod)
> 
>  #Comparison of oth original and mice age data#
> 
> hist(Titanic$Age, freq=F, main='Original Age ',col='darkgreen', ylim=c(0,0.05))
> 
> hist(mice_output$Age, freq=F, main='MICE Output Age',col='Red', ylim=c(0,0.05))
>  # the comparison of data almost same so we can use the impute the mice age into original dataset#
> 
> Titanic$Age <- mice_output$Age
> 
> sum(is.na(Titanic$Age))
[1] 0
> 
> ggplot(Titanic[1:891,], aes(Age, fill = factor(Survived))) + 
+                           geom_histogram() + facet_grid(.~Sex) + theme_few()
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
> 
> ##Feature Analysis on Family Size using the Passenger, SibSp and Parch Data##
> 
> Titanic$FamilySize <-Titanic$SibSp + Titanic$Parch + 1
> 
> Titanic$FamilySized[Titanic$FamilySize == 1]   <- 'Single'
> Titanic$FamilySized[Titanic$FamilySize < 5 & Titanic$FamilySize >= 2]   <- 'Small'
> Titanic$FamilySized[Titanic$FamilySize >= 5]   <- 'Big'
> 
> Titanic$FamilySized=as.factor(Titanic$FamilySized)
> 
> ggplot(Titanic[1:891,],aes(x = FamilySized,fill=factor(Survived))) +
+                         geom_bar() + ggtitle("Family Size V/S Survival Rate") +
+                           xlab("FamilySize") + ylab("Total Count") + labs(fill = "Survived")
>  # Single and Small size family has a good surviaval rate than big family#
> 
> ##Exploratory analysis on Embarked##
> 
> table(Titanic$Embarked)

      C   Q   S 
  2 270 123 914 
> 
> Titanic$Embarked[Titanic$Embarked ==''] = 'S'
> 
> table(Titanic$Embarked)

      C   Q   S 
  0 270 123 916 
>  
> ggplot(Titanic[1:891,],aes(x = Embarked,fill=factor(Survived))) +
+                         geom_bar() + ggtitle("Embarked vs Survival") +
+                           xlab("Embarked") + ylab("Total Count") + labs(fill = "Survived") 
> 
> ##Spliting the data into a training set and a testing set##
> 
> Train <- Titanic[1:600,]
> 
> Train_1 <- Titanic[601:891,]
>  #30 percent of data has been splited to cross verify the result#
> 
> Test <- Titanic[892:1309,]
> 
> # Set a random seed
> 
> set.seed(754)
> 
> ## Model Building##
> 
> Model <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + 
+                           Embarked + Title +FamilySized,data = Train)
> 
> ##Get importance##
> 
> importance    <- importance(Model)
> 
> varImportance <- data.frame(Variables = row.names(importance), 
+                             Importance = round(importance[ ,'MeanDecreaseGini'],2))
> 
> ##**Predict using the train_1 set (For Cross Verification)**##
>  #prediction <- predict(Model, Train_1)#
>  #solution <- data.frame(PassengerID = Train_1$PassengerId, Survived = prediction)#
>  #write.csv(solution, file = 'Solution_Train_1.csv', row.names = F)#
>  # The model accuracy is 82 percent#
>  
> ##Predict using the test set##
> 
> prediction <- predict(Model, Test)
> 
> ##Save the solution to a dataframe##
> 
> solution <- data.frame(PassengerID = Test$PassengerId, Survived = prediction)
> 
> ##Write the solution to file##
> 
> write.csv(solution, file = 'Solution_Test.csv', row.names = F)
> 
> proc.time()
   user  system elapsed 
  4.929   0.365   5.369 
