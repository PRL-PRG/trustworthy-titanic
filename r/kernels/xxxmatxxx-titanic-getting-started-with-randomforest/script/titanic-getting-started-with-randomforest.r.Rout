
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> library("ggplot2") # Data visualization
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library("readr") # CSV file I/O, e.g. the read_csv function
> library("ggthemes") # Data visualization
> library("scales") # Data visualization

Attaching package: ‘scales’

The following object is masked from ‘package:readr’:

    col_factor

Warning message:
package ‘scales’ was built under R version 3.6.2 
> library("dplyr") # Data manipulation

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library("mice") # Imputation

Attaching package: ‘mice’

The following objects are masked from ‘package:base’:

    cbind, rbind

Warning message:
package ‘mice’ was built under R version 3.6.2 
> library("randomForest") # Classification Algorithm
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:dplyr’:

    combine

The following object is masked from ‘package:ggplot2’:

    margin

> 
> system("ls ../input")
gender_submission.csv
test.csv
train.csv
> 
> 
> 
> # Start with train data and read it
> train <- read.csv("../input/train.csv", stringsAsFactors = F)
> test <- read.csv("../input/test.csv", stringsAsFactors = F)
> 
> #combine test and train datasets
> full <- bind_rows(train,test)
> 
> # check data
> str(train)
'data.frame':	891 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
> str(test)
'data.frame':	418 obs. of  11 variables:
 $ PassengerId: int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass     : int  3 3 2 3 3 3 3 2 3 3 ...
 $ Name       : chr  "Kelly, Mr. James" "Wilkes, Mrs. James (Ellen Needs)" "Myles, Mr. Thomas Francis" "Wirz, Mr. Albert" ...
 $ Sex        : chr  "male" "female" "male" "male" ...
 $ Age        : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp      : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch      : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket     : chr  "330911" "363272" "240276" "315154" ...
 $ Fare       : num  7.83 7 9.69 8.66 12.29 ...
 $ Cabin      : chr  "" "" "" "" ...
 $ Embarked   : chr  "Q" "S" "Q" "S" ...
> str(full)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
> 
> head(full)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked
1        A/5 21171  7.2500              S
2         PC 17599 71.2833   C85        C
3 STON/O2. 3101282  7.9250              S
4           113803 53.1000  C123        S
5           373450  8.0500              S
6           330877  8.4583              Q
> 
> #Extract the Title from Name and make new variable from it
> full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
> 
> #See the title counts by sex 
> table(full$Sex, full$Title)
        
         Capt Col Don Dona  Dr Jonkheer Lady Major Master Miss Mlle Mme  Mr Mrs
  female    0   0   0    1   1        0    1     0      0  260    2   1   0 197
  male      1   4   1    0   7        1    0     2     61    0    0   0 757   0
        
          Ms Rev Sir the Countess
  female   2   0   0            1
  male     0   8   1            0
> 
> # Combined very low cell title counts
> rare_title <- c("Dona", "Lady", "the Countess", "Capt", "Col", "Don", "Dr", "Major", "Rev", "Sir", "Jonkheer")
> 
> # Reassing Mlle, Ms, Mme accordingly
> full$Title[full$Title == "Mlle"]  <- "Miss"
> full$Title[full$Title == "Ms"]  <- "Miss"
> full$Title[full$Title == "Mme"]  <- "Mrs"
> full$Title[full$Title %in% rare_title]  <- "Rare"
> 
> #See the title by sex again
> table(full$Sex, full$Title)
        
         Master Miss  Mr Mrs Rare
  female      0  264   0 198    4
  male       61    0 757   0   25
> 
> #Extract the Surname from Name and make new variable from it
> full$Surname <- sapply(full$Name,
+                        function(x) strsplit(x, split = "[,.]")[[1]][1])
> #Lets see our data again
> head(full)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked Title   Surname
1        A/5 21171  7.2500              S    Mr    Braund
2         PC 17599 71.2833   C85        C   Mrs   Cumings
3 STON/O2. 3101282  7.9250              S  Miss Heikkinen
4           113803 53.1000  C123        S   Mrs  Futrelle
5           373450  8.0500              S    Mr     Allen
6           330877  8.4583              Q    Mr     Moran
> 
> #Create a family size variable including the passenger themselves
> full$Fsize <- full$SibSp + full$Parch +1
> 
> #Create a family variable
> full$Family <- paste(full$Surname, full$Fsize, sep="_")
> 
> # Use ggplot to Visualize
> ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) +
+     geom_bar(stat = "count", position = "dodge") +
+         scale_x_continuous(breaks=c(1:11)) +
+             labs(x = "Family Size") + 
+                 theme_few()
> 
> #Collapse and Discretized Family Size
> full$FsizeD[full$Fsize == 1] <- "Single"
> full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- "Small"
> full$FsizeD[full$Fsize >4 ] <- "Large"
> 
> #Show Discretized Family Size by Survival using mosaic plot
> mosaicplot(table(full$FsizeD, full$Survived), main = "Family Size by Survival", shade = TRUE)
> 
> #Lets check passenger cabin (seems have a lot of missing value)
> full$Cabin[1:28]
 [1] ""            "C85"         ""            "C123"        ""           
 [6] ""            "E46"         ""            ""            ""           
[11] "G6"          "C103"        ""            ""            ""           
[16] ""            ""            ""            ""            ""           
[21] ""            "D56"         ""            "A6"          ""           
[26] ""            ""            "C23 C25 C27"
> 
> #The first character is the deck, lets take a look
> strsplit(full$Cabin[2], NULL)[[1]]
[1] "C" "8" "5"
> 
> #Create Deck variable
> full$Deck <- factor(sapply(full$Cabin, function(x) strsplit(x, NULL)
+                             [[1]][1]))
> 
> #Lets take a look at our data again
> head(full)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked Title   Surname Fsize      Family
1        A/5 21171  7.2500              S    Mr    Braund     2    Braund_2
2         PC 17599 71.2833   C85        C   Mrs   Cumings     2   Cumings_2
3 STON/O2. 3101282  7.9250              S  Miss Heikkinen     1 Heikkinen_1
4           113803 53.1000  C123        S   Mrs  Futrelle     2  Futrelle_2
5           373450  8.0500              S    Mr     Allen     1     Allen_1
6           330877  8.4583              Q    Mr     Moran     1     Moran_1
  FsizeD Deck
1  Small <NA>
2  Small    C
3 Single <NA>
4  Small    C
5 Single <NA>
6 Single <NA>
> 
> #Passenger 62 and 830 missing embarkment
> full [c(62,830),]
    PassengerId Survived Pclass                                      Name
62           62        1      1                       Icard, Miss. Amelie
830         830        1      1 Stone, Mrs. George Nelson (Martha Evelyn)
       Sex Age SibSp Parch Ticket Fare Cabin Embarked Title Surname Fsize
62  female  38     0     0 113572   80   B28           Miss   Icard     1
830 female  62     0     0 113572   80   B28            Mrs   Stone     1
     Family FsizeD Deck
62  Icard_1 Single    B
830 Stone_1 Single    B
> 
> #Get rid of missing passenger ID
> embark_fare <- full %>% 
+     filter(PassengerId != 62 & PassengerId != 830)
> 
> #Use ggplot2 to visulize embarkment, passenger class and median fare
> ggplot(embark_fare, aes(x = Embarked, y = Fare, fill= factor(Pclass)))+
+    geom_boxplot() +
+         geom_hline(aes(yintercept = 80), colour = "red", linetype = "dashed", lwd = 2) +
+             scale_y_continuous(labels = dollar_format()) +
+                 theme_few()
Warning message:
Removed 1 rows containing non-finite values (stat_boxplot). 
> 
> 
> 
> #Since their fare is 80 for 1st class, they most likely to embarked from 'C', lets fill it!
> full$Embarked[c(62,830)] <- "C"
> 
> #Passenger 1044 missing Fare
> full[1044, ]
     PassengerId Survived Pclass               Name  Sex  Age SibSp Parch
1044        1044       NA      3 Storey, Mr. Thomas male 60.5     0     0
     Ticket Fare Cabin Embarked Title Surname Fsize   Family FsizeD Deck
1044   3701   NA              S    Mr  Storey     1 Storey_1 Single <NA>
> 
> #Visualize fare among 3rd Class and S Embarkment
> ggplot(full[full$Pclass == '3' & full$Embarked == 'S', ],
+         aes(x = Fare)) +
+         geom_density(fill = "#99d6ff", alpha = 0.4) +
+         geom_vline (aes(xintercept = median(Fare, na.rm=T)),
+                    colour = "red", linetyp = "dashed", lwd =1) +
+         scale_x_continuous(labels = dollar_format()) + 
+                      theme_few()
Warning messages:
1: Ignoring unknown parameters: linetyp 
2: Removed 1 rows containing non-finite values (stat_density). 
> 
> #Replacing missing value of Fare with median Fare of class/embarkment
> full$Fare[1044] <- median(full[full$Pclass == "3" & full$Embarked == "S",]$Fare, na.rm = TRUE)
> 
> #Lets see our data now
> str(full)
'data.frame':	1309 obs. of  18 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
 $ Title      : chr  "Mr" "Mrs" "Miss" "Mrs" ...
 $ Surname    : chr  "Braund" "Cumings" "Heikkinen" "Futrelle" ...
 $ Fsize      : num  2 2 1 2 1 1 1 5 3 2 ...
 $ Family     : chr  "Braund_2" "Cumings_2" "Heikkinen_1" "Futrelle_2" ...
 $ FsizeD     : chr  "Small" "Small" "Single" "Small" ...
 $ Deck       : Factor w/ 8 levels "A","B","C","D",..: NA 3 NA 3 NA NA 5 NA NA NA ...
> 
> #See number of missing value on Age
> sum(is.na(full$Age))
[1] 263
> 
> # Make variables into factors
> factor_vars <- c("PassengerId", "Pclass", "Sex", "Embarked", "Title", "Surname", "Family","FsizeD")
> 
> full[factor_vars] <- lapply(full[factor_vars], function(x) as.factor(x))
> 
> # Lets see our data again
> str(full)
'data.frame':	1309 obs. of  18 variables:
 $ PassengerId: Factor w/ 1309 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ Title      : Factor w/ 5 levels "Master","Miss",..: 3 4 2 4 3 3 3 1 4 4 ...
 $ Surname    : Factor w/ 875 levels "Abbing","Abbott",..: 101 183 335 273 16 544 506 614 388 565 ...
 $ Fsize      : num  2 2 1 2 1 1 1 5 3 2 ...
 $ Family     : Factor w/ 928 levels "Abbing_1","Abbott_3",..: 106 191 358 287 16 579 539 654 419 602 ...
 $ FsizeD     : Factor w/ 3 levels "Large","Single",..: 3 3 2 3 2 2 2 1 3 3 ...
 $ Deck       : Factor w/ 8 levels "A","B","C","D",..: NA 3 NA 3 NA NA 5 NA NA NA ...
> 
> #Set a random seed
> set.seed(129)
> 
> #Perform mice imputation, excluidng less than seful variables
> mice_mod <- mice(full[, !names(full) %in% c("PassengerId","Name","Ticket","Cabin","Family","Surname","Survived")], method = "rf")

 iter imp variable
  1   1  Age  Deck
  1   2  Age  Deck
  1   3  Age  Deck
  1   4  Age  Deck
  1   5  Age  Deck
  2   1  Age  Deck
  2   2  Age  Deck
  2   3  Age  Deck
  2   4  Age  Deck
  2   5  Age  Deck
  3   1  Age  Deck
  3   2  Age  Deck
  3   3  Age  Deck
  3   4  Age  Deck
  3   5  Age  Deck
  4   1  Age  Deck
  4   2  Age  Deck
  4   3  Age  Deck
  4   4  Age  Deck
  4   5  Age  Deck
  5   1  Age  Deck
  5   2  Age  Deck
  5   3  Age  Deck
  5   4  Age  Deck
  5   5  Age  Deck
Warning message:
Number of logged events: 50 
> 
> #Save the complet output
> mice_output <- complete(mice_mod)
> 
> #Visualize age distribution
> par(mfrow = c(1,2))
> hist(full$Age, freq = F, main="Age: Original Data",
+     col = "darkgreen", ylim=c(0,0.04))
> hist(mice_output$Age, freq=F, main="Age:Mice Output",
+     col = "lightgreen", ylim=c(0,0.04))
> 
> #Replace age variable from mice model
> full$Age <- mice_output$Age
> 
> # Show new number of missing Age values
> sum(is.na(full$Age))
[1] 0
> 
> # Create the column child, and indicate whether child or adult
> full$Child[full$Age < 18] <- 'Child'
> full$Child[full$Age >= 18] <- 'Adult'
> 
> # Show counts of child by survival
> table(full$Child, full$Survived)
       
          0   1
  Adult 482 274
  Child  67  68
> 
> # Adding Mother variable
> full$Mother <- 'Not Mother'
> full$Mother[full$Sex == 'female' & full$Parch > 0 & full$Age > 18 & full$Title != 'Miss'] <- 'Mother'
> 
> # Show counts of mother by survival
> table(full$Mother, full$Survived)
            
               0   1
  Mother      16  39
  Not Mother 533 303
> 
> # Finish the new variable by factorizing it
> full$Child  <- factor(full$Child)
> full$Mother <- factor(full$Mother)
> 
> head(full)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  26     0     0
            Ticket    Fare Cabin Embarked Title   Surname Fsize      Family
1        A/5 21171  7.2500              S    Mr    Braund     2    Braund_2
2         PC 17599 71.2833   C85        C   Mrs   Cumings     2   Cumings_2
3 STON/O2. 3101282  7.9250              S  Miss Heikkinen     1 Heikkinen_1
4           113803 53.1000  C123        S   Mrs  Futrelle     2  Futrelle_2
5           373450  8.0500              S    Mr     Allen     1     Allen_1
6           330877  8.4583              Q    Mr     Moran     1     Moran_1
  FsizeD Deck Child     Mother
1  Small <NA> Adult Not Mother
2  Small    C Adult Not Mother
3 Single <NA> Adult Not Mother
4  Small    C Adult Not Mother
5 Single <NA> Adult Not Mother
6 Single <NA> Adult Not Mother
> str(full)
'data.frame':	1309 obs. of  20 variables:
 $ PassengerId: Factor w/ 1309 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 26 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : Factor w/ 3 levels "C","Q","S": 3 1 3 3 3 2 3 3 3 1 ...
 $ Title      : Factor w/ 5 levels "Master","Miss",..: 3 4 2 4 3 3 3 1 4 4 ...
 $ Surname    : Factor w/ 875 levels "Abbing","Abbott",..: 101 183 335 273 16 544 506 614 388 565 ...
 $ Fsize      : num  2 2 1 2 1 1 1 5 3 2 ...
 $ Family     : Factor w/ 928 levels "Abbing_1","Abbott_3",..: 106 191 358 287 16 579 539 654 419 602 ...
 $ FsizeD     : Factor w/ 3 levels "Large","Single",..: 3 3 2 3 2 2 2 1 3 3 ...
 $ Deck       : Factor w/ 8 levels "A","B","C","D",..: NA 3 NA 3 NA NA 5 NA NA NA ...
 $ Child      : Factor w/ 2 levels "Adult","Child": 1 1 1 1 1 1 1 2 1 2 ...
 $ Mother     : Factor w/ 2 levels "Mother","Not Mother": 2 2 2 2 2 2 2 2 1 2 ...
> 
> md.pattern(full)
    PassengerId Pclass Name Sex Age SibSp Parch Ticket Fare Cabin Embarked
204           1      1    1   1   1     1     1      1    1     1        1
687           1      1    1   1   1     1     1      1    1     1        1
91            1      1    1   1   1     1     1      1    1     1        1
327           1      1    1   1   1     1     1      1    1     1        1
              0      0    0   0   0     0     0      0    0     0        0
    Title Surname Fsize Family FsizeD Child Mother Survived Deck     
204     1       1     1      1      1     1      1        1    1    0
687     1       1     1      1      1     1      1        1    0    1
91      1       1     1      1      1     1      1        0    1    1
327     1       1     1      1      1     1      1        0    0    2
        0       0     0      0      0     0      0      418 1014 1432
> 
> # Split the data back into a train set and a test set
> train <- full[1:891,]
> test <- full[892:1309,]
> 
> # Set a random seed
> set.seed(754)
> 
> # Build the model (note: not all possible variables are used)
> rf_model <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked+
+                          Title + FsizeD + Child + Mother,
+                          data = train)
> 
> # Show model error
> plot(rf_model, ylim=c(0,0.36))
> legend('topright', colnames(rf_model$err.rate), col=1:3, fill=1:3)
> 
> # Get importance
> importance    <- importance(rf_model)
> varImportance <- data.frame(Variables = row.names(importance), 
+                             Importance = round(importance[ ,'MeanDecreaseGini'],2))
> 
> # Create a rank variable based on importance
> rankImportance <- varImportance %>%
+   mutate(Rank = paste0('#',dense_rank(desc(Importance))))
> 
> # Use ggplot2 to visualize the relative importance of variables
> ggplot(rankImportance, aes(x = reorder(Variables, Importance), 
+     y = Importance, fill = Importance)) +
+   geom_bar(stat='identity') + 
+   geom_text(aes(x = Variables, y = 0.5, label = Rank),
+     hjust=0, vjust=0.55, size = 4, colour = 'red') +
+   labs(x = 'Variables') +
+   coord_flip() + 
+   theme_few()
> 
> # Predict using the test set
> prediction <- predict(rf_model, test)
> 
> # Save the solution to a dataframe with two columns: PassengerId and Survived (prediction)
> solution <- data.frame(PassengerID = test$PassengerId, Survived = prediction)
> 
> # Write the solution to file
> write.csv(solution, file = 'Titanic_Solution.csv', row.names = F)
> 
> # Lets take a look of solution
> head(solution)
    PassengerID Survived
892         892        0
893         893        0
894         894        0
895         895        0
896         896        0
897         897        0
> 
> 
> 
> proc.time()
   user  system elapsed 
 71.030   2.480  76.237 
