
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # This script trains a Random Forest model based on the data,
> # saves a sample submission, and plots the relative importance
> # of the variables in making predictions
> 
> # Download 1_random_forest_r_submission.csv from the output below
> # and submit it through https://www.kaggle.com/c/titanic-gettingStarted/submissions/attach
> # to enter this getting started competition!
> 
> library(ggplot2)
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

> 
> set.seed(1)
> train <- read.csv("../input/train.csv", stringsAsFactors=FALSE)
> test  <- read.csv("../input/test.csv",  stringsAsFactors=FALSE)
> 
> extractFeatures <- function(data) {
+   features <- c("Pclass",
+                 "Age",
+                 "Sex",
+                 "Parch",
+                 "SibSp",
+                 "Fare",
+                 "Embarked")
+   fea <- data[,features]
+   fea$Age[is.na(fea$Age)] <- -1
+   fea$Fare[is.na(fea$Fare)] <- median(fea$Fare, na.rm=TRUE)
+   fea$Embarked[fea$Embarked==""] = "S"
+   fea$Sex      <- as.factor(fea$Sex)
+   fea$Embarked <- as.factor(fea$Embarked)
+   return(fea)
+ }
> 
> rf <- randomForest(extractFeatures(train), as.factor(train$Survived), ntree=100, importance=TRUE)
> 
> submission <- data.frame(PassengerId = test$PassengerId)
> submission$Survived <- predict(rf, extractFeatures(test))
> write.csv(submission, file = "1_random_forest_r_submission.csv", row.names=FALSE)
> 
> imp <- importance(rf, type=1)
> featureImportance <- data.frame(Feature=row.names(imp), Importance=imp[,1])
> 
> p <- ggplot(featureImportance, aes(x=reorder(Feature, Importance), y=Importance)) +
+      geom_bar(stat="identity", fill="#53cfff") +
+      coord_flip() + 
+      theme_light(base_size=20) +
+      xlab("") +
+      ylab("Importance") + 
+      ggtitle("Random Forest Feature Importance\n") +
+      theme(plot.title=element_text(size=18))
> 
> ggsave("2_feature_importance.png", p)
Saving 7 x 7 in image
> 
> proc.time()
   user  system elapsed 
  1.064   0.138   1.229 
