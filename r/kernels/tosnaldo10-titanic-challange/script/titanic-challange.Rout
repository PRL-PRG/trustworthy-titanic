
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #Titanic Challenge_
> #The below script is my first attempt at R and predictive modelling.
> #I work with in a data environment and have always had questions of why business does not use more then just the variables.
> #What i know now after my attempted model through the help of the Kaggle community is that there is value to be found and that we can learn from past events.
> #
> #
> #My approach was to focus on all variables that would help with identifying the positioning of people the time they realized the ship was sinking.
> #we have heard the term when something bad happens that he/she was in the wrong place at the wrong time and there is a lot of thuth in this hence my angle of approach.
> #
> #I tried keeping the code simple so that hopefully one person with no experience in R or predictive modeling can find some once of value in it.
> #
> #
> #
> #load packages
> library('ggplot2')  
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library('caret') 
Loading required package: lattice
> library('dplyr')

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library('rpart')
> library('rpart.plot')
> library('car')
Loading required package: carData

Attaching package: ‘car’

The following object is masked from ‘package:dplyr’:

    recode

Warning messages:
1: package ‘car’ was built under R version 3.6.2 
2: package ‘carData’ was built under R version 3.6.2 
> library('e1071')
> library('randomForest')
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:dplyr’:

    combine

The following object is masked from ‘package:ggplot2’:

    margin

> library('ggthemes') 
> #Importing Data
> train.tit <- read.csv('../input/train.csv', stringsAsFactors = F)
> test.tit  <- read.csv('../input/test.csv', stringsAsFactors = F)
> test.tit$Survived <- rep(0, 418)
> str(test.tit)
'data.frame':	418 obs. of  12 variables:
 $ PassengerId: int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass     : int  3 3 2 3 3 3 3 2 3 3 ...
 $ Name       : chr  "Kelly, Mr. James" "Wilkes, Mrs. James (Ellen Needs)" "Myles, Mr. Thomas Francis" "Wirz, Mr. Albert" ...
 $ Sex        : chr  "male" "female" "male" "male" ...
 $ Age        : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp      : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch      : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket     : chr  "330911" "363272" "240276" "315154" ...
 $ Fare       : num  7.83 7 9.69 8.66 12.29 ...
 $ Cabin      : chr  "" "" "" "" ...
 $ Embarked   : chr  "Q" "S" "Q" "S" ...
 $ Survived   : num  0 0 0 0 0 0 0 0 0 0 ...
> 
> #combining the two files but analysis will be done on the first 891 observations
> #combo  <- bind_rows(train, test) # bind training & test data
> combo <- rbind(train.tit, test.tit)
> 
> str(combo)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : num  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
> 
> #Checking for missing values in each variables and  doing imputation on Embarked
> colSums(is.na(combo))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0           0           0           0           0         263 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           1           0           0 
> colSums(combo=='')
PassengerId    Survived      Pclass        Name         Sex         Age 
          0           0           0           0           0          NA 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0          NA        1014           2 
> combo$Embarked[combo$Embarked==""]="S"
> table(combo$Embarked)

  C   Q   S 
270 123 916 
> 
> #variables(Survived,Age,Cabin and Embarked) has missing and no values
> 
> 
> #Analyzing variables we planning to use and what impact they have on survival as well as some Feature engineering on Name and variable
> #Analysis will be done on the first 891 observations(from train set)
> 
> 
> #Lets explore variable Name first as we plan to use the variable to create a variable Title that should be helpfull as Titles mattered more in that era
> 
> head(combo$Name)
[1] "Braund, Mr. Owen Harris"                            
[2] "Cumings, Mrs. John Bradley (Florence Briggs Thayer)"
[3] "Heikkinen, Miss. Laina"                             
[4] "Futrelle, Mrs. Jacques Heath (Lily May Peel)"       
[5] "Allen, Mr. William Henry"                           
[6] "Moran, Mr. James"                                   
> names <- combo$Name
> title <-  gsub("^.*, (.*?)\\..*$", "\\1", names)
> 
> combo$title <- title
> 
> table(title)
title
        Capt          Col          Don         Dona           Dr     Jonkheer 
           1            4            1            1            8            1 
        Lady        Major       Master         Miss         Mlle          Mme 
           1            2           61          260            2            1 
          Mr          Mrs           Ms          Rev          Sir the Countess 
         757          197            2            8            1            1 
>  combo$Name <- as.character(combo$Name)
>  combo$Name[1]
[1] "Braund, Mr. Owen Harris"
> #group rare title as factor
> rare_title <- c('Dona', 'the Countess','Capt', 'Col', 'Don', 
+                 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
> #grouping titles                
> combo$title[combo$title == 'Mlle']        <- 'Miss' 
> combo$title[combo$title == 'Ms']          <- 'Miss'
> combo$title[combo$title == 'Mme']         <- 'Mrs' 
> combo$title[combo$title == 'Lady']          <- 'Miss'
> combo$title[combo$title == 'Dona']          <- 'Miss'
> combo$title[combo$title %in% rare_title]  <- 'Rare Title'
> 
>  ggplot(combo[1:891,],aes(x = title,fill=factor(Survived))) +
+   geom_bar() +
+   ggtitle("Title V/S Survival rate")+
+   xlab("Title") +
+   ylab("Total Count") +
+   labs(fill = "Survived") 
> 
> str(combo)
'data.frame':	1309 obs. of  13 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : num  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
 $ title      : chr  "Mr" "Mrs" "Miss" "Mrs" ...
> 
> 
> #Relationships matters single people would have been more scattered around the ship the smaller families, bigger families could also be scattered in part
> #creating familysize factor
> combo$FamilySize <-combo$SibSp + combo$Parch + 1
> 
> combo$FamilySized[combo$FamilySize == 1]   <- 'Single'
> combo$FamilySized[combo$FamilySize < 5 & combo$FamilySize >= 2]   <- 'Small'
> combo$FamilySized[combo$FamilySize >= 5]   <- 'Big'
> 
> combo$FamilySized=as.factor(combo$FamilySized)
> 
> ggplot(combo[1:891,],aes(x = FamilySized,fill=factor(Survived))) +
+   geom_bar() +
+   ggtitle("Family Size V/S Survival Rate") +
+   xlab("FamilySize") +
+   ylab("Total Count") +
+   labs(fill = "Survived")
> 
> str(combo)
'data.frame':	1309 obs. of  15 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : num  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
 $ title      : chr  "Mr" "Mrs" "Miss" "Mrs" ...
 $ FamilySize : num  2 2 1 2 1 1 1 5 3 2 ...
 $ FamilySized: Factor w/ 3 levels "Big","Single",..: 3 3 2 3 2 2 2 1 3 3 ...
> 
> 
> #PCLASS class is our GPS and gives us some idea where and how far people were from the life boats and safer areas on the ship while it was still a float
> ggplot(combo[1:891,],aes(x = Pclass,fill=factor(Survived))) +
+ geom_bar() +
+ ggtitle("Pclass v/s Survival Rate")+
+ xlab("Pclass") +
+ ylab("Total Count") +
+ labs(fill = "Survived")  
> 
> 
> #Sex it was the ladies and kids first era where being a gentlemen ment something
> ggplot(combo[1:891,],aes(x = Sex,fill=factor(Survived))) +
+ geom_bar() +
+ ggtitle("Sex v/s Survival Rate")+
+ xlab("Sex") +
+ ylab("Total Count") +
+ labs(fill = "Survived")  
> 
> #have a look at the status of the combined set Combo
> str(combo)
'data.frame':	1309 obs. of  15 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : num  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
 $ title      : chr  "Mr" "Mrs" "Miss" "Mrs" ...
 $ FamilySize : num  2 2 1 2 1 1 1 5 3 2 ...
 $ FamilySized: Factor w/ 3 levels "Big","Single",..: 3 3 2 3 2 2 2 1 3 3 ...
> colSums(is.na(combo))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0           0           0           0           0         263 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           1           0           0 
      title  FamilySize FamilySized 
          0           0           0 
> colSums(combo=='')
PassengerId    Survived      Pclass        Name         Sex         Age 
          0           0           0           0           0          NA 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0          NA        1014           0 
      title  FamilySize FamilySized 
          0           0           0 
> 
> 
> #Prediction
> 
> #Create factors for variables we going to use
> combo$Embarked=as.factor(combo$Embarked)
> combo$Pclass=as.factor(combo$Pclass)
> combo$title=as.factor(combo$title)
> combo$Sex=as.factor(combo$Sex)
> combo$Embarked=as.factor(combo$Embarked)
> 
> # Split the data back into a train set and a test set
> train <- combo[1:891,c("Pclass", "title","Sex","Embarked","FamilySized","Survived")]
> test <- combo[892:1309,c("Pclass", "title","Sex","Embarked","FamilySized","Survived")] 
> 
> 
> ##Random Forest
> #i went for this algorithm as  I wanted to see how other variables impacted the Survived variable and the chance of survival on the ship.
> #As per the one on one comparison between identified variables versus the Survived variable.
> #
> #
> # Set a random seed
> set.seed(754)
> 
> # Build the model (note: not all possible variables are used)
> rf_model <- randomForest(factor(Survived) ~ Pclass + title + Sex,  data = train)
> 
> # Show model error
> plot(rf_model, ylim=c(0,0.50))
> legend('topright', colnames(rf_model$err.rate), col=1:3, fill=1:3)
> 
> # Predict using the test set
> prediction <- predict(rf_model, test)
> 
> # Save the solution to a dataframe with two columns: PassengerId and Survived (prediction)
> solution <- data.frame(PassengerID = test.tit$PassengerId, Survived = prediction)
> 
> # Write the solution to file
> write.csv(solution, file = 'rf_mod_Solution.csv', row.names = F)
> #
> #
> #
> ## Get importance
> #looking at te rank of variables on the outcome of survival
> #
> #
> importance    <- importance(rf_model)
> varImportance <- data.frame(Variables = row.names(importance), 
+                             Importance = round(importance[ ,'MeanDecreaseGini'],2))
> 
> # Create a rank variable based on importance
> rankImportance <- varImportance %>%
+   mutate(Rank = paste0('#',dense_rank(desc(Importance))))
> 
> # Use ggplot2 to visualize the relative importance of variables
> ggplot(rankImportance, aes(x = reorder(Variables, Importance), 
+     y = Importance, fill = Importance)) +
+   geom_bar(stat='identity') + 
+   geom_text(aes(x = Variables, y = 0.5, label = Rank),
+     hjust=0, vjust=0.55, size = 4, colour = 'red') +
+   labs(x = 'Variables') +
+   coord_flip() + 
+   theme_few()
> 
> 
> #Propensity as per mosaicplot below
> #More men then woman bought tickets
> #Most people embarked from area S 
> #Wealthier people embarked from area C
> #Most males as they say are third class citizen which seems to be one of the reason mostly males died.
> #
> mosaicplot(table(train$Pclass, train$Sex,train$Embarked), main='Population by Sex', shade=TRUE)
> 
> 
> 
> proc.time()
   user  system elapsed 
  2.708   0.182   2.899 
