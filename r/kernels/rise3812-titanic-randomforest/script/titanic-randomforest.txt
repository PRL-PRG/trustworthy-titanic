
# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages
# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats
# For example, here's several helpful packages to load in 

library(ggplot2) # Data visualization
library(readr) # CSV file I/O, e.g. the read_csv function
library(pipeR)
library(stringr)
library(rpart)
library(randomForest)


# Input data files are available in the "../input/" directory.
# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory

dir("../input")

# Any results you write to the current directory are saved as output.

train <- read_csv("../input/train.csv")
test <- read_csv("../input/test.csv")

str(train)

str(test)

test$Survived <- NA
d.all <- rbind(train, test)

d.all$Title <- str_extract(d.all$Name, "[a-zA-Z]+\\.") %>>% str_replace("\\.", "")

d.all$Title[d.all$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
d.all$Title[d.all$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
d.all$Title[d.all$Title %in% c('Dona', 'Lady', 'Countess', 'Jonkheer')] <- 'Lady'
d.all$Title <- factor(d.all$Title)

table(d.all$Embarked)

d.all$Embarked %>>% unique()

d.all$Embarked[is.na(d.all$Embarked)] <- "S"
d.all$Embarked <- factor(d.all$Embarked)

d.all$Fare[is.na(d.all$Fare)] <- median(d.all$Fare, na.rm = TRUE)

d.all$family_size <- with(d.all, SibSp + Parch + 1)

which(is.na(d.all$Age))

d.all$Sex <- factor(d.all$Sex)

predicted_age <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + family_size,
                       data = d.all[!is.na(d.all$Age),], method = "anova")
d.all$Age[is.na(d.all$Age)] <- predict(predicted_age, newdata = d.all[is.na(d.all$Age),])

train <- d.all[1:891,]
test <- d.all[892:1309,]

str(train)

set.seed(111)

my_forest <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title, data = train, ntree = 1000, importance = TRUE)

pred <- predict(my_forest, newdata = test)

solution <- data.frame(PassengerId = test$PassengerId, Survived = pred)

write_csv(solution, path = "solution.csv")
