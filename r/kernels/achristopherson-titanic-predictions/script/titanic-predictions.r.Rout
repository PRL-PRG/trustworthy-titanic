
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> library(ggplot2) # Data visualization
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(readr) # CSV file I/O, e.g. the read_csv function
> library(caret)
Loading required package: lattice
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> 
> training <- read.csv("../input/train.csv", stringsAsFactors = F)
> testing <- read.csv("../input/test.csv", stringsAsFactors = F)
> allData <- bind_rows(training, testing)
> 
> str(allData)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
> 
> allData$Survived <- as.factor(allData$Survived)
> allData$Pclass <- as.factor(allData$Pclass)
> allData$Sex <- as.factor(allData$Sex)
> allData$Age <- as.numeric(allData$Age)
> allData$SibSp <- as.numeric(allData$SibSp) 
> allData$Parch <- as.numeric(allData$Parch)
> allData$Cabin <- as.factor(allData$Cabin)
> allData$Embarked <- as.factor(allData$Embarked)
> str(allData)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : Factor w/ 2 levels "0","1": 1 2 2 2 1 1 1 1 2 2 ...
 $ Pclass     : Factor w/ 3 levels "1","2","3": 3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : num  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : num  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 187 levels "","A10","A11",..: 1 108 1 72 1 1 165 1 1 1 ...
 $ Embarked   : Factor w/ 4 levels "","C","Q","S": 4 2 4 4 4 3 4 4 4 2 ...
> 
> allData$Title <- (gsub("(.*, )|(\\..*)", "", allData$Name ))
> table(allData$Sex, allData$Title)
        
         Capt Col Don Dona  Dr Jonkheer Lady Major Master Miss Mlle Mme  Mr Mrs
  female    0   0   0    1   1        0    1     0      0  260    2   1   0 197
  male      1   4   1    0   7        1    0     2     61    0    0   0 757   0
        
          Ms Rev Sir the Countess
  female   2   0   0            1
  male     0   8   1            0
> 
> obscure <- c("Capt", "Col", "Don", "Dona", "Dr", "Jonkheer", "Lady", "Major", "Rev", "Sir", "the Countess")
> allData$Title[allData$Title == 'Ms'] <- 'Miss'
> allData$Title[allData$Title == "Mlle"] <- "Miss"
> allData$Title[allData$Title == "Mme"] <- "Mrs"
> allData$Title[allData$Title %in% obscure] <- "Obscure"
> 
> allData$Fare[is.na(allData$Fare)] <- mean(allData$Fare, na.rm=TRUE)
> 
> agesIntact <- allData[!is.na(allData$Age),]
> set.seed(799)
> ageModel <- train(Age~Pclass, data=agesIntact, method="rpart")
Warning message:
In nominalTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo,  :
  There were missing values in resampled performance measures.
> 
> agesToPredict <- allData[is.na(allData$Age),]
> preds <- predict(ageModel, newdata=agesToPredict)
> 
> agesToPredict <- allData[is.na(allData$Age),]
> preds <- predict(ageModel, newdata=agesToPredict)
> allData$Age[is.na(allData$Age)] <- preds
> 
> finalTraining <- allData[1:891,]
> finalTesting <- allData[892:1309,]
> inCrossVal <- createDataPartition(y=finalTraining$Survived,p=0.75, list=FALSE)
> realTraining <- finalTraining[inCrossVal,]
> crossVal <- finalTraining[-inCrossVal,]
> 
> control <- trainControl(method = "repeatedcv", number = 10, repeats = 10)
> survivedModelFit <- train(Survived~Pclass+Title+Parch+SibSp+Fare, method="rf", data=realTraining, trControl=control)
> 
> nrow(allData)
[1] 1309
> 
> 
> 
> proc.time()
   user  system elapsed 
 66.349   2.266  70.244 
