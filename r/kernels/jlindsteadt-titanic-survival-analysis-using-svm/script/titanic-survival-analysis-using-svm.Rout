
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## ---- message=FALSE, warning=FALSE-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(dplyr) # data manipulation

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library(kernlab)
> library(ggplot2)

Attaching package: ‘ggplot2’

The following object is masked from ‘package:kernlab’:

    alpha

Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(ggthemes) # visualization
> library(scales) # visualization

Attaching package: ‘scales’

The following object is masked from ‘package:kernlab’:

    alpha

Warning message:
package ‘scales’ was built under R version 3.6.2 
> 
> test_data <- read.csv("../input/test.csv", stringsAsFactors = TRUE, header = TRUE)
> train_data <- read.csv("../input/train.csv", stringsAsFactors = TRUE, header = TRUE)
> full <- bind_rows(test_data, train_data)
> set.seed(123)
> 
> str(full)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  892 893 894 895 896 897 898 899 900 901 ...
 $ Pclass     : int  3 3 2 3 3 3 3 2 3 3 ...
 $ Name       : Factor w/ 1307 levels "Abbott, Master. Eugene Joseph",..: 210 409 273 414 182 370 85 58 5 104 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 2 2 1 2 1 2 1 2 ...
 $ Age        : num  34.5 47 62 27 22 14 30 26 18 21 ...
 $ SibSp      : int  0 1 0 0 1 0 0 1 0 2 ...
 $ Parch      : int  0 0 0 0 1 0 0 1 0 0 ...
 $ Ticket     : Factor w/ 929 levels "110469","110489",..: 153 222 74 148 139 262 159 85 101 270 ...
 $ Fare       : num  7.83 7 9.69 8.66 12.29 ...
 $ Cabin      : Factor w/ 187 levels "","A11","A18",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ Embarked   : Factor w/ 4 levels "C","Q","S","": 2 3 2 3 3 3 2 3 1 3 ...
 $ Survived   : int  NA NA NA NA NA NA NA NA NA NA ...
> 
> 
> ## ---- message=FALSE, warning=FALSE-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> #Find NA values for each variable
> na_matrix <- as.matrix(rep(0, ncol(full)))
> rownames(na_matrix) <- colnames(full)
> for(i in 1:ncol(full)){
+   na_matrix[i] <- length(full[,i][which(is.na(full[,i])==TRUE)])
+ }
> na_matrix
            [,1]
PassengerId    0
Pclass         0
Name           0
Sex            0
Age          263
SibSp          0
Parch          0
Ticket         0
Fare           1
Cabin          0
Embarked       0
Survived     418
> 
> 
> ## ---- message=FALSE, warning=FALSE-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> #Expolore Age data
> # create a new data set age
> age <- full$Age
> n = length(age)
> # replace missing value with a random sample from raw data
> 
> for(i in 1:n){
+   if(is.na(age[i])){
+     age[i] = sample(na.omit(full$Age),1)
+   }
+ }
> # check effect
> par(mfrow=c(1,2))
> hist(full$Age, freq=F, main='Before Replacement', 
+      col='lightblue', ylim=c(0,0.04),xlab = "age")
> hist(age, freq=F, main='After Replacement', 
+      col='darkblue', ylim=c(0,0.04))
> 
> #Insert sample data into Age data
> full$Age <- age
> 
> 
> ## ---- message=FALSE, warning=FALSE-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ### Explore Fare data
> full[which(is.na(full$Fare)==TRUE),]
    PassengerId Pclass               Name  Sex  Age SibSp Parch Ticket Fare
153        1044      3 Storey, Mr. Thomas male 60.5     0     0   3701   NA
    Cabin Embarked Survived
153              S       NA
> 
> #Plot densitty for fares from passensgers in Class 3 that embarked from S
> ggplot(full[full$Pclass == '3' & full$Embarked == 'S', ], 
+        aes(x = Fare)) +
+   geom_density(fill = '#99d6ff', alpha=0.4) + 
+   geom_vline(aes(xintercept=median(Fare, na.rm=T)),
+              colour='red', linetype='dashed', lwd=1)
Warning message:
Removed 1 rows containing non-finite values (stat_density). 
> 
> 
> #Set missing fare for Passenger 1044 to $8.05
> full$Fare[which(full$PassengerId == 1044)] = median(full[full$Pclass == '3' & full$Embarked == 'S', 'Fare'], na.rm=TRUE)
> 
> 
> ## ---- message=FALSE, warning=FALSE-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> # Process Cabin Column to show number of cabins passenger has
> cabin <- full$Cabin
> n = length(cabin)
> for(i in 1:n){
+   if(nchar(cabin[i]) == 0){
+     cabin[i] = 0
+   } else{
+     s = strsplit(cabin[i]," ")
+     cabin[i] = length(s[[1]])
+   }
+ } 
Error in nchar(cabin[i]) : 'nchar()' requires a character vector
Execution halted
