
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # Using Regression approach
> 
> trainds<-read.csv("../input/train.csv",header = T,na.strings = c(""))
> 
> 
> library(Amelia)
Loading required package: Rcpp
## 
## Amelia II: Multiple Imputation
## (Version 1.7.6, built: 2019-11-24)
## Copyright (C) 2005-2020 James Honaker, Gary King and Matthew Blackwell
## Refer to http://gking.harvard.edu/amelia/ for more information
## 
> 
> # A quick check to find out if there are any null values
> # as per the graph it is apparent cabin and age have null values
> 
> missmap(trainds,main="Missing Values vs observed")
> 
> 
> head(trainds)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked
1        A/5 21171  7.2500  <NA>        S
2         PC 17599 71.2833   C85        C
3 STON/O2. 3101282  7.9250  <NA>        S
4           113803 53.1000  C123        S
5           373450  8.0500  <NA>        S
6           330877  8.4583  <NA>        Q
> 
> # I am trying to fill the Null data with some values. If the cabin is found to be significant will 
> # add a value which is most common rather then any random value
> trainds$Cabin[is.na(trainds$Cabin)] <-  "G6"
> trainds$Age[is.na(trainds$Age)] <-mean(trainds$Age,na.rm=T)
> 
> 
> # a check to see if all the null values are replaced
> missmap(trainds,main="Missing Values vs observed")
> 
> 
> 
> set.seed(124)
> names(trainds)
 [1] "PassengerId" "Survived"    "Pclass"      "Name"        "Sex"        
 [6] "Age"         "SibSp"       "Parch"       "Ticket"      "Fare"       
[11] "Cabin"       "Embarked"   
> 
> traindata<-trainds[sample(1:nrow(trainds),800,replace =TRUE),] 
> head(traindata)
    PassengerId Survived Pclass                                   Name    Sex
321         321        0      3                     Dennis, Mr. Samuel   male
167         167        1      1 Chibnall, Mrs. (Edith Martha Bowerman) female
411         411        0      3                     Sdycoff, Mr. Todor   male
261         261        0      3                      Smith, Mr. Thomas   male
728         728        1      3               Mannion, Miss. Margareth female
390         390        1      2                  Lehmann, Miss. Bertha female
         Age SibSp Parch    Ticket    Fare Cabin Embarked
321 22.00000     0     0 A/5 21172  7.2500    G6        S
167 29.69912     0     1    113505 55.0000   E33        S
411 29.69912     0     0    349222  7.8958    G6        S
261 29.69912     0     0    384461  7.7500    G6        Q
728 29.69912     0     0     36866  7.7375    G6        Q
390 17.00000     0     0   SC 1748 12.0000    G6        C
> 
> testdata<-trainds[-traindata$PassengerId,]
> 
> head(testdata)
   PassengerId Survived Pclass
1            1        0      3
5            5        0      3
6            6        0      3
7            7        0      1
9            9        1      3
12          12        1      1
                                                Name    Sex      Age SibSp
1                            Braund, Mr. Owen Harris   male 22.00000     1
5                           Allen, Mr. William Henry   male 35.00000     0
6                                   Moran, Mr. James   male 29.69912     0
7                            McCarthy, Mr. Timothy J   male 54.00000     0
9  Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg) female 27.00000     0
12                          Bonnell, Miss. Elizabeth female 58.00000     0
   Parch    Ticket    Fare Cabin Embarked
1      0 A/5 21171  7.2500    G6        S
5      0    373450  8.0500    G6        S
6      0    330877  8.4583    G6        Q
7      0     17463 51.8625   E46        S
9      2    347742 11.1333    G6        S
12     0    113783 26.5500  C103        S
> 
> nrow(traindata)
[1] 800
> nrow(testdata)
[1] 364
> 
> names(traindata)
 [1] "PassengerId" "Survived"    "Pclass"      "Name"        "Sex"        
 [6] "Age"         "SibSp"       "Parch"       "Ticket"      "Fare"       
[11] "Cabin"       "Embarked"   
> 
> mylogit<-glm(Survived~Pclass+Sex+Age, data=traindata,family=binomial(link="logit"))
> 
> 
> summary(mylogit)

Call:
glm(formula = Survived ~ Pclass + Sex + Age, family = binomial(link = "logit"), 
    data = traindata)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.6338  -0.6436  -0.4122   0.6001   2.4226  

Coefficients:
             Estimate Std. Error z value Pr(>|z|)    
(Intercept)  4.653195   0.474040   9.816   <2e-16 ***
Pclass      -1.156673   0.127552  -9.068   <2e-16 ***
Sexmale     -2.718919   0.201585 -13.488   <2e-16 ***
Age         -0.029868   0.007627  -3.916    9e-05 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 1061.52  on 799  degrees of freedom
Residual deviance:  705.63  on 796  degrees of freedom
AIC: 713.63

Number of Fisher Scoring iterations: 5

> 
> 
> # 1-pchisq(459.44,396)
> 1-pchisq(mylogit$deviance,mylogit$df.residual)
[1] 0.9903535
> 
> # created a prediction model
> 
> newdata1<-testdata[c("Pclass","Sex","Age")]
> newdata1$results<-predict(mylogit,newdata=newdata1,type='response')
> 
> 
> newdata1$results <- ifelse(newdata1$results > 0.5,1,0)
> 
> 
> misClasificError <- mean(newdata1$results != testdata$Survived)
> print(paste('Accuracy',1-misClasificError))
[1] "Accuracy 0.785714285714286"
> 
> 
> 
> 
> # using Decision-Tree approach
> 
> trainds<-read.csv("../input/train.csv",header = T,na.strings = c(""))
> 
> 
> library(Amelia)
> library(party)
Loading required package: grid
Loading required package: mvtnorm
Loading required package: modeltools
Loading required package: stats4
Loading required package: strucchange
Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

Loading required package: sandwich
Warning messages:
1: package ‘party’ was built under R version 3.6.2 
2: package ‘zoo’ was built under R version 3.6.2 
> 
> 
> # A quick check to find out if there are any null values
> # as per the graph it is apparent cabin and age have null values
> 
> missmap(trainds,main="Missing Values vs observed")
> 
> 
> head(trainds)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked
1        A/5 21171  7.2500  <NA>        S
2         PC 17599 71.2833   C85        C
3 STON/O2. 3101282  7.9250  <NA>        S
4           113803 53.1000  C123        S
5           373450  8.0500  <NA>        S
6           330877  8.4583  <NA>        Q
> 
> set.seed(124)
> 
> traindata<-trainds[sample(1:nrow(trainds),800,replace =TRUE),] 
> 
> 
> testdata<-trainds[-traindata$PassengerId,]
> actualresult<-testdata$Survived
> 
> # I am trying to fill the Null data with some values. If the cabin is found to be significant will 
> # add a value which is most common rather then any random value
> trainds$Cabin[is.na(trainds$Cabin)] <-"G6"
> trainds$Age[is.na(trainds$Age)] <-mean(trainds$Age,na.rm=T)
> 
> 
> titanic.tree<-ctree(Survived~Pclass+Sex+Age+SibSp+Parch+Cabin+Embarked,data=trainds,control=ctree_control(mincriterion=0.85))
> 
> plot(titanic.tree)
> 
> testdatam1<-testdata[,c("Pclass","Sex","Age","SibSp","Parch","Cabin","Embarked")]
> 
> predictedresults<-predict(titanic.tree,testdatam1)
> 
> predictedresults <- ifelse(predictedresults > 0.5,1,0)
> 
> 
> misClasificError <- mean(predictedresults!= actualresult)
> print(paste('Accuracy',1-misClasificError))
[1] "Accuracy 0.870879120879121"
> 
> 
> # removing some non-significant nodes as per regression and checking if there is any difference in the result
> # ******************************************************************
> titanic.tree<-ctree(Survived~Pclass+Sex+Age,data=trainds)
> 
> 
> testdatam1<-testdata[,c("Pclass","Sex","Age")]
> 
> predictedresults<-predict(titanic.tree,testdatam1)
> 
> predictedresults <- ifelse(predictedresults > 0.5,1,0)
> 
> 
> misClasificError <- mean(predictedresults!= actualresult)
> print(paste('Accuracy',1-misClasificError))
[1] "Accuracy 0.799450549450549"
> 
> 
> # ******************************************************************
> 
> 
> 
> proc.time()
   user  system elapsed 
  1.562   0.132   1.739 
