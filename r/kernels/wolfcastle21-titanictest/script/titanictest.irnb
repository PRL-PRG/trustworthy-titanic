{"cells":[
 {
  "cell_type": "code",
  "execution_count": null,
  "metadata": {
   "collapsed": false
  },
  "outputs": [],
  "source": "\n# This R script will run on our backend. You can write arbitrary code here!\n\n# Many standard libraries are already installed, such as randomForest\nlibrary(randomForest)\nlibrary(rpart)\n# The train and test data is stored in the ../input directory\ntrain <- read.csv(\"../input/train.csv\")\ntest  <- read.csv(\"../input/test.csv\")\n\n# We can inspect the train data. The results of this are printed in the log tab below\nsummary(train)\ntest$Survived <- NA\nall_data <- rbind (train,test)\nall_data$family_size <- all_data$SibSp + all_data$Parch + 1\nall_data$Name <- as.character(all_data$Name)\nall_data$Title <- sapply(all_data$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})\nall_data$Title <- sub(' ', '', all_data$Title)\nall_data$Title[all_data$Title %in% c('Mme', 'Mlle')] <- 'Mlle'\nall_data$Title[all_data$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'\nall_data$Title[all_data$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'\nall_data$Title <- factor(all_data$Title)\n\npredicted_embarkment <- rpart(Embarked ~ Age + Pclass + Name + Sex + Age + family_size + Ticket + Fare +\n    Cabin, data = all_data[!is.na(all_data$Embarked),], method = \"class\")\nall_data$Embarked[c(62, 830)] <- predict(predicted_embarkment, all_data[c(62, 830)]\nall_data$Embarked <- factor(all_data$Embarked)\n\n\n\npredicted_fare <- rpart(Fare ~ Embarked + Age + Pclass + Name + Sex + family_size + Parch + Ticket + \n    Cabin, data = all_data[!is.na(all_data$Fare),], method = \"anova\")\nall_data$Fare[is.na(all_data$Fare)] <- predict(predicted_fare, all_data[is.na(all_data$Fare),])\npredicted_age <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + family_size,\n                       data = all_data[!is.na(all_data$Age),], method = \"anova\")\nall_data$Age[is.na(all_data$Age)] <- predict(predicted_age, all_data[is.na(all_data$Age),])\n\n# Split the data back into a train set and a test set\ntrain <- all_data[1:891,]\ntest <- all_data[892:1309,]\nset.seed(100)\nmy_forest <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title, data = train, importance = TRUE, ntree= 2000)\n# Make your prediction using the test set\nmy_prediction <- predict(my_forest, test)\n\n# Create a data frame with two columns: PassengerId & Survived. Survived contains your predictions\nmy_solution <- data.frame(test$PassengerId, Survived = my_prediction)\n\n# Write your solution away to a csv file with the name my_solution.csv\nwrite.csv(my_solution, file = \"my_solution.csv\", row.names = FALSE)\nvarImpPlot(my_forest)\ndev.off()\n"
 }
],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"}}, "nbformat": 4, "nbformat_minor": 0}