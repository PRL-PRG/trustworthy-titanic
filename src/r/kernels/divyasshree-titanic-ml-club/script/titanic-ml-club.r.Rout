
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> ## Importing packages
> 
> # This R environment comes with all of CRAN and many other helpful packages preinstalled.
> # You can see which packages are installed by checking out the kaggle/rstats docker image: 
> # https://github.com/kaggle/docker-rstats
> 
> 
> ## Running code
> 
> # In a notebook, you can run a single code cell by clicking in the cell and then hitting 
> # the blue arrow to the left, or by clicking in the cell and pressing Shift+Enter. In a script, 
> # you can run code by highlighting the code you want to run and then clicking the blue arrow
> # at the bottom of this window.
> 
> ## Reading in files
> 
> # You can access files from datasets you've added to this kernel in the "../input/" directory.
> # You can see the files added to this kernel by running the code below. 
> 
> 
> titanic_train <- read.csv("../input/train.csv", stringsAsFactors=FALSE)
> titanic_test<-read.csv("../input/test.csv", stringsAsFactors=FALSE)
> 
> #library(titanic)
> 
> library('ggplot2')
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library('scales')
Warning message:
package ‘scales’ was built under R version 3.6.2 
> library('dplyr') 

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library('randomForest') 
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:dplyr’:

    combine

The following object is masked from ‘package:ggplot2’:

    margin

> library('readr') 

Attaching package: ‘readr’

The following object is masked from ‘package:scales’:

    col_factor

> 
> titanic_train<-bind_rows(titanic_train,titanic_test)
> 
> 
> titanic_train$title<-gsub('(.*, )|(\\..*)', '', titanic_train$Name)
> #change less frequent titles
> table(titanic_train$Sex, titanic_train$title)
        
         Capt Col Don Dona  Dr Jonkheer Lady Major Master Miss Mlle Mme  Mr Mrs
  female    0   0   0    1   1        0    1     0      0  260    2   1   0 197
  male      1   4   1    0   7        1    0     2     61    0    0   0 757   0
        
          Ms Rev Sir the Countess
  female   2   0   0            1
  male     0   8   1            0
> 
> title_edit<-c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', 
+               'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
> titanic_train$title[titanic_train$title=='Mlle']<-'Miss'
> titanic_train$title[titanic_train$title=='Ms']<-'Miss'
> titanic_train$title[titanic_train$title=='Mme']<-'Mrs'
> titanic_train$title[titanic_train$title %in% title_edit]<-'renamed Title'
> table(titanic_train$Sex, titanic_train$title)
        
         Master Miss  Mr Mrs renamed Title
  female      0  264   0 198             4
  male       61    0 757   0            25
> 
> #know size of each family
> 
> titanic_train$famsize <- titanic_train$SibSp + titanic_train$Parch + 1
> 
> ggplot(titanic_train[1:891,], aes(x = famsize, fill = factor(Survived))) +
+   geom_bar(stat='count', position='dodge') +
+   scale_x_continuous(breaks=c(1:11)) +
+   labs(x = 'Family Size') 
> 
> #famsize>4 and survived=true is very less
> #look for missing values
> 
> titanic_train$Embarked[titanic_train$Embarked == ""] <- NA
> sum(is.na(titanic_train$Age))
[1] 263
> #replace NA with median-method 1
> titanic_train1<-titanic_train
> 
> med<-median(titanic_train$Age,na.rm = TRUE)
> #titanic_train1$Age[titanic_train$Age=="NA"]=med
> 
> library(Hmisc)
Loading required package: lattice
Loading required package: survival
Loading required package: Formula

Attaching package: ‘Hmisc’

The following objects are masked from ‘package:dplyr’:

    src, summarize

The following objects are masked from ‘package:base’:

    format.pval, units

Warning message:
package ‘survival’ was built under R version 3.6.2 
> 
> #impute missing age value using known information-method 2
> 
> titanic_train1$Age<-with(titanic_train,impute(Age,mean))
> 
> titanic_train1$Fare<-with(titanic_train,impute(Fare,median))
> titanic_train1$Survived<-with(titanic_train,impute(Survived,0))
> titanic_train1$Embarked<-with(titanic_train,impute(Embarked,'C'))
> 
> #group family size into classes
> 
> titanic_train1$fsizeD[titanic_train1$famsize == 1] <- 1
> titanic_train1$fsizeD[titanic_train1$famsize < 5 & titanic_train1$famsize> 1] <- 2
> titanic_train1$fsizeD[titanic_train1$famsize> 4] <- 3
> 
> 
> train <- titanic_train1[1:891,]
> test <- titanic_train1[892:1309,]
> 
> 
> # using randomForest on the training set.
> 
> # Set a random seed
> 
> set.seed(755)
> 
> # Build the model 
> 
> titanic_model <- randomForest(Survived ~   Age+
+                                 Fare +  fsizeD+Pclass ,
+                               data = train,na.action = na.exclude)
Warning message:
In randomForest.default(m, y, ...) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
> 
> 
> # Show model error
> 
> plot(titanic_model, ylim=c(0,0.36))
> ope<-predict(titanic_model,test)
> 
> importance    <- importance(titanic_model)
> Output<- data.frame(PassengerID = test$PassengerId, Survived = ope)
> Output$Survived[Output$Survived>0.5]=1
> Output$Survived[Output$Survived!=1]=0
> 
> 
> ## Saving data
> 
> # If you save any files or images, these will be put in the "output" directory. You 
> # can see the output directory by committing and running your kernel (using the 
> # Commit & Run button) and then checking out the compiled version of your kernel.
> write.csv(Output,file="pred.csv")
> 
> proc.time()
   user  system elapsed 
  2.137   0.174   2.331 
