{"cells":[{"metadata":{"_cell_guid":"2fc16563-31e7-e5d0-7221-34829096e60b","_uuid":"28939feaff6821f35b2611ac3d6c640984f8f5b4"},"cell_type":"markdown","source":"# My First Kernel - Titanic Data #\n\n\n----------\n##Author: Lori B. Pfahler##\nApril 2017"},{"metadata":{"_cell_guid":"6e1538e4-a4f0-ce9b-f464-965719069fa3","_uuid":"fb5ac01bc8e8153f4de9e547f0f637a505400eb4","trusted":false},"cell_type":"code","source":"# load packages\n\nlibrary(ggplot2)\nlibrary(readr) \nlibrary('ggthemes') \nlibrary('scales') # v\nlibrary('dplyr') # data manipulation\nlibrary('randomForest') # classification algorithm\n\n# Input data files \ngetwd()\ntrain <- read.csv('../input/train.csv', stringsAsFactors = F)\ntest  <- read.csv('../input/test.csv', stringsAsFactors = F)\nfull  <- bind_rows(train, test) # bind training & test data","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"71fce2c1-36df-26a6-ab86-0547f7047552","_uuid":"da6bccf91c43984dc44cbb796c41e33efb932688","trusted":false},"cell_type":"code","source":"\n# check data\n# head(full)\n# Use Old School base graphics\n# hist(full$Age, xlab=\"Age (years)\", main=\"Histogram of Age - Titanic Passengers\")\n# hist(full$Fare, xlab=\"Passenger fare\", main=\"Histogram of Face - Titanic Data\")\n# trying out ggplot2\nplot1 <- ggplot(full, aes(x = Age)) +\n  geom_histogram(col=\"black\", fill=\"light green\")\n# trying various approaches to removing grid background and lines\n# plot1 + theme_bw()\n# plot1 + theme_bw() +\n#   theme(\n#     plot.background = element_blank()\n#     ,panel.grid.major = element_blank()\n#     ,panel.grid.minor = element_blank() \n#   )\nplot1 + theme_bw() +\n  theme(\n    plot.background = element_blank()\n    ,panel.grid.major = element_blank()\n  )\nplot2 <- ggplot(full, aes(x = Fare)) +\n  geom_histogram(col=\"black\", fill=\"light green\")\nplot2 + theme_bw()\n# plot2 + theme_classic()","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"014861bd-a65f-9f1e-4f6d-7984fae1b556","_uuid":"334b520cc8c836381f80a110e668b7a7d4326ddc","trusted":false},"cell_type":"code","source":"plot3 <- ggplot(full, aes(x = Fare, color=Sex)) +\n  geom_histogram() + theme_few()\nplot3\n\nplot4 <- ggplot(full, aes(x = Age)) +\n  geom_histogram(col=\"black\", fill=\"light green\") + facet_wrap(~Sex) + theme_few()\nplot4","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"d77baff4-becf-d8e2-a08f-c4df8b3561a2","_uuid":"4ae8ab482925578f130be2fd6badd8f59d4c6674","trusted":false},"cell_type":"code","source":"plot6 <- ggplot(train, aes(x=as.factor(Survived), y=Age, \n          fill=as.factor(Survived))) + geom_boxplot() + guides(fill=FALSE) + \n          coord_flip() + theme_few() + labs(y=\"Age (years)\", x=\"Survived (1=Yes, 0=No)\")\nplot6","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"e6f988f2-d701-1ed6-7843-d7549cd53bd6","_uuid":"38c7d441ba472f5f837e2777a37a7cb4bcc547d1","trusted":false},"cell_type":"code","source":"plot7 <- ggplot(train, aes(x=as.factor(Survived), y=Fare, \n          fill=as.factor(Survived))) + geom_boxplot() + guides(fill=FALSE) + \n          coord_flip() + theme_few() + labs(y=\"Fare\", x=\"Survived (1=Yes, 0=No)\")\nplot7","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"399c6cf1-0ed8-4085-1a8e-4675d7db5fad","_uuid":"c620f34216e93fe64baa011083ced47715c82c5e","trusted":false},"cell_type":"code","source":"# missing data count\n# need to address age!\nsapply(full, function(x) sum(is.na(x)))","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"24d53e48-b9f1-843a-079d-c3edd8bf4594","_uuid":"1b3256f453a0e7bed64f63edb741dfe16947c871","trusted":false},"cell_type":"code","source":"# Feature engineering borrowed from Megan Risdal\n# Create a family size variable including the passenger themselves\nfull$Fsize <- full$SibSp + full$Parch + 1\n# Create a family variable \nfull$Family <- paste(full$Surname, full$Fsize, sep='_')\n\nggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) +\n  geom_bar(stat='count', position='dodge') +\n  scale_x_continuous(breaks=c(1:11)) +\n  labs(x = 'Family Size') +\n  theme_few()","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"a6da1620-ffd8-fbb0-a434-0cfb5ec20d74","_uuid":"f14fd831263934193084b62fd324a631461b5ea2","trusted":false},"cell_type":"code","source":"# names\n# Grab title from passenger names\nfull$Title <- gsub('(.*, )|(\\\\..*)', '', full$Name)\n# Show title counts by sex\ntable(full$Sex, full$Title)\n# Titles with very low cell counts to be combined to \"rare\" level\nrare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', \n                'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')\n# Also reassign mlle, ms, and mme accordingly\nfull$Title[full$Title == 'Mlle']        <- 'Miss' \nfull$Title[full$Title == 'Ms']          <- 'Miss'\nfull$Title[full$Title == 'Mme']         <- 'Mrs' \nfull$Title[full$Title %in% rare_title]  <- 'Rare Title'\n# Show title counts by sex again\ntable(full$Sex, full$Title)\n# Finally, grab surname from passenger name\nfull$Surname <- sapply(full$Name,  \n     function(x) strsplit(x, split = '[,.]')[[1]][1])","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"c89ce3d6-3459-422e-90a9-b6a24566fa25","_uuid":"fa1d6e1c3cf6aeaf920399c346b6b545541569f0","trusted":false},"cell_type":"code","source":"# embarked - see https://www.kaggle.com/mrisdal/titanic/exploring-survival-on-the-titanic\n# for explanation\nfull$Embarked[c(62, 830)] <- 'C'\n# Replace missing fare value with median fare for class/embarkment\nfull$Fare[1044] <- median(full[full$Pclass == '3' & full$Embarked == 'S', ]$Fare, na.rm = TRUE)","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"8248de17-09be-8579-8aa6-2f5117d42f4e","_uuid":"96b88a0de413e863c170878d35ec4d50abc9afaa","trusted":false},"cell_type":"code","source":"# impute missing age values\nlibrary('mice') \n# Make variables factors into factors\nfactor_vars <- c('PassengerId','Pclass','Sex','Embarked',\n                 'Title','Surname','Family','FsizeD')\n\nfull[factor_vars] <- lapply(full[factor_vars], function(x) as.factor(x))\n# Set a random seed\nset.seed(129)\n# Perform mice imputation, excluding certain less-than-useful variables:\nmice_mod <- mice(full[, !names(full) %in% c('PassengerId',\n                 'Name','Ticket','Cabin','Family','Surname','Survived')], method='rf') ","execution_count":null,"outputs":[]}],"metadata":{"_change_revision":0,"_is_fork":false,"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}