{"cells":[{"metadata":{"_uuid":"5c8a1a0f429ea6c3127e0be85599d10c02b0cd50","_execution_state":"idle","trusted":true},"cell_type":"code","source":"## Importing packages\n\n# This R environment comes with all of CRAN and many other helpful packages preinstalled.\n# You can see which packages are installed by checking out the kaggle/rstats docker image: \n# https://github.com/kaggle/docker-rstats\n\nlibrary(tidyverse) # metapackage with lots of helpful functions\n\n## Running code\n\n# In a notebook, you can run a single code cell by clicking in the cell and then hitting \n# the blue arrow to the left, or by clicking in the cell and pressing Shift+Enter. In a script, \n# you can run code by highlighting the code you want to run and then clicking the blue arrow\n# at the bottom of this window.\n\n## Reading in files\n\n# You can access files from datasets you've added to this kernel in the \"../input/\" directory.\n# You can see the files added to this kernel by running the code below. \n\nlist.files(path = \"../input\")\n\n## Saving data\n\n# If you save any files or images, these will be put in the \"output\" directory. You \n# can see the output directory by committing and running your kernel (using the \n# Commit & Run button) and then checking out the compiled version of your kernel.\n\ntitanic_test<- read.delim(\"../input/test.csv\", header = T, sep = \",\", stringsAsFactors = T)\nstr(titanic_test)\nsummary(titanic_test)\nhead(titanic_test)\n\ntitanic_train<- read.delim(\"../input/train.csv\", header = T, sep = \",\", stringsAsFactors = T)\nstr(titanic_train)\nsummary(titanic_train)\nhead(titanic_train)\n\ntitanic_gender<- read.delim(\"../input/gender_submission.csv\", header = T, sep = \",\", stringsAsFactors = T)\nhead(titanic_gender)\n\nlibrary(tidyr)\n\n#identical(titanic_gender$PassengerId, titanic_test$PassengerId)\n#titanic_merge<- merge(titanic_test, titanic_gender, all.x = T)\n#summary(titanic_merge)\n#head(titanic_merge)\nlibrary(dplyr)\n\n\n###--- DATA CLEANING ---###\nlapply(titanic_train, function(x) length(unique(x)))\n\n#removing columns which are completely unique, not needed for the EDA\ntitanic_train<- titanic_train[,-which(lapply(titanic_train, function(x) length(unique(x))) == 891)]\n\n#checking for NA and fixing\nsum(is.na(titanic_train))\nsapply(titanic_train, function (x) sum(is.na(x)))\n#only Age column has NAs\nsummary(titanic_train$Age) #cannot assume to convert all NAs to either 0 or median of the Age values at this point\n\n#checking for NaN and fixing\nsapply(titanic_train, function (x) sum(is.nan(x)))\n\n#checking for NULL and fixing\nsapply(titanic_train, function (x) sum(is.null(x)))\n\n\n#checking for standards of each of the columns\nsapply(titanic_train, class)\ntitanic_train$Age<- as.integer(titanic_train$Age) #converting Age column to integer as we had age in decimals\n\n#filtering only the survived passengers\ntitanic_train_survived<- titanic_train[which(titanic_train$Survived == 1),]\nstr(titanic_train_survived)\nsummary(titanic_train_survived)\nhead(titanic_train_survived)\n\n#deriving young vs adult\ntitanic_train_survived$young<- ifelse(titanic_train_survived$Age <= 18, 1, 0)\n\n#removing unwanted rows and columns for this EDA\ntitanic_train_survived<- titanic_train_survived[,-c(1, 7:9)] #removing survived, tickets, fare and cabin  columns\nsum(is.na(titanic_train_survived$Age))\ntitanic_train_survived<- titanic_train_survived[-which(is.na(titanic_train_survived$Age)),]\n\n\n\n###--- DATA ANALYSIS ---###\n#pclass\nplot(table(titanic_train_survived$Pclass), main = \"survivors / pclass\", xlab = \"pclass\", ylab = \"count\", col = \"green\")\n\n#sex\nbarplot(table(titanic_train_survived$Sex), main = \"male and female survivors proposition\", ylab = \"count\", col = c(\"red\", \"blue\"), ylim = c(0, 220))\n\n#age\nhist(titanic_train_survived$Age, main = \"survivor age and proposition\", xlab = \"age range\", labels = T, col = \"darkmagenta\")\nboxplot(titanic_train_survived$Age)\ntitanic_train_survived<- titanic_train_survived[-which(titanic_train_survived$Age > 60),]\n\n#embarked\nbarplot(table(titanic_train_survived$Embarked), main = \"survivors proposition w.r.t embarkment\", ylab = \"count\")\nsubset(titanic_train_survived, Pclass == 1 & Sex == \"female\" & SibSp == 0 & Parch == 0 & young == 0)\nsummary(subset(titanic_train_survived, Pclass == 1 & Sex == \"female\" & SibSp == 0 & Parch == 0 & young == 0))\n#converting 2 blank embarked points to C, since C has more freq w.r.t to the age > 30\nsummary(subset(titanic_train_survived, Pclass == 1 & Sex == \"female\" & SibSp == 0 & Parch == 0 & young == 0 & Age > 30))\ntitanic_train_survived[which(titanic_train_survived$Embarked == \"\"), 6]<- \"C\"\n\nsummary(titanic_train_survived)\nbarplot(table(titanic_train_survived$Embarked), main = \"survivors proposition w.r.t embarkment\", ylab = \"count\", col = c(\"red\", \"blue\", \"green\"))\n\n#young vs adult\nbarplot(table(titanic_train_survived$young))\nbarplot(table(titanic_train_survived$young), main = \"adult vs young survivors proposition\", ylab = \"count\", col = c(\"red\", \"blue\"), ylim = c(0, 250), names.arg = c(\"adult\", \"young\"))\n\n\n##segmented univariate analysis\n#by sex\ntitanic_train_survived_male<- titanic_train_survived[titanic_train_survived$Sex == \"male\",]\ntitanic_train_survived_female<- titanic_train_survived[titanic_train_survived$Sex == \"female\",]\nbarplot(table(titanic_train_survived_male$Pclass), ylim = c(0,50)) #Pclass1 and 3 have almost equal number of male survivors\nbarplot(table(titanic_train_survived_female$Pclass),  ylim = c(0,100)) #Pclass1 has the most number of female survivors, followed by Pclass 2 and 3\nhist(titanic_train_survived_male$Age, labels = T) #Age between 20-40 has the more male survivors\nhist(titanic_train_survived_female$Age,labels = T, breaks = 8) #Age between 20-40 has the more female survivors\n\n#by pclass\ntitanic_train_survived_class1<- titanic_train_survived[titanic_train_survived$Pclass == 1,]\ntitanic_train_survived_class2<- titanic_train_survived[titanic_train_survived$Pclass == 2,]\ntitanic_train_survived_class3<- titanic_train_survived[titanic_train_survived$Pclass == 3,]\nbarplot(table(titanic_train_survived_class1$Sex)) #female had more chance of being a survivor in Pclass1\nbarplot(table(titanic_train_survived_class2$Sex)) #female had more chance of being a survivor in Pclass1\nbarplot(table(titanic_train_survived_class3$Sex)) #female had more chance of being a survivor in Pclass1\nhist(titanic_train_survived_class1$Age, labels = T) #Age between 20-40 has the more male and female survivors\nhist(titanic_train_survived_class2$Age, labels = T) #Age between 20-40 has the more male and female survivors\nhist(titanic_train_survived_class3$Age, labels = T) #Age between 0-30 has the more male and female survivors\n\n#by young\ntitanic_train_survived_adult<- titanic_train_survived[titanic_train_survived$young == 0,]\ntitanic_train_survived_young<- titanic_train_survived[titanic_train_survived$young == 1,]\nbarplot(table(titanic_train_survived_adult$Pclass)) #adults in Pclass1 had the most chance of survival\nbarplot(table(titanic_train_survived_young$Pclass)) #youngs in Pclass3 had the most chance of survival, followed by Pclass2 and 1\nbarplot(table(titanic_train_survived_adult$Sex)) #adults female had the most chance of survival\nbarplot(table(titanic_train_survived_young$Sex)) #youngs female had the most chance of survival\nhist(titanic_train_survived_adult$Age, labels = T) #adults 20-40 age had most chance of survival\nhist(titanic_train_survived_young$Age, breaks = 6, labels = T) #youngs 0-5 age had most chance of survival\n\n\n##Bivariate analysis\n#Pclass and Sex\nlibrary(ggplot2)\nggplot(titanic_train_survived, aes(titanic_train_survived$Pclass, fill = titanic_train_survived$Sex))+geom_bar()\n\n#Pclass and Age\nggplot(titanic_train_survived, aes(x = factor(titanic_train_survived$Pclass), y= titanic_train_survived$Age))+geom_boxplot()\nggplot(titanic_train_survived, aes(x = factor(titanic_train_survived$Pclass), y= titanic_train_survived$Age))+geom_boxplot()+theme_classic()\n\n#Pclass and young\nggplot(titanic_train_survived, aes(x = factor(titanic_train_survived$Pclass), fill= titanic_train_survived$Embarked, col = factor(titanic_train_survived$young)))+geom_bar()\n\n#Sex and Age\nggplot(titanic_train_survived, aes(x = factor(titanic_train_survived$Sex), y= titanic_train_survived$Age))+geom_boxplot()+theme_gray()\nlength(which(titanic_train_survived$Sex == \"female\"))\nlength(which(titanic_train_survived$Sex == \"male\"))\n\n#Sex and young\nggplot(titanic_train_survived, aes(x = factor(titanic_train_survived$Sex), y= titanic_train_survived$Age, fill= factor(titanic_train_survived$young)))+geom_boxplot()+theme_gray()\nggplot(titanic_train_survived, aes(x = factor(titanic_train_survived$Sex), fill= factor(titanic_train_survived$young)))+geom_bar(position = \"dodge\")+theme_gray()\n       \n#inferrence on Ananlysis:\n       #Embarkked == Southampton, passangers who had embarkked from Southampton had a higher chance of survival, could be cos of filling the front or forward places in the ship and easy to escape\n       #sex == female had more chance of survival\n       #Age >= 20 and <40 had a greater changce of survival\n       #Pcalss == 1 had the most chance of survival\n       #young == 0 (adult), adults had a greater chance of survival\n       \n#combination of all 5 (mentioned above) parameters have the best chance of the survival.\n#combination of 3-4 parameters have the good chance of the survival.\n#combination of 1-2 parameters have the least change of the survival","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"2c9d78d1914e08f1a6c673829460e9ec5827cffe"},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}