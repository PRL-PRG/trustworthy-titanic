
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # This Python 3 environment comes with many helpful analytics libraries installed
> # It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python
> # For example, here's several helpful packages to load in 
> # Load packages
> 
> library('ggplot2')
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library('ggthemes')
> library('scales')
Warning message:
package ‘scales’ was built under R version 3.6.2 
> library('dplyr')

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library('mice')

Attaching package: ‘mice’

The following objects are masked from ‘package:base’:

    cbind, rbind

Warning message:
package ‘mice’ was built under R version 3.6.2 
> library('randomForest')
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:dplyr’:

    combine

The following object is masked from ‘package:ggplot2’:

    margin

> 
> train <- read.csv('../input/train.csv', stringsAsFactors = F)
> test <- read.csv('../input/test.csv', stringsAsFactors = F)
> 
> full <- bind_rows(train, test)
> str(full)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : chr  "male" "female" "female" "female" ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : chr  "S" "C" "S" "S" ...
> 
> #Grab title from passenger names
> full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
> #show title counts by sex
> table(full$Sex, full$Title)
        
         Capt Col Don Dona  Dr Jonkheer Lady Major Master Miss Mlle Mme  Mr Mrs
  female    0   0   0    1   1        0    1     0      0  260    2   1   0 197
  male      1   4   1    0   7        1    0     2     61    0    0   0 757   0
        
          Ms Rev Sir the Countess
  female   2   0   0            1
  male     0   8   1            0
> 
> # Combine titles with very low cell counts to be combined to "rare" level
> rare_title <- c('Dona', 'Lady', 'the Countess', 'Capt', 'Col', 'Don', 
+ 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
> 
> # Also reassign mlle, ms, and mme
> full$Title[full$Title == 'Mlle'] <-'Miss'
> full$Title[full$Title == 'Ms'] <- 'Miss'
> full$Title[full$Title == 'Mme'] <-'Mrs'
> full$Title[full$Title %in% rare_title] <- 'Rare Title'
> 
> #Show title counts by sex again
> table(full$Sex, full$Title)
        
         Master Miss  Mr Mrs Rare Title
  female      0  264   0 198          4
  male       61    0 757   0         25
> 
> #Finally, grab surname
> full$Surname <- sapply(full$Name,
+                     function(x) strsplit(x, split = '[,.]')[[1]][1])
> 
> cat(paste('We have <b>', nlevels(factor(full$Surname)), '</b> unique surnames.
+ I would be interested to infer ethnicity based on surname...'))
We have <b> 875 </b> unique surnames.
I would be interested to infer ethnicity based on surname...> 
> #Create family Size variable
> full$Fsize <- full$SibSp + full$Parch +1
> 
> #Create Family variable
> full$Family <- paste(full$Surname, full$Fsize, sep='_')
> 
> #Use ggpot2 to Visualize the relationship
> ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) + 
+     geom_bar(stat='count', position='dodge')+
+     scale_x_continuous(breaks=c(1:11)) + 
+     labs(x = 'Family Size') +
+     theme_few()
> 
> proc.time()
   user  system elapsed 
  0.885   0.086   0.971 
