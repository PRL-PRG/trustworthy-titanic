
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
>  options(warn= -1)
>   nomsg<-suppressMessages
>    nomsg(library(tidyverse))
>    nomsg(library(caret))
>     nomsg(library(mice))
>       nomsg(library(RANN))
> train<-read.csv("../input/train.csv")
> train<-as.tibble(train)  
> 
> str(train)
tibble [891 Ã— 12] (S3: tbl_df/tbl/data.frame)
 $ PassengerId: int [1:891] 1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int [1:891] 0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int [1:891] 3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : Factor w/ 891 levels "Abbing, Mr. Anthony",..: 109 191 358 277 16 559 520 629 417 581 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num [1:891] 22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int [1:891] 1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int [1:891] 0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num [1:891] 7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 148 levels "","A10","A14",..: 1 83 1 57 1 1 131 1 1 1 ...
 $ Embarked   : Factor w/ 4 levels "","C","Q","S": 4 2 4 4 4 3 4 4 4 2 ...
> 
> #Remove cabin,name,Ticket for now as these may not predict survival 
> train<-train %>% 
+   mutate(PassengerId=as.factor(PassengerId),Pclass=as.factor(Pclass),
+          Survived=as.factor(Survived),AgeGroup=as.factor(findInterval(Age,c(0,18,35,100)))) %>% 
+  select(-PassengerId,-Name,-Ticket,-Cabin,-Embarked)
> 
> #View and deal with nas
> anyNA(train$AgeGroup) 
[1] TRUE
> 
> nomsg(require(Amelia))
> missmap(train,col=c("snow","indianred4"),main="Who's missing aboard the Titanic?!")
> 
> #Change levels
> levels(train$AgeGroup)<-c("Young","Mid Age","Aged")
> levels(train$Sex)<-c("F","M")
> #Impute median
> train_1<-mice(train,m=3,method="cart",printFlag = F)
> train_imp<-complete(train_1)
> 
> #checkNAs
> anyNA(train_imp) 
[1] FALSE
> 
> #redo levels
> train_imp<-train_imp %>% 
+   mutate(AgeGroup=as.factor(findInterval(Age,c(0,18,35,100))))
> levels(train_imp$AgeGroup)<-c("Young","Mid Age","Aged")
> 
> train_imp %>% 
+ group_by(Survived) %>% 
+ summarise(n=n()) %>% 
+ mutate(prop=n/sum(n)) %>% 
+ ggplot(aes(Survived,prop,fill=Survived))+geom_col()+
+ geom_text(aes(label=round(prop*100,1)))+
+ scale_fill_manual(values=c("whitesmoke","indianred2"))+
+ ggpubr::theme_pubr()+
+ ggtitle("Proportion(s) of Survival and Deaths")+
+ labs(caption=("There were more chances of survival"))+
+ theme(plot.caption=element_text(colour="steelblue",size=13),
+      plot.title=element_text(colour="steelblue",size=13,hjust=0.5))
`summarise()` ungrouping output (override with `.groups` argument)
> 
> Fares<-train_imp %>% 
+ group_by(Fare) %>% 
+ summarise(n=n()) %>% 
+ mutate(FareGroup=as.factor(findInterval(Fare,c(0,100,200,500)))) 
`summarise()` ungrouping output (override with `.groups` argument)
> levels(Fares$FareGroup)<-c("Cheap","Medium","Expensive","VIP")
>  Fares %>% 
+  group_by(FareGroup) %>% 
+ summarise(n=n()) %>% 
+ ggplot(aes(FareGroup,n,fill=FareGroup))+geom_col()+
+ ggthemes::theme_hc()+
+ geom_label(aes(label=n))+
+ labs(caption="Majority had cheap tickets")+
+ ggtitle("Who bought which ticket?")+
+ theme(plot.caption=element_text(colour="black",face="bold",size=14),
+      plot.title=element_text(colour="black",face="bold",size=14,hjust=0.5))+
+ scale_fill_manual(values=c("indianred2","dodgerblue","orange3","yellow2"))
`summarise()` ungrouping output (override with `.groups` argument)
> 
> train_imp_1<-train_imp %>% 
+ mutate(FareGroup=as.factor(findInterval(Fare,c(0,100,200,500)))) 
> levels(train_imp_1$FareGroup)<-c("Cheap","Medium","Expensive","VIP") 
> train_imp_1 %>% 
+ ggplot(aes(Survived,Sex,fill=Sex))+geom_col()+facet_grid(~FareGroup)+
+ ggpubr::theme_pubr()+
+ ggtitle("The Cheaper The Ticket, The Lower The Survival Chances")+
+ scale_fill_manual(values=c("orange4","violet"))+
+ labs(caption="The VIP Survived")+
+ theme(plot.caption=element_text(colour="black",face="bold",size=14),
+      plot.title=element_text(colour="black",face="bold",size=14,hjust=0.5),
+      axis.text.y=element_blank())
> 
> 
> train_imp_1 %>% 
+ group_by(AgeGroup) %>% 
+ summarise(n=n()) %>% 
+ mutate(Prop=(n/sum(n))*100) %>% 
+ arrange(desc(Prop)) %>% 
+ mutate(AgeGroup=fct_reorder(AgeGroup,Prop)) %>% 
+ ggplot(aes(AgeGroup,Prop,fill=AgeGroup))+geom_col()+
+ ggthemes::theme_economist()+
+ geom_label(aes(label=Prop))+
+ theme(panel.background=element_rect(fill="white"),
+      plot.background=element_rect(fill="white"))+
+ guides(fill=F)+
+ ggtitle("There were more Mid-Aged individuals aboard the Titanic")
`summarise()` ungrouping output (override with `.groups` argument)
> 
> #Let's visualise survival by Age Group
> train_imp %>% 
+    ggplot(aes(Survived,fill=Sex))+geom_histogram(stat="count")+facet_wrap(AgeGroup~Pclass)+
+   ggtitle("Survival by class,Agegroup and Gender")+theme(plot.title=element_text(hjust=0.5))+
+  scale_fill_manual(values=c("steelblue3","orange"))+
+ ggthemes::theme_gdocs()+
+ theme(panel.background=element_rect(fill="snow"),
+      panel.grid=element_blank(),
+      axis.text=element_text(colour="black",face="bold"),
+      axis.title=element_text(colour="dodgerblue",face="bold"),
+      plot.title=element_text(hjust=0.5,colour="dodgerblue",face="italic"))
> 
> train_imp_1 %>% 
+ filter(Sex=="F"|AgeGroup=="Young") %>% 
+ group_by(Survived) %>% 
+ summarise(n=n()) %>% 
+ mutate(Survival=n/sum(n)) %>% 
+ ggplot(aes(Survived,as.factor(Survival),fill=as.factor(Survival)))+geom_col()+
+ ggthemes::theme_hc()+
+ geom_label(aes(label=Survival))+
+ theme(panel.background=element_rect(fill="white"),
+      plot.background=element_rect(fill="white"))+
+ guides(fill=F)+
+ scale_fill_manual(values=c("dodgerblue","tan3"))+
+ ggtitle("At First Glance It Appears To have Worked")+
+ labs(x="Survival",y="Proportional of total number")
`summarise()` ungrouping output (override with `.groups` argument)
> 
> 
> #Create partition
> train1<-createDataPartition(train_imp$Survived,p=0.8,list=F)
> validate<-train_imp[-train1,]
> train1<-train_imp[train1,]
> #Set metric and control
> control<-trainControl(method="repeatedcv",number = 10,repeats = 3)
> metric<-"Accuracy"
> 
> #Set up models
> set.seed(233)
> fit.knn<-train(Survived~.,data=train1,method="knn",trControl=control,metric=metric)
> set.seed(233)
> fit.svm<-train(Survived~.,data=train1,method="svmRadial",trControl=control,metric=metric)
> set.seed(233)
> fit.cart<-train(Survived~.,data=train1,method="rpart",trControl=control,metric=metric)
> set.seed(233)
> fit.rf<-train(Survived~.,data=train1,method="rf",trControl=control,metric=metric)
> set.seed(233)
> fit.nb<-train(Survived~.,data=train1,method="nb",trControl=control,metric=metric,verbose=F)
Something is wrong; all the Accuracy metric values are missing:
    Accuracy       Kappa    
 Min.   : NA   Min.   : NA  
 1st Qu.: NA   1st Qu.: NA  
 Median : NA   Median : NA  
 Mean   :NaN   Mean   :NaN  
 3rd Qu.: NA   3rd Qu.: NA  
 Max.   : NA   Max.   : NA  
 NA's   :2     NA's   :2    
Error: Stopping
Execution halted
