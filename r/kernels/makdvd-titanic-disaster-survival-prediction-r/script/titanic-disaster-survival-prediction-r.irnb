{"cells":[{"metadata":{"_uuid":"8f912923db07e80d9313505d7d30ba15bd39ded3"},"cell_type":"markdown","source":"**Dataset**"},{"metadata":{"_uuid":"838a9c46c9608f015bb6c3d67d7e4c3c544dacc1"},"cell_type":"markdown","source":"In 1912, the Titanic sank in the North Atlantic Ocean. There were 2,224 people on board and 706 of passengers survived. All the passengers were divided into a training dataset and a test dataset. \nIn this kernel, the goal is to use and learn from test dataset to predict survivors in test dataset based on input variables. \n"},{"metadata":{"_uuid":"04b7f4160bf62b409f92c1ef8e87b110b3af341c","_execution_state":"idle","trusted":true},"cell_type":"code","source":"# File path:\nlist.files(path = \"../input\")\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a220d826081bda8575b7c3b4d1f9a6dba461500c"},"cell_type":"code","source":"# Load packages:\nlibrary(tidyverse) \nlibrary(readr)\nlibrary(tidyverse)\nlibrary(ggplot2)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"063fdb26e05f9eb5fa7d39478a042bd0ef087c41"},"cell_type":"markdown","source":"Let’s first read the training and test datasets and see the first 3 observations of the datasets:\n"},{"metadata":{"trusted":true,"_uuid":"8f51e027ca2be87d56ca897aebc6b8cac058cf3f"},"cell_type":"code","source":"# Read datasets:\ntrain_data <- read_csv(\"../input/train.csv\")\ntest_data <- read_csv(\"../input/test.csv\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"fd7836a8efa0caf6af8c1532222a025e71c77f10"},"cell_type":"code","source":"# See structure of the datasets:\nglimpse(train_data)\nglimpse(test_data)\n# See 3 head observation of the datasets:\nhead(train_data, n=3)\nhead(test_data, n=3)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"98198cbcfa9e62dfdca8a9ff4d6e3027b11850cd"},"cell_type":"markdown","source":"**Missing values**"},{"metadata":{"_uuid":"d831b3c6f1f0cfe91e2b5ecd897933438050c7e2"},"cell_type":"markdown","source":"Three columns, Age, Cabin, and Embarked, have missing values in the training dataset. \n* Age has 177 missing values.\n* Cabin variable is missing 678 values.\n* Embarked is missing only 2 values.\n"},{"metadata":{"trusted":true,"_uuid":"e67a9bef12266e2f805e0a09d962bdd4302c4e36"},"cell_type":"code","source":"# Find missing data points in train_data:\nmiss_survived <- any(is.na(train_data$Survived))\nmiss_pclass <- any(is.na(train_data$Pclass))\nmiss_sex <- any(is.na(train_data$Sex))\nmiss_age <- any(is.na(train_data$Age))\n# 177 missing value in Age column\nmiss_age_sum <- sum(is.na(train_data$Age))            \nmiss_fare <- any(is.na(train_data$Fare))\nmiss_cabin <- any(is.na(train_data$Cabin))\n# 678 missing value in Cabin column\nmiss_cabin_sum <- sum(is.na(train_data$Cabin))        \nmiss_embarked <- any(is.na(train_data$Embarked))\n# 2 missing value in Embarked column\nmiss_embarked_sum <- sum(is.na(train_data$Embarked))  ","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"bc193eebae24caa6fd267fdc77633bdd652e77e8"},"cell_type":"code","source":"# Remove passengers with missing Embarked or Age:\nctrain_data <- subset(train_data, is.na(Embarked)==FALSE & is.na(Age)==FALSE)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"ddf497564896443d4c7a6f5c5a2b6b27853870fc"},"cell_type":"markdown","source":"**Manipulating the dataset**"},{"metadata":{"_uuid":"4ad7750bfa55df9a4a004129560a1b969dfdb860"},"cell_type":"markdown","source":"It seems that the first letter of the Cabin value is important, so let’s extract the first letter from the Cabin variable and change it to a categorical variable:\n"},{"metadata":{"trusted":true,"_uuid":"233919dcee879d27edcf50bc865e79eb90694815"},"cell_type":"code","source":"# Extract first letter of Cabin column:\nctrain_data$Cabin <- substring(ctrain_data$Cabin, 1,1)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"ee643265e2225844dd4895dd7f4c96115aa84e4f"},"cell_type":"markdown","source":"**Visualizing patterns**"},{"metadata":{"_uuid":"57299522493042943a18c18765656584a2e62e0c"},"cell_type":"markdown","source":"In this part, the training dataset was used to visualize the relationship between variables. "},{"metadata":{"trusted":true,"_uuid":"9d4c3f26dead20723121c6187aa33a5939d9eaf8"},"cell_type":"code","source":"# Change type of ctrain_data variables to categorical:\nctrain_data$Survived <- as.factor(ctrain_data$Survived)\nctrain_data$Pclass <- as.factor(ctrain_data$Pclass)\nctrain_data$Sex <- as.factor(ctrain_data$Sex)\nctrain_data$Embarked <- as.factor(ctrain_data$Embarked)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"0b9a0aab5f1d360b9c224f39511e57786a1c2fcf"},"cell_type":"markdown","source":"*  Let’s start with the effect of sex on the survival of passengers:\n"},{"metadata":{"trusted":true,"_uuid":"220af6d392dda0063853195b2819b6e9f5ffd6ac"},"cell_type":"code","source":"# Plot survived vs sex:\nggplot(ctrain_data, aes(x=Sex, fill=Survived))+    \n  geom_bar(alpha=0.2)\n# Looks like male passengers are more likely to die","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"688b223c02eef302f6b320890618479f3181c249"},"cell_type":"markdown","source":"It looks like male passengers are more likely to die.\n"},{"metadata":{"trusted":true,"_uuid":"7318174a412bff59c677dc0d2a81886ff2859a0b"},"cell_type":"code","source":"# Look at same graph with proportion. \nggplot(ctrain_data, aes(x=Sex, fill=Survived))+    \n  geom_bar(alpha=0.2, position = \"fill\")\n# Sex seems to be significant variable.","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"662d073bdde12bb49f1109b5c4c99ab7b616dbc9"},"cell_type":"markdown","source":"Sex seems to be significant variable."},{"metadata":{"_uuid":"2c24903f51ec9ff0d57567a09540c57e5bce1eb7"},"cell_type":"markdown","source":"*  Let’s see the relation between age and survival:"},{"metadata":{"trusted":true,"_uuid":"c22d7e96d63925b53d1d97b85ff651b737a88911"},"cell_type":"code","source":" # See age impact:\nggplot(ctrain_data, aes(x=Age, fill=Survived))+    \n  geom_density(alpha=0.2)\n# Age does not seem to have a direct impact on survival.","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"b6a067c8053165d59de9fc2ac8f2f290eb806713"},"cell_type":"markdown","source":"As shown in scatter plot above, the age does not seem to have a direct impact on survival, and both have a very close distribution."},{"metadata":{"_uuid":"6cfaeb294f3f5954102009371cb79654f5640323"},"cell_type":"markdown","source":"*  Let see age and sex variable together: "},{"metadata":{"trusted":true,"_uuid":"fd4b8ee465cf743674319de1c3419a56d19bbaac"},"cell_type":"code","source":"# See age and sex variable together:  \nggplot(ctrain_data, aes(x=Sex, y=Age, color=Survived))+\n  geom_jitter(alpha=0.5)\n# younger male tend to survive.\n# Women are more likely to survive. ","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"b502ad3faecee09e8ff3451f6b55e5800043be20"},"cell_type":"markdown","source":"Again, women are more likely to survive."},{"metadata":{"_uuid":"e05420a28917b1057409eddec9b024952151c835"},"cell_type":"markdown","source":"*  Let’s see fare ticket impact:"},{"metadata":{"trusted":true,"_uuid":"8f86e441f338a5f25e2368991ae0f2ad27802112"},"cell_type":"code","source":"# See fare ticket impact: \nggplot(ctrain_data, aes(x=Fare, fill=Survived))+\n  geom_density(alpha=0.2)\n# passenger with expensive ticket fares are more likely to survive. ","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"6df635d6fccb24a5d1ec097d9aa15d8786813f9d"},"cell_type":"markdown","source":"As a result, passengers with more expensive ticket fares are more likely to survive.\n"},{"metadata":{"_uuid":"1b6efa5d6bde4e95fb7324f1516b1132c1c38028"},"cell_type":"markdown","source":"*  Let’s look at class impact:"},{"metadata":{"trusted":true,"_uuid":"fdd7b8623eeae9cb7160b2f6557d21e8876e0e29"},"cell_type":"code","source":"# Look at class impact: \nggplot(ctrain_data, aes(x=Pclass, fill=Survived))+\n  geom_bar(alpha=0.2)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"71575614da59ee9eaf82cd9193093901334172bf"},"cell_type":"markdown","source":"As illustrated in the barplot above, a greater proportion of class 3 passengers died. "},{"metadata":{"_uuid":"8dd55434a4f927bdcd8ec58ee12020ecdb629f0c"},"cell_type":"markdown","source":"*  Let's look at sex and class together:"},{"metadata":{"trusted":true,"_uuid":"e7b2e445e5a7f29a4df4b27bf0776064f55f9e0f"},"cell_type":"code","source":"# Sex and class are correlated. \nggplot(ctrain_data, aes(x=factor(1), fill=Sex))+\n  geom_bar(alpha=0.5, width =1, position =\"fill\")+\n  facet_grid(.~Pclass) +\n  coord_polar(theta = \"y\")\n# About 70% of class 3 passenger are male.","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"1ed8524dca8a79feba5178abb2713db73be141de"},"cell_type":"markdown","source":"About 70% of class 3 passenger are male."},{"metadata":{"_uuid":"9bd743a990c481b8446bf3bfe9a80e67ae253531"},"cell_type":"markdown","source":"*  Let's see ticket fare and class together:"},{"metadata":{"trusted":true,"_uuid":"efbc921d59ca45736e0ed2e867f5994d7f40cddf"},"cell_type":"code","source":"# See ticket fare and class together: \nggplot(ctrain_data, aes(x=Pclass, y=Fare, color=Survived))+\n  geom_jitter(alpha=0.5)\n# Ticket fare and class are correlated.","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"b4c4ec9d6e5b497464f566fec72b8ed6043ede3c"},"cell_type":"markdown","source":"Ticket fare and class are correlated."},{"metadata":{"_uuid":"0ed49e15d74689dd782abd3a9f68dd88f594f4e7"},"cell_type":"markdown","source":"*  Let’s see embarked effect:"},{"metadata":{"trusted":true,"_uuid":"c6113cd14b819ebeeb240da25bc9dbe67ee03321","scrolled":true},"cell_type":"code","source":"# See Embarkation site effect:\nggplot(ctrain_data, aes(x=Embarked, fill=Survived))+\n  geom_bar(alpha=0.2)\n# here is the same graph with ratio: \nggplot(ctrain_data, aes(x=Embarked, fill=Survived))+\n  geom_bar(alpha=0.2, position=\"fill\")\n# Seems Embarked C has higher survival rate. ","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"e77273501015d82e68a3615844fada49e5477b35"},"cell_type":"markdown","source":"It seems that embarked C has a higher survival rate."},{"metadata":{"_uuid":"7964cf6b765e8d844b3e8af2a78995466033d91e"},"cell_type":"markdown","source":"Let's look at both class and embarked site:"},{"metadata":{"trusted":true,"_uuid":"fa29da22d4e55b67788b40acc7391ae5fab73bc8"},"cell_type":"code","source":"# Look at both class and embarked site:  \nggplot(ctrain_data, aes(x=Pclass, color=Survived))+\n  geom_bar(alpha=0.5)+\n  facet_grid(~Embarked)\n# Embarked C has higher ratio of class 1 and class 1 passengers are those who survive. ","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"da5548761d6cff7e3f9016cd4747cd765269fb8a"},"cell_type":"markdown","source":"Embarked C has a higher ratio of class 1 and class 1 passengers are those who survive."},{"metadata":{"_uuid":"75472fff27fec6b3d29125cd3d444b52b542343a"},"cell_type":"markdown","source":"* Let's look at both fare and embarked site:"},{"metadata":{"trusted":true,"_uuid":"4d10e9dedf2e69ffcaba502b7a6ed2ab79c06e92"},"cell_type":"code","source":"# Look at both fare and embarked site: \nggplot(ctrain_data, aes(y=Fare, color=Survived))+\n  geom_boxplot(alpha=0.5)+\n  facet_grid(~Embarked) +\n  theme(axis.text.x = element_blank())","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"377603aa8883bde9b13e8fc0bb495eede8dd4c71"},"cell_type":"markdown","source":"*  Let's look at Embarked and Sex"},{"metadata":{"trusted":true,"_uuid":"6bed92d78022f95699f08da4c3e54c89f9968d44"},"cell_type":"code","source":"# Look at Embarked and Sex combination: \nggplot(ctrain_data, aes(x=Sex, fill=Survived))+\n  geom_bar(alpha=0.5)+\n  facet_grid(~Embarked)\n# Embarked S has higher ratio of male passenger who are more likely to die. ","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"941f66b46db7dfbb1688c308098ee02eff19b923"},"cell_type":"markdown","source":"Embarked S has higher ratio of male passenger who are more likely to die."},{"metadata":{"_uuid":"0fe8d382614bfb5b1da2b56fde4a9f2f8589004e"},"cell_type":"markdown","source":"* Let's look at Cabine effect:"},{"metadata":{"trusted":true,"_uuid":"60acd485f0f30f111c72e6ef85797fe23b19d3c2"},"cell_type":"code","source":"# Look at Cabine effect:\nggplot(ctrain_data, aes(x=factor(Cabin), fill=Survived))+\n  geom_bar(alpha=0.2)\n# Notice that almost all passengers in cabine T died\nggplot(ctrain_data, aes(x=factor(Cabin), fill=Survived))+\n  geom_bar(alpha=0.2, position=\"fill\")","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"28624644f9e0aebae128db37aa015c3ec505c82e"},"cell_type":"markdown","source":"Notice that almost all passengers in cabine T died. "},{"metadata":{"_uuid":"e4c6277e6e9b15d5b0f6325d277217362657a293"},"cell_type":"markdown","source":"**Fitting logistic regression model**"},{"metadata":{"_uuid":"d645f0cc10a554d26c6e41679ded80f1ba496846"},"cell_type":"markdown","source":"In the first model, a logistic regression model without interactions was fitted to training dataset. "},{"metadata":{"trusted":true,"_uuid":"59d302d6e056f37dd7705745e40dc6cb3e156654"},"cell_type":"code","source":"# Fit logistic regression model without interactions:\nfit1 <- glm(Survived~Sex+Age+Pclass+Fare+Cabin+Embarked, data=ctrain_data, family = binomial) \nsummary(fit1)\n","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"a80a8aa30b9c672cd8e8dd9ef678a534129eecb2"},"cell_type":"markdown","source":"Sex, Age, and Cabin are significant variables. So, new model fit2 was fitted:"},{"metadata":{"trusted":true,"_uuid":"46dde2274bd3bab2dc0e347aac9d33791182eea2"},"cell_type":"code","source":"# Drop insignificant variables:\nfit2 <- glm(Survived~Sex+Age+Cabin, data=ctrain_data, family = binomial) \nsummary(fit2)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"267e0378a76280d1bb31d12b3bb16555793b57da"},"cell_type":"markdown","source":"In this step, a logistic regression model with all 2 level interactions was fitted to training dataset."},{"metadata":{"trusted":true,"_uuid":"a4b2b8299a282734fe88ce27ee835788be84324c"},"cell_type":"code","source":"# Fit logestic regression model with 2 level interactions:\nfit3 <- glm(Survived~Sex+Age+Pclass+Fare+Cabin+Embarked+\n              Sex*Age+Sex*Pclass+Sex*Fare+Sex*Embarked+\n               Age*Fare+Age*Embarked+\n              Fare*Embarked, \n            data=ctrain_data, family = binomial) \nsummary(fit3)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"71cae1f0b1dba36dc1ea10de1609a69634a4bbf0"},"cell_type":"markdown","source":"Sex, Age, and Age*Fare are significants variables. So, a new model fit4 was fitted:"},{"metadata":{"trusted":true,"_uuid":"0c7b3ebf3269757b551569ae33fa4c43198cc6e4"},"cell_type":"code","source":"# Drop insignificant variables:\nfit4 <- glm(Survived~Sex+Age+Age*Fare, data=ctrain_data, family = binomial) \nsummary(fit4)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"5f87d1c1963941effeb309b85028d80e5839916b"},"cell_type":"markdown","source":"Fit4 is the best adequate fit with p-value equals to 0.58"},{"metadata":{"trusted":true,"_uuid":"9128874b4a786037123a1976cf734b2c19b5a240"},"cell_type":"code","source":"# Chose the best fit: (fit4)\nfit4 <- glm(Survived~Sex+Age+Age*Fare, data=ctrain_data, family = binomial)\npchisq(deviance(fit4), df.residual(fit4), lower=TRUE)\n# Model is adequate.","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"143e6957d6541660835f41f83a4eb9813730f6c0"},"cell_type":"code","source":"# Using Chi test to check if we can drop any variable of fit4:\ndrop1(fit4,test=\"Chi\")\n# No need to drop variables","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"7451dc3b09354ff8dc2f12d28cdbe7ea77127a4b"},"cell_type":"markdown","source":"In this step, response  value was calculated:"},{"metadata":{"trusted":true,"_uuid":"33c32453c535a06f252b43761898ea2205f7cd5c"},"cell_type":"code","source":"# Fitted response value with fit4: \nfitted_response <- fitted(fit4)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"c5f437cfc7ec3aa4beb8bb446017d641a1f3cfcb"},"cell_type":"markdown","source":"**Predicting the test dataset**"},{"metadata":{"_uuid":"22cab380346ae4da039782e51551b515f2bd8f75"},"cell_type":"markdown","source":"In this part, the goal is to use \"fit4\" and predict survivors in test dataset."},{"metadata":{"_uuid":"3e8be92046cf13efaf2d9f3e2fa7bed4757f24f4"},"cell_type":"markdown","source":"Let's change type of variables in test dataset:"},{"metadata":{"trusted":true,"_uuid":"b20c8628845c285c2363054bb92d7720b0dde286"},"cell_type":"code","source":"# Manipulation of test_data:\nctest_data <- test_data[ , -c(1,3,6,7,8)]\nctest_data$Cabin <- substring(ctest_data$Cabin, 1,1)\nctest_data$Pclass <- as.factor(ctest_data$Pclass)\nctest_data$Sex <- as.factor(ctest_data$Sex)\nctest_data$Embarked <- as.factor(ctest_data$Embarked)","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"5de0575aeaf36bbb97a9cc820ab3df058615ca6d"},"cell_type":"markdown","source":"Three columns, Age, Cabin, and Fare have missing values in the test dataset. \n* Age has 86 missing values\n* Cabin variable is missing 327 values.\n* Fare is missing only 1 values. "},{"metadata":{"trusted":true,"_uuid":"6cf518b7d148871d7f1e6fdf0cc1efa53ce7f716"},"cell_type":"code","source":"# Find missing values in ctest_data:\nmiss_pclass_t <- any(is.na(ctest_data$Pclass))\nmiss_sex_t <- any(is.na(ctest_data$Sex))\nmiss_age_t <- any(is.na(ctest_data$Age))\n# 86 missing values in Age column.\nmiss_age_t_sum <- sum(is.na(ctest_data$Age))\nmiss_fare_t <- any(is.na(ctest_data$Fare))\n# 1 missing value in Fare column.\nmiss_fare_t_sum <- sum(is.na(ctest_data$Fare))\nmiss_cabin_t <- any(is.na(ctest_data$Cabin))\n# 327 missing values in Cabin column.\nmiss_cabin_t_sum <- sum(is.na(ctest_data$Cabin))\nmiss_embarked_t <- any(is.na(ctest_data$Embarked))\n","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"dbda9e186195511be52e2239c63d2a89a7c1b231"},"cell_type":"markdown","source":"Imputing the missing values for Age column is the next step:"},{"metadata":{"trusted":true,"_uuid":"cca109bf3a00b6d499ab1de169ea2d022e061bec"},"cell_type":"code","source":"# Estimating missing values in age column: \nggplot(ctrain_data, aes(x=Age, color=Sex))+\n  geom_histogram(alpha=0.5)+\n  facet_grid(~Pclass)\n# median is better estimator for age compared to mean since age distribution is skewed.\n# Sex and age are not correlated.\n# Age and class are correlated.","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"33642dc257d26e037dbc634202304715d3880ada"},"cell_type":"markdown","source":"Median is better estimator for age compared to mean since age distribution is skewed."},{"metadata":{"_uuid":"0c86bffc3668a53a917d66ac5212ed2a668d95d5"},"cell_type":"markdown","source":"Since Sex and Age are not correlated, and Age and Class are correlated, missing Age values were estimated with medians of age in each class type. "},{"metadata":{"trusted":true,"_uuid":"246b6ae582fd2586cee629d40503f39538aa210c"},"cell_type":"code","source":"# Find medians of age in each class type:\nmedian_age <- train_data %>%\n  filter(!is.na(Age)) %>%\n  group_by(Pclass) %>%\n  summarize(median(Age))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"f83267680508130d2fa8164356951d2a22677491"},"cell_type":"code","source":"# Estimate age with class type:\nctest_data<- ctest_data %>%\n  mutate(Age=ifelse((is.na(Age) & Pclass==1) ,unlist(median_age[1,2]),Age)) %>%\n  mutate(Age=ifelse((is.na(Age) & Pclass==2) ,unlist(median_age[2,2]),Age)) %>%\n  mutate(Age=ifelse((is.na(Age) & Pclass==3) ,unlist(median_age[3,2]),Age))","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"c14252dd102b8a4f4eedf17bbe3270c7ca2031ad"},"cell_type":"markdown","source":"Now, impute the missing values for Fare column:"},{"metadata":{"trusted":true,"_uuid":"c79029ffb1a4b5d659b153f9b8ff2e453d847750"},"cell_type":"code","source":"# Estimating missing value in fare column:\nggplot(ctrain_data, aes(y=Fare, color=Sex))+\n  geom_boxplot(alpha=0.5)+\n  facet_grid(~Pclass) +\n  theme(axis.text.x = element_blank())\n# median is better estimator for ticket fare compared to mean due to skewness.\n# ticket fare and class are correlated.","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"a812ec5bb0bfcc4c56c32c58f241f2dcc907fa80"},"cell_type":"markdown","source":"Median is better estimator for ticket fare compared to mean due to skewness of Fare distribution."},{"metadata":{"_uuid":"01bd5883024c9f15934efbfe7ed14f7dbc69118d"},"cell_type":"markdown","source":"Since ticket fare and class are correlated, missing Fare values were estimated with medians of ticket fare in each class type."},{"metadata":{"trusted":true,"_uuid":"e2d0d9d7596e965ea2de044803b422f905670ab2"},"cell_type":"code","source":"# Find medians of ticket fare in each class type:\nmedian_fare <- train_data %>%\n  filter(!is.na(Fare)) %>%\n  group_by(Pclass) %>%\n  summarize(median(Fare))","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"80501119f81422f058947f2d1075b3cb9c1f9d74"},"cell_type":"code","source":"# Estimate ticket fare with class type:\nctest_data <- ctest_data %>%\n   mutate(Fare=ifelse((is.na(Fare) & Pclass==1) ,unlist(median_fare[1,2]),Fare)) %>%\n   mutate(Fare=ifelse((is.na(Fare) & Pclass==2) ,unlist(median_fare[2,2]),Fare)) %>%\n   mutate(Fare=ifelse((is.na(Fare) & Pclass==3) ,unlist(median_fare[3,2]),Fare)) ","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"d51a4d1ee5a925203b59c5810efe361c4b99fa79"},"cell_type":"markdown","source":"In the last step, predicted response for test dataset was computed:"},{"metadata":{"trusted":true,"_uuid":"4d4e572d8a0913547767a2ef2dc0c494fc9b3024"},"cell_type":"code","source":"# Predict ctest_data with fit4: (chance of surviving for each passenger)\nfit4 <- glm(Survived~Sex+Age+Age*Fare, data=ctrain_data, family = binomial)\nfitted_test <- predict.glm(fit4, ctest_data, type=\"response\")\n# Change probability to binary variable: (survived or died)\ntrs <- function(x, k=0.5){ if (x>=k) {return(1)} else {return(0)} }\npredict_test <- lapply(fitted_test, trs)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"0d3b8b25a66d724a5d530330305acdb834d43aba"},"cell_type":"code","source":"# My prediction is predict_test :)\nhead(predict_test, n=20)","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}