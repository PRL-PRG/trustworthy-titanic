
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # This R environment comes with all of CRAN preinstalled, as well as many other helpful packages
> # The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats
> # For example, here's several helpful packages to load in 
> 
> library(ggplot2) # Data visualization
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(readr) # CSV file I/O, e.g. the read_csv function
> library(stringr)
> # Input data files are available in the "../input/" directory.
> # For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory
> 
> system("ls ../input")
gender_submission.csv
test.csv
train.csv
> 
> 
> training <- read.csv("../input/train.csv")
> test <- read.csv("../input/test.csv")
> test$Survived <- rep("None")
> data.combined <- rbind(training,test)
> #data.combined[892,]
> #table(training$Survived)
> #table(training$Pclass)
> training$Pclass <- as.factor(training$Pclass)
> p <- ggplot(training, aes(x=Pclass,fill= factor(Survived)))
> p <- p + geom_histogram(stat="count",width=0.5)+ xlab("Pclass")+ ylab("Total Count")+ labs(fill = "Survived")
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> 
> dup_names <- as.character(data.combined[which(duplicated(data.combined$Name)),"Name"])
> dup_names <- data.combined[which(data.combined$Name %in% dup_names),]
> master <- data.combined[which(str_detect(data.combined$Name,"Master.")),]
> misis <- data.combined[which(str_detect(data.combined$Name,"Miss.")),]
> #misis[1:5,]
> mises <- data.combined[which(str_detect(data.combined$Name,"Mrs")),]
> #mises[1:5,]
> mister <- data.combined[which(data.combined$Sex == "male"),]
> #mister[1:5,]
> extract_title <- function(name){
+   name <- as.character(name)
+   
+   if(length(grep("Miss.",name)) > 0){
+     return("Miss.")
+   }
+   else if(length(grep("Master.",name)) > 0){
+     return("Master.")
+   }
+   else if(length(grep("Mrs.",name)) > 0){
+     return("Mrs.")
+   }
+   else if(length(grep("Mr.",name)) > 0){
+     return("Mr.")
+   }
+   else{
+     return("Other")
+   }
+ }
> 
> title <- NULL
> for(i in 1:nrow(data.combined))
+ {
+   title <- c(title,extract_title(data.combined[i,"Name"]))
+ }
> 
> data.combined$title <- as.factor(title)
> 
> 
> # ggplot() for the newly data
> ggplot(data.combined[1:891,],aes(x=title,fill = Survived)) + geom_bar(width=0.5) + facet_wrap(~ Pclass)
> 
> #table(data.combined$Sex)
> 
> #visualise the data through graph
> ggplot(data.combined[1:891,],aes(x=Sex,fill=Survived)) +
+   geom_bar(width=0.5) +
+   facet_wrap(~ Pclass) +
+   ggtitle("Pclass") +
+   xlab("Sex") + 
+   ylab("Total Count") +
+   labs(fill = "Survived")
> 
> #Distribution on age criteria
> #summary(data.combined$Age)
> #summary(data.combined[1:891,"Age"])
>  ggplot(data.combined[1:891,],aes(x=Age,fill=Survived)) +
+   geom_histogram(binwidth=10) +
+   facet_wrap(~ Sex + Pclass) +
+   ggtitle("Pclass") +
+   xlab("Age") + 
+   ylab("Total Count") +
+   labs(fill = "Survived")
Warning message:
Removed 177 rows containing non-finite values (stat_bin). 
> 
> # knowledge about master 
> mast <- data.combined[which(data.combined$title == "Master."),]
> summary(mast$Age)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
  0.330   2.000   4.000   5.483   9.000  14.500       8 
> 
> # knowledge about Miss as it is complicated
> miss <- data.combined[which(data.combined$title == "Miss."),]
> summary(miss$Age)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
   0.17   15.00   22.00   21.77   30.00   63.00      50 
> 
> #visualisation on miss
> ggplot(miss[miss$Survived != "none",],aes(x=Age,fill=Survived)) +
+   geom_histogram(binwidth=5) +
+   facet_wrap(~ Pclass) +
+   ggtitle("Age for 'mis' by Pclass") +
+   xlab("Age") + 
+   ylab("Total Count") +
+   labs(fill = "Survived")
Warning message:
Removed 50 rows containing non-finite values (stat_bin). 
> 
> #More condition on misses
> miss.alone <- miss[which(miss$SibSp==0 &miss$Parch == 0),]
> #summary(miss.alone$Age)
> 
> #female equivalent to master boys
> #length(which(miss.alone$Age <= 14.5))
> 
> #looking at sibsp
> #summary(data.combined$SibSp)
>  
> #can we treat it as a factor
> #length(unique(data.combined$SibSp))
> 
> # as it is only seven yes we can convert it into factor
> data.combined$SibSp <- as.factor(data.combined$SibSp)
> 
> #visualising the survival rates by SibSp,pclass and title
> ggplot(data.combined[1:891,],aes(x=SibSp,fill=Survived)) +
+   geom_histogram(stat = "count",binwidth=1) +
+   facet_wrap(~ title + Pclass) +
+   ggtitle("Title & Pclass") +
+   xlab("Sibsp") + 
+   ylab("Total Count") +
+   labs(fill = "Survived")
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> 
> #Similarly we do for Parch
> 
> data.combined$SibSp <- as.factor(data.combined$Parch)
> 
> #visualising the survival rates by SibSp,pclass and title
> ggplot(data.combined[1:891,],aes(x=Parch,fill=Survived)) +
+   geom_histogram(stat = "count",binwidth=1) +
+   facet_wrap(~ title + Pclass) +
+   ggtitle("Title & Pclass") +
+   xlab("Parch") + 
+   ylab("Total Count") +
+   labs(fill = "Survived")
Warning messages:
1: Ignoring unknown parameters: binwidth, bins, pad 
2: position_stack requires non-overlapping x intervals 
> 
> 
> # Let's make a family factor and add it to the frame (family size)
> 
> Sib <- c(train$SibSp,test$SibSp)
Error: object 'train' not found
Execution halted
