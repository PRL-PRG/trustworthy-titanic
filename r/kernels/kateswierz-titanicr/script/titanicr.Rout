
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> # This R script will run on our backend. You can write arbitrary code here!
> 
> 
> # The train and test data is stored in the ../input directory
> train <- read.csv("../input/train.csv")
> test  <- read.csv("../input/test.csv")
> 
> # We can inspect the train data. The results of this are printed in the log tab below
> summary(train)
  PassengerId       Survived          Pclass     
 Min.   :  1.0   Min.   :0.0000   Min.   :1.000  
 1st Qu.:223.5   1st Qu.:0.0000   1st Qu.:2.000  
 Median :446.0   Median :0.0000   Median :3.000  
 Mean   :446.0   Mean   :0.3838   Mean   :2.309  
 3rd Qu.:668.5   3rd Qu.:1.0000   3rd Qu.:3.000  
 Max.   :891.0   Max.   :1.0000   Max.   :3.000  
                                                 
                                    Name         Sex           Age       
 Abbing, Mr. Anthony                  :  1   female:314   Min.   : 0.42  
 Abbott, Mr. Rossmore Edward          :  1   male  :577   1st Qu.:20.12  
 Abbott, Mrs. Stanton (Rosa Hunt)     :  1                Median :28.00  
 Abelson, Mr. Samuel                  :  1                Mean   :29.70  
 Abelson, Mrs. Samuel (Hannah Wizosky):  1                3rd Qu.:38.00  
 Adahl, Mr. Mauritz Nils Martin       :  1                Max.   :80.00  
 (Other)                              :885                NA's   :177    
     SibSp           Parch             Ticket         Fare       
 Min.   :0.000   Min.   :0.0000   1601    :  7   Min.   :  0.00  
 1st Qu.:0.000   1st Qu.:0.0000   347082  :  7   1st Qu.:  7.91  
 Median :0.000   Median :0.0000   CA. 2343:  7   Median : 14.45  
 Mean   :0.523   Mean   :0.3816   3101295 :  6   Mean   : 32.20  
 3rd Qu.:1.000   3rd Qu.:0.0000   347088  :  6   3rd Qu.: 31.00  
 Max.   :8.000   Max.   :6.0000   CA 2144 :  6   Max.   :512.33  
                                  (Other) :852                   
         Cabin     Embarked
            :687    :  2   
 B96 B98    :  4   C:168   
 C23 C25 C27:  4   Q: 77   
 G6         :  4   S:644   
 C22 C26    :  3           
 D          :  3           
 (Other)    :186           
> attach(train)
> 
> train$Name <- NULL
> train$Ticket <- NULL
> train$Cabin <- NULL
> train$PassengerId <- as.factor(train$PassengerId)
> train$Survived <- as.factor(train$Survived)
> train$Pclass <- as.factor(train$Pclass)
> summary(train$Age)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
   0.42   20.12   28.00   29.70   38.00   80.00     177 
> 
> miss_age <- train[is.na(Age),]
> 
> #predict age
> age <- lm(Age~train$Pclass+train$Survived+train$SibSp)
> summary(age)

Call:
lm(formula = Age ~ train$Pclass + train$Survived + train$SibSp)

Residuals:
    Min      1Q  Median      3Q     Max 
-38.385  -8.432  -0.444   7.035  44.568 

Coefficients:
                Estimate Std. Error t value Pr(>|t|)    
(Intercept)      44.8453     1.1518  38.936  < 2e-16 ***
train$Pclass2    -9.6969     1.3268  -7.309 7.29e-13 ***
train$Pclass3   -15.4130     1.2056 -12.784  < 2e-16 ***
train$Survived1  -7.0092     1.0169  -6.893 1.21e-11 ***
train$SibSp      -4.4604     0.5029  -8.870  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 12.45 on 709 degrees of freedom
  (177 observations deleted due to missingness)
Multiple R-squared:  0.2701,	Adjusted R-squared:  0.266 
F-statistic: 65.59 on 4 and 709 DF,  p-value: < 2.2e-16

> pred <- predict(age,train)
> summary(pred)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 -6.251  24.972  29.432  29.326  35.148  44.845 
> 
> preds <- cbind(train[,"Age"],pred)
> p <- cbind(miss_age,preds[is.na(Age),])
> p$Age <- NULL
> p$V1 <- NULL
> 
> library(plyr)
> p <- rename(p,c("pred"="Age"))
> a <- subset(train,!is.na(Age))
> train <- rbind(p,a)
> 
> library(caret)
Loading required package: lattice
Loading required package: ggplot2
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> featureCols <- c("Survived","Sex","Pclass","Age")
> datafiltered <- train[,featureCols]
> inTrainRows <- createDataPartition(datafiltered$Survived, p=0.7,list=FALSE)
> trainDataFiltered <- datafiltered[inTrainRows,]
> testDataFiltered <- datafiltered[-inTrainRows,]
> nrow(trainDataFiltered)/(nrow(testDataFiltered)+nrow(trainDataFiltered))
[1] 0.701459
> logisticRegModel <- train(Survived~.,data=datafiltered,method="glm",family="binomial")
> logisticRegModel
Generalized Linear Model 

891 samples
  3 predictor
  2 classes: '0', '1' 

No pre-processing
Resampling: Bootstrapped (25 reps) 
Summary of sample sizes: 891, 891, 891, 891, 891, 891, ... 
Resampling results:

  Accuracy   Kappa    
  0.8022407  0.5743469

> summary(logisticRegModel)

Call:
NULL

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.7460  -0.6721  -0.4050   0.6413   2.4974  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  3.82580    0.37776  10.128  < 2e-16 ***
Sexmale     -2.56797    0.18762 -13.687  < 2e-16 ***
Pclass2     -1.24465    0.26325  -4.728 2.27e-06 ***
Pclass3     -2.55671    0.25776  -9.919  < 2e-16 ***
Age         -0.03943    0.00739  -5.336 9.51e-08 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 1186.7  on 890  degrees of freedom
Residual deviance:  796.4  on 886  degrees of freedom
AIC: 806.4

Number of Fisher Scoring iterations: 5

> 
> logRegPrediction <- predict(logisticRegModel,testDataFiltered)
> logRegConfMat <- confusionMatrix(logRegPrediction,testDataFiltered[,"Survived"])
> logRegConfMat
Confusion Matrix and Statistics

          Reference
Prediction   0   1
         0 138  25
         1  26  77
                                          
               Accuracy : 0.8083          
                 95% CI : (0.7557, 0.8538)
    No Information Rate : 0.6165          
    P-Value [Acc > NIR] : 1.164e-11       
                                          
                  Kappa : 0.5953          
                                          
 Mcnemar's Test P-Value : 1               
                                          
            Sensitivity : 0.8415          
            Specificity : 0.7549          
         Pos Pred Value : 0.8466          
         Neg Pred Value : 0.7476          
             Prevalence : 0.6165          
         Detection Rate : 0.5188          
   Detection Prevalence : 0.6128          
      Balanced Accuracy : 0.7982          
                                          
       'Positive' Class : 0               
                                          
> 
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

> rfmodel <- randomForest(trainDataFiltered[-1],trainDataFiltered$Survived,proximity=TRUE,importance=TRUE)
> rfValidation <- predict(rfmodel,testDataFiltered)
> rfConfMatrix <- confusionMatrix(rfValidation,testDataFiltered[,"Survived"])
> rfConfMatrix
Confusion Matrix and Statistics

          Reference
Prediction   0   1
         0 146  28
         1  18  74
                                          
               Accuracy : 0.8271          
                 95% CI : (0.7762, 0.8705)
    No Information Rate : 0.6165          
    P-Value [Acc > NIR] : 6.692e-14       
                                          
                  Kappa : 0.6274          
                                          
 Mcnemar's Test P-Value : 0.1845          
                                          
            Sensitivity : 0.8902          
            Specificity : 0.7255          
         Pos Pred Value : 0.8391          
         Neg Pred Value : 0.8043          
             Prevalence : 0.6165          
         Detection Rate : 0.5489          
   Detection Prevalence : 0.6541          
      Balanced Accuracy : 0.8079          
                                          
       'Positive' Class : 0               
                                          
> 
> proc.time()
   user  system elapsed 
  2.538   0.186   2.741 
