
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> # This R environment comes with all of CRAN preinstalled, as well as many other helpful packages
> # The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats
> # For example, here's several helpful packages to load in 
> 
> library(tidyverse)
â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.0 â”€â”€
[32mâœ“[39m [34mggplot2[39m 3.3.2     [32mâœ“[39m [34mpurrr  [39m 0.3.4
[32mâœ“[39m [34mtibble [39m 3.0.1     [32mâœ“[39m [34mdplyr  [39m 1.0.2
[32mâœ“[39m [34mtidyr  [39m 1.1.0     [32mâœ“[39m [34mstringr[39m 1.4.0
[32mâœ“[39m [34mreadr  [39m 1.3.1     [32mâœ“[39m [34mforcats[39m 0.5.0
â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
[31mx[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
[31mx[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()
Warning messages:
1: package â€˜ggplot2â€™ was built under R version 3.6.2 
2: package â€˜tibbleâ€™ was built under R version 3.6.2 
3: package â€˜tidyrâ€™ was built under R version 3.6.2 
4: package â€˜purrrâ€™ was built under R version 3.6.2 
5: package â€˜dplyrâ€™ was built under R version 3.6.2 
> 
> # Input data files are available in the "../input/" directory.
> # For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory
> 
> system("ls ../input")
gender_submission.csv
test.csv
train.csv
> 
> # Any results you write to the current directory are saved as output.
> 
> ## File
> file <- "../input/train.csv"
>  
> ## Create connection
> con <- file(description=file, open="r")
> 
> ## read the first five lines
> readLines(con, n = 5)
[1] "PassengerId,Survived,Pclass,Name,Sex,Age,SibSp,Parch,Ticket,Fare,Cabin,Embarked"                   
[2] "1,0,3,\"Braund, Mr. Owen Harris\",male,22,1,0,A/5 21171,7.25,,S"                                   
[3] "2,1,1,\"Cumings, Mrs. John Bradley (Florence Briggs Thayer)\",female,38,1,0,PC 17599,71.2833,C85,C"
[4] "3,1,3,\"Heikkinen, Miss. Laina\",female,26,0,0,STON/O2. 3101282,7.925,,S"                          
[5] "4,1,1,\"Futrelle, Mrs. Jacques Heath (Lily May Peel)\",female,35,1,0,113803,53.1,C123,S"           
> close(con)
> 
> train <- read_csv("../input/train.csv")
Parsed with column specification:
cols(
  PassengerId = [32mcol_double()[39m,
  Survived = [32mcol_double()[39m,
  Pclass = [32mcol_double()[39m,
  Name = [31mcol_character()[39m,
  Sex = [31mcol_character()[39m,
  Age = [32mcol_double()[39m,
  SibSp = [32mcol_double()[39m,
  Parch = [32mcol_double()[39m,
  Ticket = [31mcol_character()[39m,
  Fare = [32mcol_double()[39m,
  Cabin = [31mcol_character()[39m,
  Embarked = [31mcol_character()[39m
)
> 
> summary(train)
  PassengerId       Survived          Pclass          Name          
 Min.   :  1.0   Min.   :0.0000   Min.   :1.000   Length:891        
 1st Qu.:223.5   1st Qu.:0.0000   1st Qu.:2.000   Class :character  
 Median :446.0   Median :0.0000   Median :3.000   Mode  :character  
 Mean   :446.0   Mean   :0.3838   Mean   :2.309                     
 3rd Qu.:668.5   3rd Qu.:1.0000   3rd Qu.:3.000                     
 Max.   :891.0   Max.   :1.0000   Max.   :3.000                     
                                                                    
     Sex                 Age            SibSp           Parch       
 Length:891         Min.   : 0.42   Min.   :0.000   Min.   :0.0000  
 Class :character   1st Qu.:20.12   1st Qu.:0.000   1st Qu.:0.0000  
 Mode  :character   Median :28.00   Median :0.000   Median :0.0000  
                    Mean   :29.70   Mean   :0.523   Mean   :0.3816  
                    3rd Qu.:38.00   3rd Qu.:1.000   3rd Qu.:0.0000  
                    Max.   :80.00   Max.   :8.000   Max.   :6.0000  
                    NA's   :177                                     
    Ticket               Fare           Cabin             Embarked        
 Length:891         Min.   :  0.00   Length:891         Length:891        
 Class :character   1st Qu.:  7.91   Class :character   Class :character  
 Mode  :character   Median : 14.45   Mode  :character   Mode  :character  
                    Mean   : 32.20                                        
                    3rd Qu.: 31.00                                        
                    Max.   :512.33                                        
                                                                          
> 
> count(train)
[90m# A tibble: 1 x 1[39m
      n
  [3m[90m<int>[39m[23m
[90m1[39m   891
> summary(duplicated(train$PassengerId))
   Mode   FALSE 
logical     891 
> 
> train %>% group_by(Survived) %>% summarise(count = n())
`summarise()` ungrouping output (override with `.groups` argument)
[90m# A tibble: 2 x 2[39m
  Survived count
     [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m
[90m1[39m        0   549
[90m2[39m        1   342
> 
> train %>% group_by(Pclass) %>% summarise(count = n())
`summarise()` ungrouping output (override with `.groups` argument)
[90m# A tibble: 3 x 2[39m
  Pclass count
   [3m[90m<dbl>[39m[23m [3m[90m<int>[39m[23m
[90m1[39m      1   216
[90m2[39m      2   184
[90m3[39m      3   491
> 
> library(stringr)
> 
> ## max string length
> train %>% str_length() %>% max()
[1] 27748
Warning message:
In stri_length(string) : argument is not an atomic vector; coercing
> 
> ## min string length
> train %>% str_length() %>% min()
[1] 2679
Warning message:
In stri_length(string) : argument is not an atomic vector; coercing
> 
> train %>% group_by(Sex) %>% summarise(count = n())
`summarise()` ungrouping output (override with `.groups` argument)
[90m# A tibble: 2 x 2[39m
  Sex    count
  [3m[90m<chr>[39m[23m  [3m[90m<int>[39m[23m
[90m1[39m female   314
[90m2[39m male     577
> 
> ## Get the distinct levels from the Sex column
> sex_summary <- train %>% group_by(Sex) %>% summarise(count = n())
`summarise()` ungrouping output (override with `.groups` argument)
> sex_summary$Sex
[1] "female" "male"  
> 
> ## Convert the Sex column to a factor
> train$Sex <- factor(train$Sex, levels = sex_summary$Sex)
> class(train$Sex)
[1] "factor"
> 
> filter(train, is.na(Age))
[90m# A tibble: 177 x 12[39m
   PassengerId Survived Pclass Name  Sex     Age SibSp Parch Ticket   Fare Cabin
         [3m[90m<dbl>[39m[23m    [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<fct>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m
[90m 1[39m           6        0      3 [90m"[39mMorâ€¦ male     [31mNA[39m     0     0 330877   8.46 [31mNA[39m   
[90m 2[39m          18        1      2 [90m"[39mWilâ€¦ male     [31mNA[39m     0     0 244373  13    [31mNA[39m   
[90m 3[39m          20        1      3 [90m"[39mMasâ€¦ femaâ€¦    [31mNA[39m     0     0 2649     7.22 [31mNA[39m   
[90m 4[39m          27        0      3 [90m"[39mEmiâ€¦ male     [31mNA[39m     0     0 2631     7.22 [31mNA[39m   
[90m 5[39m          29        1      3 [90m"[39mO'Dâ€¦ femaâ€¦    [31mNA[39m     0     0 330959   7.88 [31mNA[39m   
[90m 6[39m          30        0      3 [90m"[39mTodâ€¦ male     [31mNA[39m     0     0 349216   7.90 [31mNA[39m   
[90m 7[39m          32        1      1 [90m"[39mSpeâ€¦ femaâ€¦    [31mNA[39m     1     0 PC 17â€¦ 147.   B78  
[90m 8[39m          33        1      3 [90m"[39mGlyâ€¦ femaâ€¦    [31mNA[39m     0     0 335677   7.75 [31mNA[39m   
[90m 9[39m          37        1      3 [90m"[39mMamâ€¦ male     [31mNA[39m     0     0 2677     7.23 [31mNA[39m   
[90m10[39m          43        0      3 [90m"[39mKraâ€¦ male     [31mNA[39m     0     0 349253   7.90 [31mNA[39m   
[90m# â€¦ with 167 more rows, and 1 more variable: Embarked [3m[90m<chr>[90m[23m[39m
> 
> proc.time()
   user  system elapsed 
  1.294   0.120   1.462 
