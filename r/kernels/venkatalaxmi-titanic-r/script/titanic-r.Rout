
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> # This R script will run on our backend. You can write arbitrary code here!
> 
> # Many standard libraries are already installed, such as randomForest
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.
> 
> # The train and test data is stored in the ../input directory
> train <- read.csv("../input/train.csv")
> test  <- read.csv("../input/test.csv")
> 
> train$Survived <- factor(train$Survived , levels=c(0,1))
> levels(train$Survived) <- c("Survived" , "Died")
> train$Pclass <- as.factor(train$Pclass)
> levels(train$Pclass) <- c("list Class", "2nd Class" , "3rd class")
> 
> test$Pclass <- as.factor(test$Pclass)
> levels(test$Pclass) <- c("list Class", "2nd Class" , "3rd class")
> 
> 
> train<-subset(train , select = -c(Cabin))
> train$Age[which(is.na(train$Age))] <- 29
> train$Embarked[which(is.na(train$Embarked))] <- "S"
> 
> test<-subset(test , select = -c(Cabin))
> test$Age[which(is.na(test$Age))] <- 29
> test$Embarked[which(is.na(test$Embarked))] <- "S"
> test$Fare[which(is.na(test$Fare))] <- 35
> 
> 
> rf_tree<-randomForest(Survived~Age+Pclass+Sex+Fare+Parch, data = train , mtry = 3 , importance = TRUE )
> print(rf_tree)

Call:
 randomForest(formula = Survived ~ Age + Pclass + Sex + Fare +      Parch, data = train, mtry = 3, importance = TRUE) 
               Type of random forest: classification
                     Number of trees: 500
No. of variables tried at each split: 3

        OOB estimate of  error rate: 16.39%
Confusion matrix:
         Survived Died class.error
Survived      492   57   0.1038251
Died           89  253   0.2602339
> pred <- predict(rf_tree, newdata=test)
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
  0.571   0.045   0.611 
