
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Reading the train and test data.
> 
> train <- read.csv('../input/train.csv')
> test <- read.csv('../input/test.csv')
> 
> # Adding the 'Survived' column to the test data 
> # to make it compatable with the training data
> # for rbind-ing.
> 
> test$Survived <- rep(NA, nrow(test))
> 
> # Combining the data
> 
> data <- rbind(train, test)
> 
> # Inspecting the data
> 
> summary(data)
  PassengerId      Survived          Pclass     
 Min.   :   1   Min.   :0.0000   Min.   :1.000  
 1st Qu.: 328   1st Qu.:0.0000   1st Qu.:2.000  
 Median : 655   Median :0.0000   Median :3.000  
 Mean   : 655   Mean   :0.3838   Mean   :2.295  
 3rd Qu.: 982   3rd Qu.:1.0000   3rd Qu.:3.000  
 Max.   :1309   Max.   :1.0000   Max.   :3.000  
                NA's   :418                     
                               Name          Sex           Age       
 Connolly, Miss. Kate            :   2   female:466   Min.   : 0.17  
 Kelly, Mr. James                :   2   male  :843   1st Qu.:21.00  
 Abbing, Mr. Anthony             :   1                Median :28.00  
 Abbott, Mr. Rossmore Edward     :   1                Mean   :29.88  
 Abbott, Mrs. Stanton (Rosa Hunt):   1                3rd Qu.:39.00  
 Abelson, Mr. Samuel             :   1                Max.   :80.00  
 (Other)                         :1301                NA's   :263    
     SibSp            Parch            Ticket          Fare        
 Min.   :0.0000   Min.   :0.000   CA. 2343:  11   Min.   :  0.000  
 1st Qu.:0.0000   1st Qu.:0.000   1601    :   8   1st Qu.:  7.896  
 Median :0.0000   Median :0.000   CA 2144 :   8   Median : 14.454  
 Mean   :0.4989   Mean   :0.385   3101295 :   7   Mean   : 33.295  
 3rd Qu.:1.0000   3rd Qu.:0.000   347077  :   7   3rd Qu.: 31.275  
 Max.   :8.0000   Max.   :9.000   347082  :   7   Max.   :512.329  
                                  (Other) :1261   NA's   :1        
             Cabin      Embarked
                :1014    :  2   
 C23 C25 C27    :   6   C:270   
 B57 B59 B63 B66:   5   Q:123   
 G6             :   5   S:914   
 B96 B98        :   4           
 C22 C26        :   4           
 (Other)        : 271           
> 
> # We see that there are missing values: 418 in the 'Survided' column
> # (expected -- we put them there), 263 in the 'Age' column, and 1 in 
> # the Fare column. Let's replace them with median values.
> 
> library(Hmisc)
Loading required package: lattice
Loading required package: survival
Loading required package: Formula
Loading required package: ggplot2

Attaching package: ‘Hmisc’

The following objects are masked from ‘package:base’:

    format.pval, units

Warning messages:
1: package ‘survival’ was built under R version 3.6.2 
2: package ‘ggplot2’ was built under R version 3.6.2 
> data$Age <- impute(data$Age, fun = median)
> data$Fare <- impute(data$Fare, fun = median)
> 
> # How many unique entries do we have in each columns?
> 
> sapply(apply(data, 2, unique), length)
PassengerId    Survived      Pclass        Name         Sex         Age 
       1309           3           3        1307           2          98 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          7           8         929         281         187           4 
> 
> # We will not be using the 'PassengerId', 'Name', 'Ticket', 
> # and 'Cabin' columns in our modeling. Creating the formula
> # for future modeling.
> 
> fmla <- as.formula('Survived ~ Pclass + Sex + Age + SibSp + 
+         Parch + Fare + Embarked')
> 
> # Separating the training and test data from 'data'
> 
> n <- nrow(train)
> train <- data[1:n, ]
> 
> # Spliting the training data into a training and
> set.seed(123)
> split <- sample(1:n, round(0.8*n))
> train_train <- train[split, ]
> train_test <- train[-split, ]
> 
> model_short <- glm(fmla, train_train, 
+                    family = 'binomial')
> summary(model_short)

Call:
glm(formula = fmla, family = "binomial", data = train_train)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-2.5672  -0.5985  -0.4169   0.6257   2.4478  

Coefficients:
             Estimate Std. Error z value Pr(>|z|)    
(Intercept)  5.233479   0.623379   8.395  < 2e-16 ***
Pclass      -1.048274   0.158097  -6.631 3.34e-11 ***
Sexmale     -2.781114   0.224911 -12.365  < 2e-16 ***
Age         -0.037622   0.008869  -4.242 2.21e-05 ***
SibSp       -0.354701   0.124043  -2.859  0.00424 ** 
Parch       -0.082024   0.127063  -0.646  0.51858    
Fare         0.001572   0.002469   0.637  0.52440    
EmbarkedQ    0.063783   0.419969   0.152  0.87928    
EmbarkedS   -0.571845   0.260749  -2.193  0.02830 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 948.95  on 712  degrees of freedom
Residual deviance: 625.69  on 704  degrees of freedom
AIC: 643.69

Number of Fisher Scoring iterations: 5

> 
> prob_short <- predict(model_short, train_test, type = 'response')
Error in model.frame.default(Terms, newdata, na.action = na.action, xlev = object$xlevels) : 
  factor Embarked has new levels 
Calls: predict ... predict.glm -> predict.lm -> model.frame -> model.frame.default
Execution halted
