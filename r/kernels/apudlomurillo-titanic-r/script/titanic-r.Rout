
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> # This R script will run on our backend. You can write arbitrary code here!
> 
> # Many standard libraries are already installed, such as randomForest
> # library(randomForest)
> 
> # The train and test data is stored in the ../input directory
> train <- read.csv("../input/train.csv")
> #test  <- read.csv("../input/test.csv")
> 
> numeric_vars <- train[,c(2,3,6,7,8,10)]
> 
> Titanic <- na.omit(numeric_vars)
> head(Titanic$Age, 10)
 [1] 22 38 26 35 35 54  2 27 14  4
> 
> head(Titanic)
  Survived Pclass Age SibSp Parch    Fare
1        0      3  22     1     0  7.2500
2        1      1  38     1     0 71.2833
3        1      3  26     0     0  7.9250
4        1      1  35     1     0 53.1000
5        0      3  35     0     0  8.0500
7        0      1  54     0     0 51.8625
> cor(Titanic)
            Survived      Pclass         Age       SibSp       Parch
Survived  1.00000000 -0.35965268 -0.07722109 -0.01735836  0.09331701
Pclass   -0.35965268  1.00000000 -0.36922602  0.06724737  0.02568307
Age      -0.07722109 -0.36922602  1.00000000 -0.30824676 -0.18911926
SibSp    -0.01735836  0.06724737 -0.30824676  1.00000000  0.38381986
Parch     0.09331701  0.02568307 -0.18911926  0.38381986  1.00000000
Fare      0.26818862 -0.55418247  0.09606669  0.13832879  0.20511888
                Fare
Survived  0.26818862
Pclass   -0.55418247
Age       0.09606669
SibSp     0.13832879
Parch     0.20511888
Fare      1.00000000
> plot(Titanic$Age, Titanic$Fare, main = "Correlation between Age and Fare on the Titanic Voyage")
> #plot(complete$SibSp, complete$Fare)
> 
> # We can inspect the train data. The results of this are printed in the log tab below
> #summary(train)
> 
> # Here we will plot the passenger survival by class
> #train$Survived <- factor(train$Survived, levels=c(1,0))
> #levels(train$Survived) <- c("Survived", "Died")
> #train$Pclass <- as.factor(train$Pclass)
> #levels(train$Pclass) <- c("1st Class", "2nd Class", "3rd Class")
> 
> #png("1_survival_by_class.png", width=800, height=600)
> #mosaicplot(train$Pclass ~ train$Survived, main="Passenger Survival by Class",
> #           color=c("#8dd3c7", "#fb8072"), shade=FALSE,  xlab="", ylab="",
> #           off=c(0), cex.axis=1.4)
> #dev.off()
> 
> #head(train)
> 
> #head(train$Age)
> #Average.age <- mean(train$Age, na.rm=TRUE)
> #(Average.age)
> #sd(train$Age, na.rm=TRUE)
> #qqnorm(train$Age)
> 
> #library(MASS)
> #fitdistr(train$Age, "normal")
> 
> #print(train$Age) # Missing values have a value of NA 
> # Here I am using indexing, so where the variable AGE is missing, the average age will be assigned to that observation
> #train$Age[is.na(train$Age)] <- Average.age
> #print(train$Age)
> 
> #mean(train$Age)
> #sd(train$Age)
> 
> # From this plot I can see this data is not normally distributed 
> #qqnorm(train$Age)
> 
> # Pvalue < 0.05 so reject the null. Variable is not normally distributed 
> #shapiro.test(train$Age)
> 
> 
> #shapiro.test(log(train$Age)) # This does not correct the problem - still not normally distributed 
> #hist(train$Age)
> 
> 
> #library(Hmisc)
> #rcorr(train)
> 
> proc.time()
   user  system elapsed 
  0.192   0.048   0.282 
