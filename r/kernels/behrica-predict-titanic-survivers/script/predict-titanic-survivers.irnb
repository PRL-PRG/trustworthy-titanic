{"cells":[{"metadata":{"_uuid":"d29f8ef7009c0becb4d74750762f4ef891489b9a","_execution_state":"idle","trusted":true},"cell_type":"code","source":"# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages\n# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats\n# For example, here's several helpful packages to load in \n\nlibrary(ggplot2) # Data visualization\nlibrary(readr) # CSV file I/O, e.g. the read_csv function\nlibrary(stringr)\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nprint(system2(\"ls\",c(\"../input\"),stdout=T))\n\n# Any results you write to the current directory are saved as output.","execution_count":153,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"d553686ec6df756021fef52cd83f5b60a0c664d5"},"cell_type":"code","source":"library(tidyverse)\nlibrary(mlr)\nlibrary(janitor)","execution_count":154,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"296cb49e001e1178030ab432750988544ff21b30"},"cell_type":"code","source":"train <- read_csv(\"../input/train.csv\")\ntest <- read_csv(\"../input/test.csv\")\n\ndata <- train %>% bind_rows(test,.id=\"type\")","execution_count":155,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"5ba803a075c7ec5a0ce8bed135fa3254ba551bd6"},"cell_type":"code","source":"#test$Survived[test$Sex=='male'] <- 0\n#test$Survived[test$Sex=='female'] <- 1\n#submit <- data.frame(PassengerId = test$PassengerId, Survived = test$Survived)\n#write.csv(submit,\"genderModel.csv\",row.names=F)","execution_count":156,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"9b9fe35fcaabf5531bcafd7e16b208a03064d2dc"},"cell_type":"code","source":"glimpse(data)","execution_count":157,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"5a77d68de6119422ecacafaf35434bfa4d385ad7"},"cell_type":"code","source":"data <- data %>%\n  mutate_at(c(\"Survived\"),as.factor) %>%\n  mutate_at(c(\"Name\",\"Sex\",\"Ticket\",\"Cabin\",\"Embarked\",\"Pclass\",\"SibSp\",\"Parch\",\"type\"),as.factor)\n\n\n","execution_count":158,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"32cf1f40985e40641ad81e6a05ac88cd778cb96f"},"cell_type":"code","source":"summary(data)","execution_count":159,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a8efc4d0b6d69f80ad1963c6e73e3fb9ec1b570a"},"cell_type":"code","source":"data <- data %>% mutate(honorific=factor(str_match(Name,\"(\\\\w*)\\\\.\")[,1])) %>% \n   mutate(honorific=fct_lump(honorific,4)) %>%\n   mutate(Parch=fct_lump(Parch,3)) %>%\n   mutate(SibSp= fct_lump(SibSp,2)) %>%\n   mutate(Fare=ifelse(Fare==0,min(Fare),Fare)) %>%\n   mutate(Deck=as.factor(str_match(data$Cabin,\"(.{1}).*\")[,2]),\n          Deck=fct_lump(Deck,6),\n          Deck=fct_explicit_na(Deck,na_level = \"noCabin\")\n         ) %>%\n   mutate(familiy=factor(str_match(Name,\"(\\\\w*),\")[,1])) %>%\n   mutate(Cabin=as.numeric(str_match(data$Cabin,\"(.{1})(.*)\")[,3]))\n\n\n\nsummary(data)\n","execution_count":160,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"6385a9a063b97e67270d104320d31ec90ee66a4b"},"cell_type":"code","source":"glimpse(data)","execution_count":161,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"4248ed851a75486b4d32c2d99344a6809d9ec7ad"},"cell_type":"code","source":"familySize = data %>% group_by(familiy) %>% count %>%\n   rename(familiy_size=n)\nsummary(familySize)","execution_count":162,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"f664779797303f4138cc6eca17447b24402189c0"},"cell_type":"code","source":"ageByHonorific <- data %>% group_by(honorific) %>% summarise(age.mean=mean(Age,na.rm = T))","execution_count":163,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"7cd693c500162e156c3ea8cf0e378c68d6e01b5e"},"cell_type":"code","source":"data <- data %>% \n    left_join(ageByHonorific) %>% \n    mutate(Age=ifelse(is.na(Age),age.mean,Age)) %>% \n    select(-age.mean) %>%\n    left_join(familySize) %>%\n    select(-familiy)\nsummary(data)","execution_count":164,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"73e3649d04828387db55bde73443f5ab79b556ff"},"cell_type":"code","source":"data.forModel <- data  %>% select(-Name,-Ticket,-Sex) \ndata.forModel.imputed <- impute(data.forModel,cols=\n                                     list(Age=imputeLearner(\"regr.randomForestSRC\"),\n                                         Fare=imputeMean(),\n                                         Cabin=imputeMean(),               \n                                         Embarked=imputeMode()))$data\nsummary(data.forModel.imputed)","execution_count":165,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"b5bb9f5bef9ddbfa3f686b5c72679531d4a26107"},"cell_type":"code","source":"survived=data.forModel.imputed$Survived\ndata.forModel.imputed$Survived=NULL\ntype=data.forModel.imputed$type\ndata.forModel.imputed$type=NULL\npassengerId=data.forModel.imputed$PassengerId\ndata.forModel.imputed$PassengerId=NULL\nglimpse(data.forModel.imputed)","execution_count":166,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"4dd621a0d0ee79f437f2787584da8e38d29484d4"},"cell_type":"code","source":"train.tmp=data.forModel.imputed[type==1,]\ntrain.tmp$Survived=survived[type==1]\n","execution_count":167,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"554a647718c1f1cc674617c5553a46aa737d04c7"},"cell_type":"code","source":"boxplot(data$Fare ~ data$Pclass)","execution_count":168,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"88bb42bdc17f56e57d255087a1307069b45ed2f0"},"cell_type":"code","source":"library(corrplot)\nsjPlot::sjp.xtab(train.tmp$Deck,train.tmp$Survived,show.total = FALSE,bar.pos = \"stack\",margin = \"row\",)","execution_count":169,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"3944e4ff69e0fa7239616ebd7d0f7e6300cb6c69"},"cell_type":"code","source":"data.forModel.imputed <- normalizeFeatures(data.forModel.imputed)\nsummary(data.forModel.imputed)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"8b9410437f05420bd5d75f3c3a021af49ba2236b"},"cell_type":"code","source":"data.forModel.imputed.dummy <- createDummyFeatures(data.forModel.imputed)\nglimpse(data.forModel.imputed.dummy)","execution_count":170,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"528ec08e2645a726ad50ec0a117c1b9b9fa117f5"},"cell_type":"code","source":"","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c6c9674d63c4bfeaf2f056c00db629625a5b65b6"},"cell_type":"code","source":"train=data.forModel.imputed.dummy[type==\"1\",]\ntrain$Survived=survived[type==\"1\"]\nglimpse(train)\ntest=data.forModel.imputed.dummy[type==\"2\",]\nglimpse(test)\n","execution_count":171,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a661caf81826521996a53b1c42e15d0d745804cd"},"cell_type":"code","source":"task <- makeClassifTask(data = train ,target = \"Survived\" )\nprint(task)","execution_count":172,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"acf1445d01c6faca4b6347223a4a31d865132a70"},"cell_type":"code","source":"fv = generateFilterValuesData(task, method = \"information.gain\")\nplotFilterValues(fv)","execution_count":173,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"ecbe29867f4dab5d19cb3dd1ca5fd1b27e0da343"},"cell_type":"code","source":"","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"faa505db78565e54496b36aeaa6ab2f9a2e75022"},"cell_type":"code","source":"set.seed(1234)","execution_count":174,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"0c8318abac52531334726460eb94425f936d1d16"},"cell_type":"code","source":"rdesc = cv10","execution_count":175,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"b32dbb9539a1e1209683d2d9b4c4ac93ca356b51"},"cell_type":"code","source":"lrns = makeLearners(c(\"classif.randomForestSRC\",\"classif.ada\",\n                    \"classif.featureless\",\"classif.glmnet\",\"classif.LiblineaRL1L2SVC\",\"classif.LiblineaRL1LogReg\",\n                      \"classif.randomForest\",\"classif.boosting\",\"classif.svm\",\"classif.xgboost\",\n                      \"classif.extraTrees\",\"classif.knn\",\"classif.mlp\"))\nbmr1 = benchmark(lrns, task, rdesc,measures = list(acc))\n","execution_count":176,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"16899a484be70ff1f4a60af0fb0e2b4699801a38"},"cell_type":"code","source":"lrns=lapply(c(\"classif.randomForestSRC\",\"classif.xgboost\",\n              \"classif.ada\",\n              \"classif.LiblineaRL1LogReg\"),makeLearner)\nlrns=lapply(lrns,setPredictType,\"prob\")\nstacked.learner=makeStackedLearner(base.learners = lrns,method = \"average\",predict.type = \"prob\")\nbmr.stacked = benchmark(stacked.learner, task, rdesc,measures = list(acc))\n","execution_count":177,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"ce2207df17b052e45cdd44393a6245f501ef396b"},"cell_type":"code","source":"bmr.merged=mergeBenchmarkResults(list(bmr1,bmr.stacked))","execution_count":178,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"cd12b99c0d1f4b0e94edb6dc47d05b971e0cd770"},"cell_type":"code","source":"getBMRPerformances(bmr.merged,as.df = T) %>% arrange(desc(acc)) ","execution_count":179,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"10bd0273a505de16044045df307c39460575584f"},"cell_type":"code","source":"plotBMRBoxplots(bmr.merged)","execution_count":180,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"71dd8cf6650b8da8ecd99d4047537c5b52114ea8"},"cell_type":"code","source":"bench.perfs <- getBMRAggrPerformances(bmr.merged,as.df = T)   %>% arrange(desc(acc.test.mean))\nbench.perfs","execution_count":181,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"97c95fc0ab9d7eff9fb79d64ef4252f42774d872"},"cell_type":"code","source":"bestLearner <- bench.perfs$learner.id[[1]]\nbestLearner","execution_count":197,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a806239ffe7c61a863d53ab10a6001a9f57efa72"},"cell_type":"code","source":"#lrns.toTune = list(\n#  makeLearner(\"classif.randomForestSRC\")\n#)\n#lrn.mm = makeModelMultiplexer(lrns.toTune)\n#lrn.mm","execution_count":183,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"d1f83f568f6fa39dc16543a3f0a5be1d4a401314"},"cell_type":"code","source":"#ps = makeModelMultiplexerParamSet(lrn.mm,\n# makeDiscreteParam(\"ntree\",c(10,50,100,1000,2000)),\n# makeDiscreteParam(\"bootstrap\" ,c(\"by.root\", \"by.node\", \"none\")),\n# makeIntegerParam(\"mtry\", lower = 3, upper = 10),\n# makeIntegerParam(\"nodesize\", lower = 10, upper = 50)                                  \n#)\n#ps\n                   \n                   \n                                  \n","execution_count":184,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"c1922c96302afea432475a7594bface9f5d4f918"},"cell_type":"code","source":"#ctrl = makeTuneControlIrace(maxExperiments=200)\n#ctrl","execution_count":185,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"472beb0c34c08106265064f3951b0b8d72ad28cb"},"cell_type":"code","source":"#tune.res = tuneParams(lrn.mm, task = task, resampling = rdesc,\n#  par.set = ps, control = ctrl,measures=list(acc))","execution_count":186,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"5a98ae50bf6923c196a818951f2855aa2cf0dfc6"},"cell_type":"code","source":"#hyperParData <- generateHyperParsEffectData(tune.res,partial.dep = T)","execution_count":187,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"ae460a0cb655cc526921d3caa7a0e29eae36da5c"},"cell_type":"code","source":"#hyperParData$data %>% arrange(desc(acc.test.mean))","execution_count":188,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"5a0eb4af7e25b0c5be4f2c1eaf0de7b024be055c"},"cell_type":"code","source":"#plotHyperParsEffect(hyperParData, x = \"classif.randomForestSRC.ntree\", y = \"acc.test.mean\", plot.type = \"line\",\n#  partial.dep.learn = \"regr.randomForest\")\n#plotHyperParsEffect(hyperParData, x = \"classif.randomForestSRC.bootstrap\", y = \"acc.test.mean\", plot.type = \"line\",\n#  partial.dep.learn = \"regr.randomForest\")\n#plotHyperParsEffect(hyperParData, x = \"classif.randomForestSRC.mtry\", y = \"acc.test.mean\", plot.type = \"line\",\n#  partial.dep.learn = \"regr.randomForest\")\n#plotHyperParsEffect(hyperParData, x = \"classif.randomForestSRC.nodesize\", y = \"acc.test.mean\", plot.type = \"line\",\n#  partial.dep.learn = \"regr.randomForest\")\n\n","execution_count":189,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"e421a0041d558643ce7b2713fc3dd4de31cbd16a"},"cell_type":"code","source":"#tune.res$x$selected.learner\n","execution_count":190,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"79c0a73943d5b208d75c4a16cb0ae4934592bc2a"},"cell_type":"code","source":"\n#lrn.tuned.best = setHyperPars(makeLearner(tune.res$x$selected.learner), par.vals = tune.res$x)","execution_count":191,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"f2f262d76e338128ee28d24acb049be1f9dcdcf6"},"cell_type":"code","source":"bestLearner","execution_count":192,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"549869031ff87933384aa00be698ab0744b12afe"},"cell_type":"code","source":"bestModel=getBMRModels(bmr.merged,learner.ids = c(as.character(bestLearner)),drop = T)[[1]]","execution_count":193,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a188ae1b702a73c94899d4c42b5a0844d04f291d"},"cell_type":"code","source":"bestModel","execution_count":194,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"e39a4e7bebbcad426e6ef336d905b0624204b3f5"},"cell_type":"code","source":"\nrin2 = makeResampleDesc(method = \"CV\", iters = 5, predict = \"both\")\nlc2 = generateLearningCurveData(learners = makeLearner(\"classif.randomForestSRC\"), \ntask = task,\n  percs = seq(0.1, 1, by = 0.05),\n  measures = list(acc, setAggregation(acc, train.mean)), resampling = rin2,\n  show.info = TRUE)\n\n","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"f47d435dbf353744ffd1df4b1a80a7d146bfcf56"},"cell_type":"code","source":"plotLearningCurve(lc2, facet = \"learner\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"31d8aaa533850fad0ae7e440dd871e6b56b4331f"},"cell_type":"code","source":"\nprediction=predict(bestModel,newdata = test %>% data.frame())","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"2dbcfa7aadd9387b4a1470ea964b28c380983d3e"},"cell_type":"code","source":"#prediction=predict(result$models[[1]],newdata = test %>% data.frame())","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a8f11fc2fe7ea3f02a4bbcb0fdcef69ed123b057"},"cell_type":"code","source":"prediction","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"10ec6cd041f3f97fa8fb3a1df876414538fd00b2"},"cell_type":"code","source":"summary(prediction$data)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"3f37b1ce43be8443c72673bc3cf29a21b7073e6b","_kg_hide-output":true},"cell_type":"code","source":"submission <- prediction$data %>% \n  select(response) %>%\n  mutate(PassengerId=row.names(prediction$data)) %>%\n  rename(Survived=response) %>%\n  mutate(Survived=as.integer(as.character(Survived)),\n        PassengerId=as.integer(PassengerId)) %>%\n  select(PassengerId,Survived)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"6dea946f1e34a8b6760f6b24e47437b93f9955f4"},"cell_type":"code","source":"glimpse(submission)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"a34b1201a3db40b7bef6b28ed902f8acc031944f"},"cell_type":"code","source":"write_csv(submission,\"submission.csv\")","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"3116a69c9d2d33104a49ccf0c641f2a3c52346e1"},"cell_type":"code","source":"","execution_count":null,"outputs":[]},{"metadata":{"trusted":true,"_uuid":"fa7ac30c40e27ebe53f3e5f343b85799e1001710"},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat":4,"nbformat_minor":1}