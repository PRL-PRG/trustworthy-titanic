
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## ----setup, include=FALSE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> knitr::opts_chunk$set(echo = TRUE)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> suppressWarnings(suppressMessages(library(DMwR)))
> library(DMwR)
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.
> # The train and test data is stored in the ../input directory
> train <- read.csv("../input/train.csv")
> test  <- read.csv("../input/test.csv")
> 
> #train <- read.csv("train.csv")
> #test <- read.csv("test.csv")
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> #Training data set
> head(train[,1:3],2)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
> head(train[,4:7],2)
                                                 Name    Sex Age SibSp
1                             Braund, Mr. Owen Harris   male  22     1
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1
> head(train[,8:12],2)
  Parch    Ticket    Fare Cabin Embarked
1     0 A/5 21171  7.2500              S
2     0  PC 17599 71.2833   C85        C
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> #Test data set - No "Survived" column
> head(test[,1:3],2)
  PassengerId Pclass                             Name
1         892      3                 Kelly, Mr. James
2         893      3 Wilkes, Mrs. James (Ellen Needs)
> head(test[,4:7],2)
     Sex  Age SibSp Parch
1   male 34.5     0     0
2 female 47.0     1     0
> head(test[,8:11],2)
  Ticket   Fare Cabin Embarked
1 330911 7.8292              Q
2 363272 7.0000              S
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train[c(6,18,20),4:7]
                           Name    Sex Age SibSp
6              Moran, Mr. James   male  NA     0
18 Williams, Mr. Charles Eugene   male  NA     0
20      Masselmani, Mrs. Fatima female  NA     0
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> test$Survived <- NA
> merge_data <-  rbind(train,test)
> #Number of rows in each data-set
> nrow(train)       # 891
[1] 891
> nrow(test)        # 418
[1] 418
> nrow(merge_data)  #1309
[1] 1309
> #Applying KNN algorithm
> knnOutput <- knnImputation(merge_data[, !names(merge_data) %in% "Survived"])
> merge_data <- cbind.data.frame(knnOutput,Survived = merge_data$Survived) 
> merge_data$Age <- as.integer(merge_data$Age)
> merge_data[c(6,18,20),4:7]      #Filled NA values
      Sex Age SibSp Parch
6    male  25     0     0
18   male  33     0     0
20 female  21     0     0
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> #Extracting meaning from name of the person in the data
> name <- as.character(merge_data$Name)
> 
> title <-sapply(name, FUN =  function(x) {(strsplit(x,split = '[,.]'))[[1]][2]})
> title <- sub(' ','',title)
> 
> surname <- sapply(name, FUN =  function(x) {(strsplit(x,split = '[,.]'))[[1]][1]})
> 
> table(title)  #Original titles
title
        Capt          Col          Don         Dona           Dr     Jonkheer 
           1            4            1            1            8            1 
        Lady        Major       Master         Miss         Mlle          Mme 
           1            2           61          260            2            1 
          Mr          Mrs           Ms          Rev          Sir the Countess 
         757          197            2            8            1            1 
> title <- as.vector(title)
> 
> title[title %in% c('Capt','Don','Major', 'Sir')] <- 'Sir' 
> title[title %in% c('Dona','Lady','the Countess', 'Jonkheer','Mlle','Mme')] <- 'Lady' 
> title[title %in% 'Ms'] <- 'Miss'
> title <- as.factor(title);
> 
> table(title)  #Grouped Titles
title
   Col     Dr   Lady Master   Miss     Mr    Mrs    Rev    Sir 
     4      8      7     61    262    757    197      8      5 
> 
> merge_data$Title <- title
> 
> #Including family size
> 
> merge_data$familySize <- NA
> merge_data$familySize <- merge_data$SibSp + merge_data$Parch + 1
> 
> merge_data$family_set <- paste(as.character(merge_data$familySize), surname, sep = "")
> merge_data$family_set[merge_data$familySize <3] <- 'small'
> char <- merge_data$family_set
> 
> 
> famIssue <- data.frame(table(merge_data$family_set))
> famIssue <- famIssue[famIssue$Freq<3,]
> 
> char1 <- famIssue$Var1
> char[char %in% char1] <- 'small'
> 
> merge_data$family_set <- char
> head(merge_data$family_set)
[1] "small" "small" "small" "small" "small" "small"
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> merge_data$family_set<- as.factor(merge_data$family_set)
> train <-  merge_data[1:nrow(train),]
> test <- merge_data[(nrow(train) + 1):nrow(merge_data),]
> nrow(train)
[1] 891
> nrow(test)
[1] 418
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> 
> #Conditional Random Forest
> suppressWarnings(suppressMessages(library(party)))
> library(party)
> set.seed(755)
> 
> fit <- cforest(as.factor(Survived) ~ Sex + Age + Pclass + SibSp + Parch + Fare +
+                       Title + Embarked + familySize + family_set,
+                     data = train, controls = cforest_unbiased(ntree = 2000, mtry=3))
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> pre <- predict(fit, test, OOB=TRUE, type = "response")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> predictions <- data.frame(PassengerId = test$PassengerId, Survived = pre)
Error in data.frame(PassengerId = test$PassengerId, Survived = pre) : 
  arguments imply differing number of rows: 418, 891
Execution halted
