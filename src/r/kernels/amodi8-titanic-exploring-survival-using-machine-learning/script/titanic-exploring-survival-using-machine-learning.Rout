
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # This R environment comes with all of CRAN preinstalled, as well as many other helpful packages
> # The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats
> # For example, here's several helpful packages to load in 
> 
> library(ggplot2) # Data visualization
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(readr) # CSV file I/O, e.g. the read_csv function
> 
> # Input data files are available in the "../input/" directory.
> # For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory
> 
> system("ls ../input")
gender_submission.csv
test.csv
train.csv
> 
> # Any results you write to the current directory are saved as output.
> train <- read.csv("../input/train.csv")
> test <- read.csv("../input/test.csv")
> 
> # Exploring the datasets
> str(train)
'data.frame':	891 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : Factor w/ 891 levels "Abbing, Mr. Anthony",..: 109 191 358 277 16 559 520 629 417 581 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 148 levels "","A10","A14",..: 1 83 1 57 1 1 131 1 1 1 ...
 $ Embarked   : Factor w/ 4 levels "","C","Q","S": 4 2 4 4 4 3 4 4 4 2 ...
> table(train$Survived)

  0   1 
549 342 
> prop.table(table(train$Survived))

        0         1 
0.6161616 0.3838384 
> 
> # Morbid prediction (they all perish)
> test$Survived <- rep(0,418)
> 
> submit <- data.frame(Passengerid = test$PassengerId, Survived = test$Survived)
> write.csv(submit, file = "theyallperish.csv", row.names = FALSE)
> 
> # Utilizing other response variables (Age-Sex)
> table(train$Sex)

female   male 
   314    577 
> round(prop.table(table(train$Sex,train$Survived),1) * 100, 2)
        
             0     1
  female 25.80 74.20
  male   81.11 18.89
> 
> # All females survive
> test$Survived <- 0
> test$Survived[test$Sex == 'female'] <- 1
> 
> submit <- data.frame(Passengerid = test$PassengerId, Survived = test$Survived)
> write.csv(submit, file = "maleperish.csv", row.names = FALSE)
> 
> # All childen and females survive
> summary(train$Age)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
   0.42   20.12   28.00   29.70   38.00   80.00     177 
> 
> hist(train$Age, col = c("red", "steelblue"), freq = F, main = "Distribution of Age", xlab = "Age")
> rug(jitter(train$Age), col = "darkgrey")
> lines(density(train$Age, na.rm = T), col = "yellow", lwd = 3)
> box()
> 
> train$Child <- 0
> train$Child[train$Age < 18] <- 1
> 
> aggregate(Survived ~ Child + Sex, data = train, FUN = sum)
  Child    Sex Survived
1     0 female      195
2     1 female       38
3     0   male       86
4     1   male       23
> aggregate(Survived ~ Child + Sex, data = train, FUN = length)
  Child    Sex Survived
1     0 female      259
2     1 female       55
3     0   male      519
4     1   male       58
> 
> aggregate(Survived ~ Child + Sex, data = train, FUN = function(x){sum(x)/length(x)})
  Child    Sex  Survived
1     0 female 0.7528958
2     1 female 0.6909091
3     0   male 0.1657033
4     1   male 0.3965517
> 
> train$Fare2 <- '30+'
> train$Fare2[train$Fare >= 10 & train$Fare < 20] = '10-20'
> train$Fare2[train$Fare >= 20 & train$Fare < 30] = '20-30'
> train$Fare2[train$Fare < 10] = '<10'
> 
> aggregate(Survived ~ Fare2 + Pclass + Sex, data = train, FUN = function(x){sum(x)/length(x)})
   Fare2 Pclass    Sex  Survived
1  20-30      1 female 0.8333333
2    30+      1 female 0.9772727
3  10-20      2 female 0.9142857
4  20-30      2 female 0.9000000
5    30+      2 female 1.0000000
6    <10      3 female 0.5937500
7  10-20      3 female 0.5813953
8  20-30      3 female 0.3333333
9    30+      3 female 0.1250000
10   <10      1   male 0.0000000
11 20-30      1   male 0.4000000
12   30+      1   male 0.3837209
13   <10      2   male 0.0000000
14 10-20      2   male 0.1587302
15 20-30      2   male 0.1600000
16   30+      2   male 0.2142857
17   <10      3   male 0.1115385
18 10-20      3   male 0.2368421
19 20-30      3   male 0.1250000
20   30+      3   male 0.2400000
> 
> # All females survive expect ones with Pclass = 3 and paid fare >= $20
> test$Survived <- 0
> test$Survived[test$Sex == 'female'] <- 1
> test$Survived[test$Sex == 'female' & test$Pclass == 3 & test$Fare >= 20] <- 0
> 
> submit <- data.frame(Passengerid = test$PassengerId, Survived = test$Survived)
> write.csv(submit, file = "higherclassfemalesurvive.csv", row.names = FALSE)
> 
> proc.time()
   user  system elapsed 
  0.653   0.078   0.755 
