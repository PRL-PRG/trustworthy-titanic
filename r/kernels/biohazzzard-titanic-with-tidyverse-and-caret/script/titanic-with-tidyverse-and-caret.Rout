
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> library(tidyverse)
â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.0 â”€â”€
[32mâœ“[39m [34mggplot2[39m 3.3.2     [32mâœ“[39m [34mpurrr  [39m 0.3.4
[32mâœ“[39m [34mtibble [39m 3.0.1     [32mâœ“[39m [34mdplyr  [39m 1.0.2
[32mâœ“[39m [34mtidyr  [39m 1.1.0     [32mâœ“[39m [34mstringr[39m 1.4.0
[32mâœ“[39m [34mreadr  [39m 1.3.1     [32mâœ“[39m [34mforcats[39m 0.5.0
â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
[31mx[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
[31mx[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()
Warning messages:
1: package â€˜ggplot2â€™ was built under R version 3.6.2 
2: package â€˜tibbleâ€™ was built under R version 3.6.2 
3: package â€˜tidyrâ€™ was built under R version 3.6.2 
4: package â€˜purrrâ€™ was built under R version 3.6.2 
5: package â€˜dplyrâ€™ was built under R version 3.6.2 
> library(stringr)
> library(forcats)
> library(caret)
Loading required package: lattice

Attaching package: â€˜caretâ€™

The following object is masked from â€˜package:purrrâ€™:

    lift

> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> train <- read.csv('../input/train.csv', stringsAsFactors = F)
> test <- read.csv('../input/test.csv', stringsAsFactors = F)
> 
> ix_train <- seq(1, nrow(train))
> ix_test <- seq((tail(ix_train,n=1)+1), (nrow(train)+nrow(test)))
> y_train <- train$Survived
> train$Survived <- NULL
> 
> full_data <- rbind(train,test)
> 
> full_data$Cabin <- NULL
> full_data$Ticket <- NULL
> full_data$Pclass <- as.factor(full_data$Pclass)
> full_data$Sex <- as.factor(full_data$Sex)
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> summary(full_data)
  PassengerId   Pclass      Name               Sex           Age       
 Min.   :   1   1:323   Length:1309        female:466   Min.   : 0.17  
 1st Qu.: 328   2:277   Class :character   male  :843   1st Qu.:21.00  
 Median : 655   3:709   Mode  :character                Median :28.00  
 Mean   : 655                                           Mean   :29.88  
 3rd Qu.: 982                                           3rd Qu.:39.00  
 Max.   :1309                                           Max.   :80.00  
                                                        NA's   :263    
     SibSp            Parch            Fare           Embarked        
 Min.   :0.0000   Min.   :0.000   Min.   :  0.000   Length:1309       
 1st Qu.:0.0000   1st Qu.:0.000   1st Qu.:  7.896   Class :character  
 Median :0.0000   Median :0.000   Median : 14.454   Mode  :character  
 Mean   :0.4989   Mean   :0.385   Mean   : 33.295                     
 3rd Qu.:1.0000   3rd Qu.:0.000   3rd Qu.: 31.275                     
 Max.   :8.0000   Max.   :9.000   Max.   :512.329                     
                                  NA's   :1                           
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> apply(sapply(full_data, is.na),2,sum)
PassengerId      Pclass        Name         Sex         Age       SibSp 
          0           0           0           0         263           0 
      Parch        Fare    Embarked 
          0           1           0 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> get_mode <- function(v){
+   tab <- table(v)
+   out <- tab[tab == max(tab)]
+   return(as.numeric(names(out)))
+ }
> 
> full_data %>% mutate(Age = round(Age)) -> full_data
> 
> full_data %>% ggplot(aes(Age)) + geom_density() + geom_vline(aes(xintercept = get_mode(Age)), linetype="22") + labs(title="Age distribution", subtitle="Dashed line indicates mode (24)") + theme_bw()
Warning message:
Removed 263 rows containing non-finite values (stat_density). 
> full_data %>% replace_na(list(Age=get_mode(.$Age))) -> full_data
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full_data %>% filter(is.na(.$Fare))
  PassengerId Pclass               Name  Sex Age SibSp Parch Fare Embarked
1        1044      3 Storey, Mr. Thomas male  60     0     0   NA        S
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full_data %>% filter(!is.na(Fare)) %>% group_by(Embarked, Pclass) %>% summarise(Median_fare=median(Fare))
`summarise()` regrouping output by 'Embarked' (override with `.groups` argument)
[90m# A tibble: 10 x 3[39m
[90m# Groups:   Embarked [4][39m
   Embarked Pclass Median_fare
   [3m[90m<chr>[39m[23m    [3m[90m<fct>[39m[23m        [3m[90m<dbl>[39m[23m
[90m 1[39m [90m"[39m[90m"[39m       1            80   
[90m 2[39m [90m"[39mC[90m"[39m      1            76.7 
[90m 3[39m [90m"[39mC[90m"[39m      2            15.3 
[90m 4[39m [90m"[39mC[90m"[39m      3             7.90
[90m 5[39m [90m"[39mQ[90m"[39m      1            90   
[90m 6[39m [90m"[39mQ[90m"[39m      2            12.4 
[90m 7[39m [90m"[39mQ[90m"[39m      3             7.75
[90m 8[39m [90m"[39mS[90m"[39m      1            52   
[90m 9[39m [90m"[39mS[90m"[39m      2            15.4 
[90m10[39m [90m"[39mS[90m"[39m      3             8.05
> full_data %>% replace_na(list(Fare=8.05)) -> full_data
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full_data %>% filter(Embarked=="")
  PassengerId Pclass                                      Name    Sex Age SibSp
1          62      1                       Icard, Miss. Amelie female  38     0
2         830      1 Stone, Mrs. George Nelson (Martha Evelyn) female  62     0
  Parch Fare Embarked
1     0   80         
2     0   80         
> full_data$Embarked[full_data$Embarked==""] <- "C"
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full_data$Title <- str_split(str_split(full_data$Name, ".*, ", simplify = T)[,2], ". .*", simplify = T)[,1]
> full_data %>% select(Title) %>% table
.
    Capt      Col      Don     Dona       Dr Jonkheer     Lady    Major 
       1        4        1        1        8        1        1        2 
  Master     Miss     Mlle      Mme       Mr      Mrs       Ms      Rev 
      61      260        2        1      757      197        2        8 
     Sir       th 
       1        1 
> full_data$Title[full_data$Title=="Ms"] <- "Miss"
> full_data %>% mutate(Title=fct_lump(.$Title, 4)) -> full_data
> full_data$Name <- NULL
> full_data %>% ggplot(aes(Title)) + geom_histogram(stat="count") + theme_bw() + labs(title="Histogram of Title")
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> full_data %>% mutate(Fsize=SibSp+Parch+1) -> full_data
> full_data %>% ggplot(aes(Fsize)) + geom_histogram(bins=15) + theme_bw() + labs(title="Histogram of family Sizes")
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> x_train <- full_data[ix_train,]
> x_test <- full_data[ix_test,]
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> 
> model_data <- x_train
> model_data$Class <- as.factor(y_train)
> model_data$Class <- fct_recode(model_data$Class, Survived="1", Dead="0")
> model_data$PassengerId <- NULL
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> model_data %>% ggplot(aes(x=Sex, fill=Class)) + geom_histogram(stat="count",position=position_dodge()) + theme_bw() + labs(title="Survival by Sex")
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> model_data %>% ggplot(aes(x=Fsize, fill=Class)) + geom_histogram(stat="count",position=position_dodge()) + theme_bw() + labs(title="Survival by Family Size")
Warning message:
Ignoring unknown parameters: binwidth, bins, pad 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> ind <- createDataPartition(y_train, p=2/3, list=F)
> model_data_train <- model_data[ind,]
> model_data_val <- model_data[-ind,]
> 
> ctr <- trainControl(method="cv", number=5, savePredictions = T, classProbs = T)
> parameters <- expand.grid(eta=0.1, colsample_bytree=c(0.3,0.5, 0.7), max_depth=c(3,6,9,12), nrounds=100, gamma=1, min_child_weight=2, subsample=c(0.3, 0.5,1))
> 
> xgb <- train(Class~., data=model_data_train, method="xgbTree", trControl=ctr, tuneGrid=parameters)
> 
> 
> xgb$results %>% filter(Accuracy==max(.$Accuracy)) #Output model parameters with max Accuracy
  eta max_depth gamma colsample_bytree min_child_weight subsample nrounds
1 0.1         9     1              0.7                2         1     100
   Accuracy     Kappa AccuracySD    KappaSD
1 0.8468594 0.6646465 0.03356474 0.07492864
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> pred <- predict(xgb, model_data_val)
> table(Actual=model_data_val$Class, Predicted=pred)
          Predicted
Actual     Dead Survived
  Dead      164       15
  Survived   35       83
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> xgb_full <- train(Class~., data=model_data, trControl=ctr, tuneGrid=parameters, method="xgbTree")
> xgb_full$results %>% filter(Accuracy == max(.$Accuracy))
  eta max_depth gamma colsample_bytree min_child_weight subsample nrounds
1 0.1        12     1              0.7                2         1     100
   Accuracy     Kappa AccuracySD    KappaSD
1 0.8529577 0.6828366 0.01569778 0.03535958
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> xgb_full$results %>% ggplot(aes(x=as.factor(subsample), y=Accuracy)) + geom_point() + theme_bw()
> xgb_full$results %>% ggplot(aes(x=as.factor(max_depth), y=Accuracy)) + geom_point() + theme_bw()
> xgb_full$results %>% ggplot(aes(x=as.factor(colsample_bytree), y=Accuracy)) + geom_point() + theme_bw()
> 
> 
> 
> ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
> x_test %>% select(-PassengerId) -> x_test_final
> test_predictions <- predict(xgb_full, x_test_final)
> submission_df <- x_test
> submission_df$Survived <- fct_recode(test_predictions, "0"="Dead", "1"="Survived")
> submission_df %>% select(PassengerId, Survived) -> submission_df
> write.csv(submission_df, "solution.csv", row.names = F)
> 
> 
> proc.time()
   user  system elapsed 
193.602   4.430  22.928 
