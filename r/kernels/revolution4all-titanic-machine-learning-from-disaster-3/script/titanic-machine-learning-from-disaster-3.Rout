
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #Read data into R enviorment 
> titanicData<-read.csv(file="../input/train.csv",header = TRUE,sep = "," )
> #explicitly declare atribute "survived" as factor, by default R treats this as numeric
> titanicData$Survived<-factor(titanicData$Survived)
> #set libary randomforest to access built in functions
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.
> #perform missing value treatment on the data
> titanicData2<-na.roughfix(titanicData)
> #slit the data into test and evaluation set
> ind <- sample(2, nrow(titanicData2),replace = TRUE,prob = c(0.8,0.2))
> #test data - 80% sample of the orginal data
> tdata <-titanicData2[ind==1,]
> #validation data - 20% sample of the orginal data
> vdata <-titanicData2[ind==2,]
> #declare prediction variable to train on the test data
> #assumption has been made that pclass, age and sex are important attributes that helped survive
> fcn=randomForest(Survived~Pclass+Sex+Age ,data=tdata,mtry=3,ntree=100)
> #make the preiction on validation set based on learning from test data
> predicted<- predict(fcn,newdata=vdata,type="class")
> #convert predicted from atomic vector  into data frame 
> predicted <- as.data.frame(predicted)
> #add predicted column to vdata to compare the prediction with actuals
> vdata <- cbind(vdata, predicted)
> #compute accurcy as no. of coorect prediction to total number of predcitions
> accuracy_rf <- sum(predicted$predicted == vdata$Survived)/NROW(vdata)
> accuracy_rf
[1] 0.8118812
> #identify the important factors that helped in survival
> importance(fcn)
       MeanDecreaseGini
Pclass         42.33635
Sex            97.81315
Age            97.66526
> 
> #the accuracy was 72.88% and the most important factors helping in survival
> #was identified to be "sex" followed by "age" and "Pclass"
> 
> 
> 
> 
> #Approach2 -since the accuracy was only 72.88% lets try adding 
> #more attributes to the above to make the predictions more accuarte
> 
> #define  variable fmem as numebr of family members(siblings+parents) 
> #add it to test and validation sets
> tdata2<-cbind(tdata,fmem=tdata$SibSp+tdata$Parch)
> vdata2<-cbind(vdata,fmem=vdata$SibSp+vdata$Parch)
> #define prediction variable as 
> fcn2=randomForest(Survived~Pclass+Sex+Age+fmem ,data=tdata2,mtry=4,ntree=100,importance=TRUE)
> 
> predicted2<- predict(fcn2,newdata=vdata2,type="class")
> predicted2 <- as.data.frame(predicted2)
> vdata2 <- cbind(vdata2, predicted2)
> accuracy_rf2 <- sum(predicted2$predicted2 == vdata2$Survived)/NROW(vdata2)
> accuracy_rf2
[1] 0.8267327
> importance(fcn2)
              0          1 MeanDecreaseAccuracy MeanDecreaseGini
Pclass 13.28270 26.9415936             26.88573         39.24348
Sex    43.21896 45.3505624             58.16724         99.87347
Age    12.41130 13.3515754             17.77244         94.80624
fmem   16.00654 -0.4062632             15.26547         32.85649
> #the accuracy improved slightly from 72.88% tp 74% by adding
> #family member attribute to prediction 
> #the most important factors helping in survival
> #was identified to be "sex" followed by "age", "Pclass" and fmem
> 
> #make submission to titanic contest 
> write.csv(vdata2, file = "random_forest_r_submission.csv", row.names=FALSE)
> 
> imp <- importance(fcn2, type=1)
> featureImportance <- data.frame(Feature=row.names(imp), Importance=imp[,1])
> library(ggplot2) 

Attaching package: ‘ggplot2’

The following object is masked from ‘package:randomForest’:

    margin

Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> p <- ggplot(featureImportance, aes(x=reorder(Feature, Importance), y=Importance)) +
+      geom_bar(stat="identity", fill="#53cfff") +
+      coord_flip() + 
+      theme_light(base_size=20) +
+      xlab("") +
+      ylab("Importance") + 
+      ggtitle("Random Forest Feature Importance\n") +
+      theme(plot.title=element_text(size=18))
> 
> ggsave("2_feature_importance.png", p)
Saving 7 x 7 in image
> 
> 
> proc.time()
   user  system elapsed 
  0.869   0.108   0.996 
