
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #loading libraries
> library(mice)

Attaching package: â€˜miceâ€™

The following objects are masked from â€˜package:baseâ€™:

    cbind, rbind

Warning message:
package â€˜miceâ€™ was built under R version 3.6.2 
> library(ggplot2)
Warning message:
package â€˜ggplot2â€™ was built under R version 3.6.2 
> library(dplyr)

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

Warning message:
package â€˜dplyrâ€™ was built under R version 3.6.2 
> library(purrr)
Warning message:
package â€˜purrrâ€™ was built under R version 3.6.2 
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: â€˜randomForestâ€™

The following object is masked from â€˜package:dplyrâ€™:

    combine

The following object is masked from â€˜package:ggplot2â€™:

    margin

> 
> #importing data
> train <- read.csv("../input/train.csv", stringsAsFactors=FALSE)
> test <- read.csv("../input/test.csv", stringsAsFactors=FALSE)
> 
> #combining data for full analysis
> data <- bind_rows(train, test)
> 
> glimpse(data)
Rows: 1,309
Columns: 12
$ PassengerId [3m[90m<int>[39m[23m 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17â€¦
$ Survived    [3m[90m<int>[39m[23m 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, â€¦
$ Pclass      [3m[90m<int>[39m[23m 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, â€¦
$ Name        [3m[90m<chr>[39m[23m "Braund, Mr. Owen Harris", "Cumings, Mrs. John Bradley (Fâ€¦
$ Sex         [3m[90m<chr>[39m[23m "male", "female", "female", "female", "male", "male", "maâ€¦
$ Age         [3m[90m<dbl>[39m[23m 22, 38, 26, 35, 35, NA, 54, 2, 27, 14, 4, 58, 20, 39, 14,â€¦
$ SibSp       [3m[90m<int>[39m[23m 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, â€¦
$ Parch       [3m[90m<int>[39m[23m 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, â€¦
$ Ticket      [3m[90m<chr>[39m[23m "A/5 21171", "PC 17599", "STON/O2. 3101282", "113803", "3â€¦
$ Fare        [3m[90m<dbl>[39m[23m 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625â€¦
$ Cabin       [3m[90m<chr>[39m[23m "", "C85", "", "C123", "", "", "E46", "", "", "", "G6", "â€¦
$ Embarked    [3m[90m<chr>[39m[23m "S", "C", "S", "S", "S", "Q", "S", "S", "S", "C", "S", "Sâ€¦
> 
> missing <- sapply(data, function(x) sum(is.na(x)))
> print(missing)
PassengerId    Survived      Pclass        Name         Sex         Age 
          0         418           0           0           0         263 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           1           0           0 
> 
> #modifying categorical variables to factors
> data$Pclass <- as.factor(data$Pclass)
> levels(data$Pclass) <- c("Upper", "Middle", "Lower")
> 
> data$Embarked <- as.factor(data$Embarked)
> 
> data$Sex <- as.factor(data$Sex)
> levels(data$Sex) <- c("Female", "Male")
> 
> head(data)
  PassengerId Survived Pclass
1           1        0  Lower
2           2        1  Upper
3           3        1  Lower
4           4        1  Upper
5           5        0  Lower
6           6        0  Lower
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   Male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) Female  38     1     0
3                              Heikkinen, Miss. Laina Female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) Female  35     1     0
5                            Allen, Mr. William Henry   Male  35     0     0
6                                    Moran, Mr. James   Male  NA     0     0
            Ticket    Fare Cabin Embarked
1        A/5 21171  7.2500              S
2         PC 17599 71.2833   C85        C
3 STON/O2. 3101282  7.9250              S
4           113803 53.1000  C123        S
5           373450  8.0500              S
6           330877  8.4583              Q
> 
> set.seed(765)
> data_to_mice <- data %>% select(Pclass, Sex, Age, SibSp, Parch, Fare)
> m_model <- mice(data_to_mice, method='rf')

 iter imp variable
  1   1  Age  Fare
  1   2  Age  Fare
  1   3  Age  Fare
  1   4  Age  Fare
  1   5  Age  Fare
  2   1  Age  Fare
  2   2  Age  Fare
  2   3  Age  Fare
  2   4  Age  Fare
  2   5  Age  Fare
  3   1  Age  Fare
  3   2  Age  Fare
  3   3  Age  Fare
  3   4  Age  Fare
  3   5  Age  Fare
  4   1  Age  Fare
  4   2  Age  Fare
  4   3  Age  Fare
  4   4  Age  Fare
  4   5  Age  Fare
  5   1  Age  Fare
  5   2  Age  Fare
  5   3  Age  Fare
  5   4  Age  Fare
  5   5  Age  Fare
> 
> imputes <- complete(m_model)
> 
> ggplot() +
+     geom_density(data = data, aes(x=Age), fill='blue', alpha=0.5) +
+     geom_density(data = imputes, aes(x=Age), fill='red', alpha=0.5)
Warning message:
Removed 263 rows containing non-finite values (stat_density). 
> 
> data$Age <- imputes$Age
> 
> data %>% filter(Pclass=='Lower', Embarked=='S') %>% 
+   ggplot(aes(Fare)) +
+   geom_histogram(binwidth=1.2, fill='blue3', alpha=0.5) +
+   geom_vline(aes(xintercept=mean(Fare, na.rm = TRUE)), col="red") +
+   geom_vline(aes(xintercept=median(Fare, na.rm = TRUE)), col="green")
Warning message:
Removed 1 rows containing non-finite values (stat_bin). 
> 
> data$Fare[is.na(data$Fare)] <- median(data[data$Pclass == 'Lower' & data$Embarked=='S', ]$Fare, na.rm = TRUE)
> 
> data$FamilySize <- ifelse(data$SibSp + data$Parch + 1 == 1, "single", ifelse(data$SibSp + data$Parch + 1 < 4, "small", "large"))
> 
> ggplot(data, aes(FamilySize)) +
+   geom_bar(position="dodge") + 
+   scale_x_discrete(limits=c("single", "small", "large"))
> 
> data$Title <- gsub('(.*, )|(\\..*)', '', data$Name)
> print(unique(data$Title))
 [1] "Mr"           "Mrs"          "Miss"         "Master"       "Don"         
 [6] "Rev"          "Dr"           "Mme"          "Ms"           "Major"       
[11] "Lady"         "Sir"          "Mlle"         "Col"          "Capt"        
[16] "the Countess" "Jonkheer"     "Dona"        
> 
> #reassigning bizzare titles
> data$Title[data$Title == 'Mlle']<- 'Miss' 
> data$Title[data$Title == 'Ms']  <- 'Miss'
> data$Title[data$Title == 'Mme'] <- 'Mrs' 
> data$Title[data$Title == 'Dona']<- 'Mrs'
> data$Title[data$Title == 'Don'] <- 'Mr'
> 
> #I will add VIP, Crew and Ohter for convinieance
> vip <- c('Lady', 'the Countess', 'Sir', 'Jonkheer')
> crew <- c('Capt', 'Col', 'Major')
> other <- c('Dr', 'Rev')
> 
> data$Title[data$Title %in% vip] <- 'VIP'
> data$Title[data$Title %in% crew] <- 'CREW'
> data$Title[data$Title %in% other] <- 'OTHER'
> 
> data$FamilyName <- gsub(",.*","",data$Name)
> 
> data$Sector <- sapply(data$Cabin, substr, 1, 1)
> data$Sector[data$Sector==""] <- NA
> Family.Sector <- data %>% select(FamilyName, Sector) %>% filter(!is.na(Sector)) %>% unique()
> 
> data$Sector <- apply(data[, c("FamilyName", "Sector")], 1, function(x) {
+   if(x["FamilyName"] %in% Family.Sector$FamilyName & is.na(x["Sector"])) {
+     return(Family.Sector$Sector[Family.Sector$FamilyName == x["FamilyName"]][1])
+   } else if(!is.na(x["Sector"])){
+     return(x["Sector"])
+   } else {
+     return("M")
+   }
+ })
> 
> head(data[c("FamilyName", "Sector")])
  FamilyName Sector
1     Braund      M
2    Cumings      C
3  Heikkinen      M
4   Futrelle      C
5      Allen      B
6      Moran      M
> 
> table(data$Sector)

  A   B   C   D   E   F   G   M   T 
 24  73  99  52  50  25   5 980   1 
> 
> data$FamilySize <- as.factor(data$FamilySize)
> data$Title <- as.factor(data$Title)
> data$Sector <- as.factor(data$Sector)
> 
> train <- data[1:891,]
> test <- data[892:1309,]
> 
> titanic_model <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + 
+                                             Fare + Embarked + FamilySize + 
+                                             Title + Sector,
+                                             data = train)
> 
> plot(titanic_model)
> 
> #BY Megan L. Risdal
> importance    <- importance(titanic_model)
> varImportance <- data.frame(Variables = row.names(importance), 
+                             Importance = round(importance[ ,'MeanDecreaseGini'],2))
> 
> # Create a rank variable based on importance
> rankImportance <- varImportance %>%
+   mutate(Rank = paste0('#',dense_rank(desc(Importance))))
> 
> # Use ggplot2 to visualize the relative importance of variables
> ggplot(rankImportance, aes(x = reorder(Variables, Importance), 
+     y = Importance, fill = Importance)) +
+   geom_bar(stat='identity') + 
+   geom_text(aes(x = Variables, y = 0.5, label = Rank),
+     hjust=0, vjust=0.55, size = 4, colour = 'red') +
+   labs(x = 'Variables') +
+   coord_flip()
> 
> prediction <- predict(titanic_model, test)
> solution <- data.frame(PassengerId = test$PassengerId, Survived = prediction)
> write.csv(solution, file = 'rf_mod_Solution.csv', row.names = F)
> 
> proc.time()
   user  system elapsed 
  3.199   0.239   3.450 
