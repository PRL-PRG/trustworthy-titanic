
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> library(tidyverse) # metapackage with lots of helpful functions
â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.0 â”€â”€
[32mâœ“[39m [34mggplot2[39m 3.3.2     [32mâœ“[39m [34mpurrr  [39m 0.3.4
[32mâœ“[39m [34mtibble [39m 3.0.1     [32mâœ“[39m [34mdplyr  [39m 1.0.2
[32mâœ“[39m [34mtidyr  [39m 1.1.0     [32mâœ“[39m [34mstringr[39m 1.4.0
[32mâœ“[39m [34mreadr  [39m 1.3.1     [32mâœ“[39m [34mforcats[39m 0.5.0
â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
[31mx[39m [34mdplyr[39m::[32mfilter()[39m masks [34mstats[39m::filter()
[31mx[39m [34mdplyr[39m::[32mlag()[39m    masks [34mstats[39m::lag()
Warning messages:
1: package â€˜ggplot2â€™ was built under R version 3.6.2 
2: package â€˜tibbleâ€™ was built under R version 3.6.2 
3: package â€˜tidyrâ€™ was built under R version 3.6.2 
4: package â€˜purrrâ€™ was built under R version 3.6.2 
5: package â€˜dplyrâ€™ was built under R version 3.6.2 
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: â€˜randomForestâ€™

The following object is masked from â€˜package:dplyrâ€™:

    combine

The following object is masked from â€˜package:ggplot2â€™:

    margin

> list.files(path = "../input")
[1] "gender_submission.csv" "test.csv"              "train.csv"            
> 
> t1 <- read.csv("../input/train.csv",stringsAsFactors = F)
> t2 <- read.csv("../input/test.csv",stringsAsFactors = F)
> all <- bind_rows(t1,t2)
> 
> colSums(is.na(all))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0         418           0           0           0         263 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           1           0           0 
> all$Fare[all$Fare==0] <- NA
> all$Fare <- as.numeric(all$Fare)
> all$Embarked[all$Embarked==''] <- 'S'
> # Change Embarked.
> all$Embarked[all$Embarked=='C'] <- 0
> all$Embarked[all$Embarked=='Q'] <- 1
> all$Embarked[all$Embarked=='S'] <- 2
> all$Embarked <- as.numeric(all$Embarked)
> # Make sex numeric
> all$Sex[all$Sex=='female'] <- 1
> all$Sex[all$Sex=='male'] <- 0
> all$Sex <- as.numeric(all$Sex)
> str(all)
'data.frame':	1309 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : chr  "Braund, Mr. Owen Harris" "Cumings, Mrs. John Bradley (Florence Briggs Thayer)" "Heikkinen, Miss. Laina" "Futrelle, Mrs. Jacques Heath (Lily May Peel)" ...
 $ Sex        : num  0 1 1 1 0 0 0 0 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : chr  "A/5 21171" "PC 17599" "STON/O2. 3101282" "113803" ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : chr  "" "C85" "" "C123" ...
 $ Embarked   : num  2 0 2 2 2 1 2 2 2 0 ...
> 
> pat <- '\\,*+\\w+\\.'
> titles <- str_extract(all$Name, pattern = pat)
> table(titles)
titles
    Capt.      Col. Countess.      Don.     Dona.       Dr. Jonkheer.     Lady. 
        1         4         1         1         1         8         1         1 
   Major.   Master.     Miss.     Mlle.      Mme.       Mr.      Mrs.       Ms. 
        2        61       260         2         1       757       197         2 
     Rev.      Sir. 
        8         1 
> all$titles <- titles
> ti <- data.frame(num=1:length(unique(all$titles)), titel=unique(all$titles))
> # Convert title to a number.
> for(i in 1:nrow(ti)){
+ all$titles[all$titles==ti$titel[i]] <- ti$num[i]
+ }
> all$titles <- as.numeric(all$titles)
> 
> cor(all[c('Fare','Age','SibSp','Parch','Pclass','Sex','Embarked','Survived','titles')],use = 'c')
                Fare         Age       SibSp       Parch      Pclass
Fare      1.00000000  0.09898081  0.13523702  0.20252090 -0.55997680
Age       0.09898081  1.00000000 -0.30749198 -0.18798676 -0.36969883
SibSp     0.13523702 -0.30749198  1.00000000  0.38211638  0.06720178
Parch     0.20252090 -0.18798676  0.38211638  1.00000000  0.02532937
Pclass   -0.55997680 -0.36969883  0.06720178  0.02532937  1.00000000
Sex       0.18096543 -0.09094015  0.10024048  0.24417618 -0.15784372
Embarked -0.27946143 -0.03245096  0.03516703  0.01369063  0.24374038
Survived  0.26631560 -0.07372530 -0.02039754  0.09110368 -0.36713852
titles    0.10993531 -0.08430922  0.16068039  0.12132546 -0.20210440
                 Sex    Embarked    Survived      titles
Fare      0.18096543 -0.27946143  0.26631560  0.10993531
Age      -0.09094015 -0.03245096 -0.07372530 -0.08430922
SibSp     0.10024048  0.03516703 -0.02039754  0.16068039
Parch     0.24417618  0.01369063  0.09110368  0.12132546
Pclass   -0.15784372  0.24374038 -0.36713852 -0.20210440
Sex       1.00000000 -0.10394778  0.53843856  0.34279036
Embarked -0.10394778  1.00000000 -0.17795545 -0.10965961
Survived  0.53843856 -0.17795545  1.00000000  0.29570153
titles    0.34279036 -0.10965961  0.29570153  1.00000000
> 
> not.missing <- which(!is.na(all[,c('Fare','Age')]))
> missing.fare <- which(is.na(all[,c('Fare')]))
> missing.fare
 [1]  180  264  272  278  303  414  467  482  598  634  675  733  807  816  823
[16] 1044 1158 1264
> 
> model <- glm(Fare ~ Pclass+ Embarked, data = all[not.missing,])
> pred <- predict(model, all[missing.fare,])
> data.frame(pred)
          pred
180   5.858766
264  73.476196
272   5.858766
278  39.667481
303   5.858766
414  39.667481
467  39.667481
482  39.667481
598   5.858766
634  73.476196
675  39.667481
733  39.667481
807  73.476196
816  73.476196
823  73.476196
1044  5.858766
1158 73.476196
1264 73.476196
> all$Fare[missing.fare] <- pred
> 
> not.missing <- which(!is.na(all$Age))
> missing <- which(is.na(all$Age))
> model <- glm(Age ~  Pclass+ Embarked, data = all[not.missing,])
> pred <- predict(model, all[missing,])
> data.frame(pred=head(pred))
       pred
6  23.87578
18 31.64391
20 23.26032
27 23.26032
29 23.87578
30 24.49124
> all$Age[missing] <- pred
> 
> train.val <-as.integer(891*0.70)
> test.val <- 891-train.val
> # make all$Survived factor
> all$Survived <- as.factor(all$Survived)
> 
> train <- all[1:train.val,]
> test <- all[624:891,]
> 
> model <- randomForest(Survived ~ Sex+ Pclass+ titles+ Fare, data =train)
> pred <- predict(model, test)
> # data.frame(actual=test$Survived[1:100], pred=pred)
> table(pred=pred,actual=test$Survived)
    actual
pred   0   1
   0 159  30
   1  13  66
> mean(pred==test$Survived)
[1] 0.8395522
> 
> model

Call:
 randomForest(formula = Survived ~ Sex + Pclass + titles + Fare,      data = train) 
               Type of random forest: classification
                     Number of trees: 500
No. of variables tried at each split: 2

        OOB estimate of  error rate: 17.5%
Confusion matrix:
    0   1 class.error
0 340  37  0.09814324
1  72 174  0.29268293
> 
> options(repr.plot.width=7, repr.plot.height=5)
> varImpPlot(model, sort = T)
> 
> pred <- predict(model,all[892:1309,])
> submit <- data.frame(PassengerId=892:1309,Survived=pred)
> write.csv(submit, file = 'RF_submission_t.csv', row.names = F)
> 
> 
> 
> proc.time()
   user  system elapsed 
  1.362   0.118   1.472 
