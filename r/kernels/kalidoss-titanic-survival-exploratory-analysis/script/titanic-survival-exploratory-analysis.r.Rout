
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # This R environment comes with all of CRAN preinstalled, as well as many other helpful packages
> # The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats
> # For example, here's several helpful packages to load in 
> packageStartupMessage()

> library(plyr)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.6.2 
> library(ggplot2)
Warning message:
package ‘ggplot2’ was built under R version 3.6.2 
> library(DT)
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

The following object is masked from ‘package:dplyr’:

    combine

> library(corrplot)
corrplot 0.84 loaded
> library(caret)
Loading required package: lattice
> library(lattice)
> 
> # Input data files are available in the "../input/" directory.
> # For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory
> 
> system("ls ../input")
gender_submission.csv
test.csv
train.csv
> 
> # Any results you write to the current directory are saved as output.
> mytheme_1 <- function() {
+   return(
+     theme(
+       axis.text.x = element_text(
+         angle = 90,
+         size = 10,
+         vjust = 0.4
+       ),
+       plot.title = element_text(size = 15, vjust = 2),
+       axis.title.x = element_text(size = 12, vjust = -0.35)
+     )
+   )
+ }
> 
> mytheme_2 <- function() {
+   return(
+     theme(
+       axis.text.x = element_text(size = 10, vjust = 0.4),
+       plot.title = element_text(size = 15, vjust = 2),
+       axis.title.x = element_text(size = 12, vjust = -0.35)
+     )
+   )
+ }
> 
> 
> # Exploratory Analysis 
> 
> train <- read.csv("../input/train.csv")
> test <- read.csv("../input/test.csv")
> 
> 
> str(train)
'data.frame':	891 obs. of  12 variables:
 $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 ...
 $ Survived   : int  0 1 1 1 0 0 0 0 1 1 ...
 $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 ...
 $ Name       : Factor w/ 891 levels "Abbing, Mr. Anthony",..: 109 191 358 277 16 559 520 629 417 581 ...
 $ Sex        : Factor w/ 2 levels "female","male": 2 1 1 1 2 2 2 2 1 1 ...
 $ Age        : num  22 38 26 35 35 NA 54 2 27 14 ...
 $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 ...
 $ Parch      : int  0 0 0 0 0 0 0 1 2 0 ...
 $ Ticket     : Factor w/ 681 levels "110152","110413",..: 524 597 670 50 473 276 86 396 345 133 ...
 $ Fare       : num  7.25 71.28 7.92 53.1 8.05 ...
 $ Cabin      : Factor w/ 148 levels "","A10","A14",..: 1 83 1 57 1 1 131 1 1 1 ...
 $ Embarked   : Factor w/ 4 levels "","C","Q","S": 4 2 4 4 4 3 4 4 4 2 ...
> 
> datatable(train)
> head(train)
  PassengerId Survived Pclass
1           1        0      3
2           2        1      1
3           3        1      3
4           4        1      1
5           5        0      3
6           6        0      3
                                                 Name    Sex Age SibSp Parch
1                             Braund, Mr. Owen Harris   male  22     1     0
2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38     1     0
3                              Heikkinen, Miss. Laina female  26     0     0
4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35     1     0
5                            Allen, Mr. William Henry   male  35     0     0
6                                    Moran, Mr. James   male  NA     0     0
            Ticket    Fare Cabin Embarked
1        A/5 21171  7.2500              S
2         PC 17599 71.2833   C85        C
3 STON/O2. 3101282  7.9250              S
4           113803 53.1000  C123        S
5           373450  8.0500              S
6           330877  8.4583              Q
> 
> # Univariate analysis - Categorical Variable analysis
> train$Survived <- as.factor(train$Survived)
> train$Pclass <- as.factor(train$Pclass)
> 
> histogram(train$Survived,  xlab = "Survived" )
> 
> prop.table(table(train$Survived))

        0         1 
0.6161616 0.3838384 
> ## Only 38% of population survived in the training data
> 
> histogram(train$Pclass, xlab="Passenger Class")
> 
> prop.table(table(train$Pclass))

        1         2         3 
0.2424242 0.2065095 0.5510662 
> ## 55% of the population travelled in 3rd Class
> 
> histogram(train$Sex,  xlab = "Passenger Sex" )
> 
> prop.table(table(train$Sex))

  female     male 
0.352413 0.647587 
> ## 64% of the population are male and 35% of population or female
> 
> levels(train$Embarked)[1] <- "S"
> 
> histogram(train$Embarked,  xlab = "Passenger Embarked" )
> 
> prop.table(table(train$Embarked))

         S          C          Q 
0.72502806 0.18855219 0.08641975 
> 
> 
> histogram(train$Sex,  xlab = "Passenger Sex" )
> 
> prop.table(table(train$Sex))

  female     male 
0.352413 0.647587 
> ## 64% of the population are male and 35% of population or female
> 
> 
> summary(train$Age)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
   0.42   20.12   28.00   29.70   38.00   80.00     177 
> 
> histogram(train$Age)
> 
> summary(train$SibSp)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  0.000   0.000   0.000   0.523   1.000   8.000 
> 
> 
> summary(train$Fare)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   0.00    7.91   14.45   32.20   31.00  512.33 
> 
> histogram(train$Fare, xlab="Fare")
> 
> 
> test$Pclass <- as.factor(test$Pclass)
> 
> full <- bind_rows(train, test)
> 
> colSums(is.na(full))
PassengerId    Survived      Pclass        Name         Sex         Age 
          0         418           0           0           0         263 
      SibSp       Parch      Ticket        Fare       Cabin    Embarked 
          0           0           0           1           0           0 
> 
> full$Title <- sapply(full$Name, FUN = function(x) { strsplit(x, split = '[,.]')[[1]][2] } )
Error in strsplit(x, split = "[,.]") : non-character argument
Calls: sapply -> lapply -> FUN -> strsplit
Execution halted
